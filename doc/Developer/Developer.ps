%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 5.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            false def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(5.0) FMVERSION
1 1 0 0 612 792 0 1 20 FMDOCUMENT
0 0 /Times-Roman FMFONTDEFINE
1 0 /Times-Bold FMFONTDEFINE
2 0 /Helvetica-Bold FMFONTDEFINE
3 0 /Helvetica FMFONTDEFINE
4 0 /Courier FMFONTDEFINE
5 0 /Courier-Bold FMFONTDEFINE
6 0 /Times-Italic FMFONTDEFINE
7 0 /Courier-Oblique FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 756 558 756 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
72 72 558 72 2 L
0.5 H
2 Z
N
207 623.98 558 654 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 623.98 558 654 R
7 X
0 0 0 1 0 0 0 K
V
207 632.98 513 632.98 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
0 30 Q
0 X
0 0 0 1 0 0 0 K
-0.31 (The Zebra De) 207 664 S
-0.31 (v) 369.12 664 S
-0.31 (eloper\325) 383.36 664 S
-0.31 (s Guide) 464.5 664 S
1 18 Q
(Gary Granger) 207 565.98 T
2 10 Q
(National Center f) 207 155.31 T
(or Atmospheric Resear) 286.81 155.31 T
(c) 396.64 155.31 T
(h) 402.1 155.31 T
(Resear) 207 143.31 T
(c) 240.15 143.31 T
(h Data Pr) 245.61 143.31 T
(ogram) 289.31 143.31 T
(Zebra ver) 207 131.31 T
(sion 4.2 \321 Jan) 251.87 131.31 T
(uar) 321.8 131.31 T
(y 1996) 337.46 131.31 T
FMENDPAGE
%%EndPage: "1" 1
%%Page: "2" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0 X
0 0 0 1 0 0 0 K
(Cop) 72 679.98 T
(yright \050C\051 1987-1996 by UCAR) 91.88 679.98 T
(Uni) 72 666.98 T
(v) 89.7 666.98 T
(ersity Corporation for Atmospheric) 95.52 666.98 T
(Research All rights reserv) 72 653.98 T
(ed) 196.79 653.98 T
(No part of this w) 72 627.98 T
(ork co) 153.2 627.98 T
(v) 183.35 627.98 T
(ered by the cop) 189.17 627.98 T
(yrights) 262.69 627.98 T
-0.38 (herein may be reproduced or used in an) 72 614.98 P
-0.38 (y form or) 258.8 614.98 P
(by an) 72 601.98 T
(y means \321 graphic, electronic, or) 98.15 601.98 T
(mechanical, including photocop) 72 588.98 T
(ying, recording,) 225.53 588.98 T
(taping, or information storage and retrie) 72 575.98 T
(v) 263.66 575.98 T
(al) 269.36 575.98 T
(systems \321 without permission of the cop) 72 562.98 T
(yright) 271.21 562.98 T
(o) 72 549.98 T
(wner) 77.7 549.98 T
(.) 101.03 549.98 T
(This softw) 72 523.98 T
(are and an) 122.88 523.98 T
(y accompan) 172.01 523.98 T
(ying written) 229.48 523.98 T
(materials are pro) 72 510.98 T
(vided \322as is\323 without w) 152.46 510.98 T
(arranty) 265 510.98 T
(of an) 72 497.98 T
(y kind. UCAR e) 96.14 497.98 T
(xpressly disclaims all) 173.96 497.98 T
-0.52 (w) 72 484.98 P
-0.52 (arranties of an) 80.54 484.98 P
-0.52 (y kind, either e) 147.97 484.98 P
-0.52 (xpress or implied,) 218.22 484.98 P
(including b) 72 471.98 T
(ut not limited to the implied) 126.1 471.98 T
(w) 72 458.98 T
(arranties of merchantibility and \336tness for a) 80.54 458.98 T
(particular purpose. UCAR does not indemnify) 72 445.98 T
(an) 72 432.98 T
(y infringement of cop) 83.15 432.98 T
(yright, patent, or) 187.34 432.98 T
(trademark through use or modi\336cation of this) 72 419.98 T
(softw) 72 406.98 T
(are. UCAR does not pro) 98.54 406.98 T
(vide maintenance) 214.68 406.98 T
(or updates for its softw) 72 393.98 T
(are.) 182.53 393.98 T
FMENDPAGE
%%EndPage: "2" 2
%%Page: "3" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0 X
0 0 0 1 0 0 0 K
(The Zebra Developer\325s Guide 1) 72 679.98 T
0 0 0 1 0 0 0 K
0 14 Q
(CHAPTER 1) 72 642.65 T
(Mak) 207 642.65 T
(e T) 232.52 642.65 T
(ar) 249.67 642.65 T
(gets) 260.3 642.65 T
(5) 296.85 642.65 T
0 10 Q
(Imak) 207 623.32 T
(e Release 6) 227.45 623.32 T
(T) 207 611.32 T
(ransition) 212.76 611.32 T
(5) 257.76 611.32 T
-0.02 (The Con) 207 593.32 P
-0.02 (v) 241.3 593.32 P
-0.02 (entional Mak) 246.15 593.32 P
-0.02 (e) 299.08 593.32 P
(T) 207 581.32 T
(ar) 212.31 581.32 T
(gets) 219.9 581.32 T
(6) 246.01 581.32 T
(The T) 207 563.32 T
(op-Le) 230.36 563.32 T
(v) 253.99 563.32 T
(el Build) 258.84 563.32 T
(T) 207 551.32 T
(ar) 212.31 551.32 T
(gets) 219.9 551.32 T
(8) 246.01 551.32 T
(The Distrib) 207 533.32 T
(ution) 252.63 533.32 T
(T) 207 521.32 T
(ar) 212.31 521.32 T
(gets) 219.9 521.32 T
(8) 246.01 521.32 T
0 14 Q
(CHAPTER 2) 72 484.65 T
(Adv) 207 484.65 T
(anced Con-) 230.76 484.65 T
(\336guration) 207 468.65 T
(P) 207 452.65 T
(arameters) 214.57 452.65 T
(11) 282.99 452.65 T
0 10 Q
(Customizing) 207 433.32 T
(Distrib) 207 421.32 T
(utions) 234.58 421.32 T
(11) 269.03 421.32 T
(Customizing C Pre-pro-) 207 403.32 T
(cessor De\336nitions) 207 391.32 T
(12) 288.94 391.32 T
(Custom Con\336gurations) 207 373.32 T
(for Projects) 207 361.32 T
(13) 263.38 361.32 T
0 14 Q
(CHAPTER 3) 72 324.65 T
(Guide to Imak) 207 324.65 T
(e) 287.74 324.65 T
(for Zebra) 207 308.65 T
(De) 207 292.65 T
(v) 222.97 292.65 T
(elopers) 229.76 292.65 T
(15) 284.2 292.65 T
0 10 Q
(Ho) 207 273.32 T
(w Imak) 218.97 273.32 T
(e W) 249.14 273.32 T
(orks) 264.72 273.32 T
(16) 291.94 273.32 T
-0.11 (Imak) 207 255.32 P
-0.11 (e\336les V) 227.45 255.32 P
-0.11 (ersus Mak) 257.06 255.32 P
-0.11 (e-) 298.23 255.32 P
(\336le.cpp Files) 207 243.32 T
(19) 268.67 243.32 T
3 8 Q
(Similar) 207 230.65 T
(ities) 231.56 230.65 T
(19) 253.78 230.65 T
(Changes to Zebr) 207 220.65 T
(a with the) 266.5 220.65 T
(Installation of Imak) 207 212.65 T
(e) 273.54 212.65 T
(20) 285.98 212.65 T
0 10 Q
(General Imak) 207 197.32 T
(e) 261.6 197.32 T
(Features) 207 185.32 T
(21) 250.88 185.32 T
(Zebra\325) 207 167.32 T
(s Own Imak) 233.1 167.32 T
(e\336le) 281.88 167.32 T
(Features) 207 155.32 T
(25) 250.88 155.32 T
3 8 Q
(UI Load File T) 207 142.65 T
(argets) 256.28 142.65 T
(25) 286.51 142.65 T
(Prog) 207 132.65 T
(r) 223.82 132.65 T
(am T) 226.4 132.65 T
(argets) 243.66 132.65 T
(26) 273.9 132.65 T
(The Includes T) 207 122.65 T
(arget) 258.95 122.65 T
(27) 285.18 122.65 T
(The Distr) 207 112.65 T
(ib) 239.57 112.65 T
(ution List) 245.63 112.65 T
(T) 207 104.65 T
(argets) 210.93 104.65 T
(27) 241.16 104.65 T
0 10 Q
(Common Pitf) 459 681.32 T
(alls) 513.08 681.32 T
(30) 536.97 681.32 T
(T) 459 663.32 T
(ips and) 464.76 663.32 T
(Suggestions) 459 651.32 T
(30) 517.34 651.32 T
(Cutting Edge) 459 633.32 T
(35) 522.06 633.32 T
(Future) 459 615.32 T
(De) 459 603.32 T
(v) 470.41 603.32 T
(elopments) 475.26 603.32 T
(35) 526.37 603.32 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "3" 3
%%Page: "4" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "4" 4
%%Page: "5" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
72 445.03 558 445.03 2 L
2 Z
N
72 74.02 558 74.02 2 L
0.25 H
N
2 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
2 10 Q
-2.78 (5) 552.44 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
1.2 (CHAPTER 1) 72 677 S
0 24 Q
-0.48 (Mak) 207 677 S
-0.48 (e T) 249.31 677 S
-0.48 (ar) 277.28 677 S
-0.48 (gets) 294.53 677 S
0 12 Q
-0.2 (The Imak) 207 424 P
-0.2 (e implementation for the Zebra distrib) 253 424 P
-0.2 (ution contains se) 434.76 424 P
-0.2 (v) 514.73 424 P
-0.2 (eral tar-) 520.55 424 P
3.27 (gets a) 207 410 P
3.27 (v) 237.69 410 P
3.27 (ailable for con) 243.39 410 P
3.27 (v) 318.75 410 P
3.27 (eniently handling the entire distrib) 324.57 410 P
3.27 (ution. This) 502.73 410 P
0.54 (chapter describes these tar) 207 396 P
0.54 (gets. The descriptions and e) 334.68 396 P
0.54 (xamples assume a) 470.28 396 P
2.95 (w) 207 382 P
2.95 (orking kno) 215.54 382 P
2.95 (wledge of) 270.53 382 P
4 F
7.08 (make\0501\051) 327.08 382 P
0 F
2.95 (. F) 377.48 382 P
2.95 (or an e) 392.92 382 P
2.95 (xplanation of Imak) 431.3 382 P
2.95 (e, see) 528.4 382 P
(Chapter) 207 368 T
(3, \322Guide to Imak) 247.99 368 T
(e for Zebra De) 334.52 368 T
(v) 404.52 368 T
(elopers.) 410.34 368 T
(\323) 447.16 368 T
72 324 558 327 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 325.5 558 325.5 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 325.5 198 325.5 2 L
0 Z
N
0 0 612 792 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(1.1) 181.32 331 T
(Imake Release 6 T) 207 331 T
(ransition) 309.43 331 T
0 F
-0.18 (Zebra 4.2 incorporates the Imak) 207 306 P
-0.18 (e system from the MIT Release 6 of X11.) 359.79 306 P
0.64 (A fe) 207 292 P
0.64 (w of Zebra\325) 228.33 292 P
0.64 (s rules and macros had to change to be compatible with) 285.6 292 P
1.14 (the Release 6 changes. Other changes were made to \336x inconsistencies) 207 278 P
0.77 (between the Zebra Imak) 207 264 P
0.77 (e implementation and the con) 325.5 264 P
0.77 (v) 470.1 264 P
0.77 (entions of Imak) 475.92 264 P
0.77 (e) 552.67 264 P
1.74 (proper) 207 250 P
1.74 (. Thanks to the Release 6 impro) 237.66 250 P
1.74 (v) 400.26 250 P
1.74 (ements, the gray area between) 406.08 250 P
1.58 (Imak) 207 236 P
1.58 (e con\336guration and the X11 con\336guration has become much nar-) 231.54 236 P
0.11 (ro) 207 222 P
0.11 (wer and more clearly de\336ned. The Zebra changes try to tak) 216.7 222 P
0.11 (e adv) 501.22 222 P
0.11 (antage) 526.68 222 P
(of this separation.) 207 208 T
0.03 (In particular) 207 182 P
0.03 (, de) 265.53 182 P
0.03 (v) 282.59 182 P
0.03 (elopers should be a) 288.41 182 P
0.03 (w) 380.64 182 P
0.03 (are of the follo) 389.18 182 P
0.03 (wing changes which) 459.96 182 P
(may break e) 207 168 T
(xisting Imak) 265.46 168 T
(e\336les.) 325.68 168 T
5 11 Q
(\245) 207 148 T
0 12 Q
2.04 (Rather than rede\336ne the Imak) 221.4 148 P
2.04 (e rule) 372.09 148 P
4 F
4.9 (NormalProgramTarget) 406.16 148 P
0 F
2.04 ( as) 542.96 148 P
0.01 (before, Zebra uses its o) 221.4 134 P
0.01 (wn rule called) 332.78 134 P
4 F
0.03 (CompleteProgramTarget) 403.8 134 P
0 F
0.01 (.) 555 134 P
(The) 221.4 120 T
4 F
(NormalProgramTarget) 243.06 120 T
0 F
( rule does not install its tar) 379.86 120 T
(get.) 506.98 120 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "5" 5
%%Page: "6" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Make T) 189 736.18 T
(ar) 218.79 736.18 T
(g) 227.16 736.18 T
(ets) 232.75 736.18 T
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
2 10 Q
(6) 54 60.29 T
2 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 11 Q
(\245) 189 678.02 T
0 12 Q
1.66 (The system libraries LIBMA) 203.4 678.02 P
1.66 (TH, LIBTERMCAP) 346.03 678.02 P
1.66 (, and LIBREGEXP) 444.36 678.02 P
0.03 (were originally automatically speci\336ed on e) 203.4 664.02 P
0.03 (v) 413.56 664.02 P
0.03 (ery link) 419.38 664.02 P
0.03 (er command line.) 456.29 664.02 P
1.8 (Among other things, this generates w) 203.4 650.02 P
1.8 (arnings on some architectures) 391.62 650.02 P
-0.2 (about super\337uous libraries from which no symbols were resolv) 203.4 636.02 P
-0.2 (ed. The) 504.22 636.02 P
0.44 (required system libraries must no) 203.4 622.02 P
0.44 (w be passed e) 364.86 622.02 P
0.44 (xplicitly in the system) 432.32 622.02 P
9.69 (libraries parameter of the) 203.4 608.02 P
4 F
23.25 (CompleteProgramTarget) 366.11 608.02 P
0 F
9.69 ( or) 517.32 608.02 P
4 F
(NormalProgramTarget) 203.4 594.02 T
0 F
( macro rules.) 340.2 594.02 T
5 11 Q
(\245) 189 577.02 T
0 12 Q
0.42 (The mak) 203.4 577.02 P
0.42 (e library v) 246.03 577.02 P
0.42 (ariables ha) 295.89 577.02 P
0.42 (v) 347.73 577.02 P
0.42 (e been generalized to mak) 353.55 577.02 P
0.42 (e it easier to) 480.41 577.02 P
(include ne) 203.4 563.02 T
(w libraries in the future.) 252.76 563.02 T
1.15 (Essentially all e) 189 537.02 P
1.15 (xisting Imak) 267.12 537.02 P
1.15 (e\336les require these changes to restore their) 328.48 537.02 P
(original beha) 189 523.02 T
(vior:) 251.75 523.02 T
1 F
(1.) 192 503.02 T
0 F
(Change all occurrences of) 205.2 503.02 T
4 F
(NormalProgramTarget) 333.16 503.02 T
0 F
( to) 469.96 503.02 T
4 F
(CompleteProgramTarget) 205.2 489.02 T
0 F
(.) 356.4 489.02 T
1 F
(2.) 192 463.02 T
0 F
1.46 (Set a SYSLIBS v) 205.2 463.02 P
1.46 (ariable in the Imak) 292.95 463.02 P
1.46 (e\336le to contain the appropriate) 387.52 463.02 P
-0.05 (combination of system libraries necessary for the program, from LIB-) 205.2 449.02 P
0.9 (TERMCAP) 205.2 435.02 P
0.9 (, LIBREGEXP) 260.54 435.02 P
0.9 (, and LIBMA) 332.11 435.02 P
0.9 (TH. P) 397.58 435.02 P
0.9 (ass $\050SYSLIBS\051 as the) 426.97 435.02 P
(last parameter to) 205.2 421.02 T
4 F
(CompleteProgramTarget) 288.18 421.02 T
0 F
(.) 439.38 421.02 T
1 F
(3.) 192 395.02 T
0 F
0.74 (Replace speci\336c libraries with their generalized names, where possi-) 205.2 395.02 P
0.32 (ble. Use ZLIBS for all clients requiring the general Zebra library and) 205.2 381.02 P
0.22 (utilities. Use DF) 205.2 367.02 P
0.22 (ALIBS for programs which access the Data File F) 283.77 367.02 P
0.22 (or-) 526.01 367.02 P
2.57 (mat interf) 205.2 353.02 P
2.57 (ace in the datastore library) 254.64 353.02 P
2.57 (, b) 391.42 353.02 P
2.57 (ut use DSLIBS for clients) 405.74 353.02 P
-0.18 (which only use the datastore public protocol interf) 205.2 339.02 P
-0.18 (ace and do not need) 445.43 339.02 P
(to read or write \336le formats.) 205.2 325.02 T
4 F
(ZLIBS = $\050LIBZEB\051 $\050LIBRDSS\051) 212.4 299.02 T
(DFALIBS = $\050LIBZEBDS\051 $\050LIBNETCDF\051 $\050LIBHDF\051) 212.4 285.02 T
(DSLIBS = $\050LIBZEBDS\051) 212.4 271.02 T
54 227.02 540 230.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 228.52 540 228.52 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
54 228.52 180 228.52 2 L
0 Z
N
0 0 612 792 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(1.2) 163.32 234.02 T
(The Con) 189 234.02 T
(ventional Make T) 236.52 234.02 T
(ar) 332.26 234.02 T
(g) 343.42 234.02 T
(ets) 350.87 234.02 T
0 F
5.59 (The con) 189 209.02 P
5.59 (v) 233.1 209.02 P
5.59 (entional mak) 238.91 209.02 P
5.59 (e tar) 306.71 209.02 P
5.59 (gets are) 333.07 209.02 P
4 F
13.41 (all) 384.23 209.02 P
0 F
5.59 (,) 405.83 209.02 P
4 F
13.41 (install) 417.41 209.02 P
0 F
5.59 (,) 467.81 209.02 P
4 F
13.41 (includes) 479.4 209.02 P
0 F
5.59 (,) 537 209.02 P
4 F
2.13 (depend) 189 195.02 P
0 F
0.89 (,) 232.2 195.02 P
4 F
2.13 (Makefile) 239.09 195.02 P
0 F
0.89 (,) 296.69 195.02 P
4 F
2.13 (Makefiles,) 303.58 195.02 P
0 F
0.89 ( and) 375.58 195.02 P
4 F
2.13 (clean) 400.68 195.02 P
0 F
0.89 (. All of these tar) 436.68 195.02 P
0.89 (gets,) 517.67 195.02 P
0.59 (with the natural e) 189 181.02 P
0.59 (xception of Mak) 274.23 181.02 P
0.59 (e\336le, will descend into an) 354.61 181.02 P
0.59 (y directories) 479.76 181.02 P
1.33 (of the directory from which the mak) 189 167.02 P
1.33 (e be) 370.84 167.02 P
1.33 (gins. Mak) 391.65 167.02 P
1.33 (es be) 440.86 167.02 P
1.33 (gun at the top-) 466.34 167.02 P
0.61 (le) 189 153.02 P
0.61 (v) 197.36 153.02 P
0.61 (el directory will tra) 203.18 153.02 P
0.61 (v) 297.08 153.02 P
0.61 (erse the whole distrib) 302.9 153.02 P
0.61 (ution tree, e) 407.46 153.02 P
0.61 (xcept of course) 465.48 153.02 P
(for those directories which ha) 189 139.02 T
(v) 331.39 139.02 T
(e been disabled in) 337.21 139.02 T
4 F
(config.h) 426.53 139.02 T
0 F
(.) 484.13 139.02 T
(all:) 189 113.02 T
4.36 (The def) 284.4 113.02 P
4.36 (ault tar) 325.62 113.02 P
4.36 (get for an) 363.42 113.02 P
4.36 (y Mak) 417.94 113.02 P
4.36 (e\336le. This tar) 453.18 113.02 P
4.36 (get) 525.34 113.02 P
1.78 (compiles, links, and archi) 284.4 99.02 P
1.78 (v) 412.42 99.02 P
1.78 (es all of the tar) 418.24 99.02 P
1.78 (gets in a) 496.45 99.02 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "6" 6
%%Page: "7" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(The Con) 207 736.18 T
(ventional Make T) 242.64 736.18 T
(ar) 314.44 736.18 T
(g) 322.81 736.18 T
(ets) 328.4 736.18 T
72 726.98 558 726.98 2 L
0.25 H
N
72 74.02 558 74.02 2 L
2 Z
N
2 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
2 10 Q
-2.78 (7) 552.44 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
3.23 (directory) 302.4 680.03 P
3.23 (, b) 344.94 680.03 P
3.23 (ut stops short of installing an) 359.93 680.03 P
3.23 (y of the) 514.89 680.03 P
0.62 (tar) 302.4 666.03 P
0.62 (gets. Hence, this is the usual tar) 314.84 666.03 P
0.62 (get when b) 470.33 666.03 P
0.62 (uilding) 523.99 666.03 P
4.28 (a single directory indi) 302.4 652.03 P
4.28 (vidually) 419.93 652.03 P
4.28 (, or simply testing) 458.48 652.03 P
(some con\336guration changes with a b) 302.4 638.03 T
(uild.) 477.8 638.03 T
(install:) 207 612.03 T
1.18 (This tar) 302.4 612.03 P
1.18 (get e) 340.36 612.03 P
1.18 (x) 364.36 612.03 P
1.18 (ecutes the all tar) 370.18 612.03 P
1.18 (get and then e) 451.83 612.03 P
1.18 (x) 522.19 612.03 P
1.18 (ecutes) 528.01 612.03 P
4.66 (an) 302.4 598.03 P
4.66 (y install tar) 313.55 598.03 P
4.66 (gets. Installation is not limited to) 376.66 598.03 P
2.09 (programs and libraries; library \322data \336les\323 such as) 302.4 584.03 P
-0.26 (icon bitmaps, color tables, maps, and UI load \336les are) 302.4 570.03 P
(also installed under this tar) 302.4 556.03 T
(get.) 431.51 556.03 T
(includes:) 207 530.03 T
2.03 (The includes tar) 302.4 530.03 P
2.03 (get installs public header \336les into) 383.55 530.03 P
0.86 (the b) 302.4 516.03 P
0.86 (uild tree\325) 326.69 516.03 P
0.86 (s include directory) 370.55 516.03 P
0.86 (,) 460.81 516.03 P
4 F
2.07 (./include) 467.68 516.03 P
0 F
0.86 (. The) 532.48 516.03 P
5.49 (most important public include \336les come from) 302.4 502.03 P
4 F
55.53 (./config/project) 302.4 488.03 P
0 F
23.14 (,) 417.6 488.03 P
4 F
55.53 (./src/lib) 446.74 488.03 P
0 F
23.14 (, and) 511.54 488.03 P
4 F
(./src/ds) 302.4 474.03 T
0 F
(.) 360 474.03 T
(depend:) 207 448.03 T
3.54 (Adds header \336le dependencies to the end of the) 302.4 448.03 P
0.62 (Mak) 302.4 434.03 P
0.62 (e\336le. Consequently) 324.28 434.03 P
0.62 (, this tar) 416.78 434.03 P
0.62 (get usually follo) 456.79 434.03 P
0.62 (ws a) 535.72 434.03 P
0.73 (Mak) 302.4 420.03 P
0.73 (e\336le or Mak) 324.28 420.03 P
0.73 (e\336les tar) 384.27 420.03 P
0.73 (get, since those tw) 425.77 420.03 P
0.73 (o tar) 516.49 420.03 P
0.73 (gets) 538.67 420.03 P
0.33 (o) 302.4 406.03 P
0.33 (v) 308.22 406.03 P
0.33 (erwrite an) 314.04 406.03 P
0.33 (y e) 362.5 406.03 P
0.33 (xisting Mak) 376.98 406.03 P
0.33 (e\336le and with it an) 434.87 406.03 P
0.33 (y prior) 525.34 406.03 P
(dependenc) 302.4 392.03 T
(y information.) 353.53 392.03 T
(Mak) 207 366.03 T
(e\336le:) 228.88 366.03 T
1.99 (Uses imak) 302.4 366.03 P
1.99 (e to process the Imak) 354.59 366.03 P
1.99 (e\336le in the current) 464.39 366.03 P
(directory to produce a Mak) 302.4 352.03 T
(e\336le.) 432.91 352.03 T
(Mak) 207 326.03 T
(e\336les:) 228.88 326.03 T
8.65 (Uses imak) 302.4 326.03 P
8.65 (e to generate Mak) 361.26 326.03 P
8.65 (e\336les for each) 473.39 326.03 P
1.01 (subdirectory) 302.4 312.03 P
1.01 (, without requiring that the subdirectory) 361.61 312.03 P
(already ha) 302.4 298.03 T
(v) 351.8 298.03 T
(e a Mak) 357.62 298.03 T
(e\336le.) 396.16 298.03 T
(clean:) 207 272.03 T
0.77 (The clean tar) 302.4 272.03 P
0.77 (get remo) 366.37 272.03 P
0.77 (v) 409.29 272.03 P
0.77 (es an) 415.11 272.03 P
0.77 (y programs, object \336les,) 440.02 272.03 P
3.08 (backup \336les, libraries, and so on, generated by a) 302.4 258.03 P
-0.04 (speci\336c directory) 302.4 244.03 P
-0.04 (. The tar) 384.56 244.03 P
-0.04 (get then propag) 424.6 244.03 P
-0.04 (ates to all of) 499.12 244.03 P
(the subdirectories.) 302.4 230.03 T
0.97 (The con) 207 204.03 P
0.97 (v) 246.48 204.03 P
0.97 (entional tar) 252.3 204.03 P
0.97 (gets usually follo) 307.38 204.03 P
0.97 (w this order: Mak) 391.7 204.03 P
0.97 (e\336le, Mak) 480.15 204.03 P
0.97 (e\336les,) 529.67 204.03 P
1.08 (includes, depend, and \336nally all or install. Note that the includes tar) 207 190.03 P
1.08 (get) 543.34 190.03 P
0.8 (must precede the depend tar) 207 176.03 P
0.8 (get for the \336rst b) 344.63 176.03 P
0.8 (uild attempt, otherwise the) 427.6 176.03 P
0.04 (public include \336les cannot be found by the) 207 162.03 P
4 F
0.09 (makedepend) 414.61 162.03 P
0 F
0.04 ( program since) 486.61 162.03 P
(the header \336les ha) 207 148.03 T
(v) 293.74 148.03 T
(e not been installed yet.) 299.56 148.03 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "7" 7
%%Page: "8" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Make T) 189 736.18 T
(ar) 218.79 736.18 T
(g) 227.16 736.18 T
(ets) 232.75 736.18 T
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
2 10 Q
(8) 54 60.29 T
2 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 671.02 540 674.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 672.52 540 672.52 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
54 672.52 180 672.52 2 L
0 Z
N
0 0 612 792 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(1.3) 163.32 678.02 T
(The T) 189 678.02 T
(op-Le) 220.04 678.02 T
(vel Build T) 252.53 678.02 T
(ar) 312.25 678.02 T
(g) 323.41 678.02 T
(ets) 330.86 678.02 T
0 F
1.53 (A couple of tar) 189 653.02 P
1.53 (gets are used e) 265.7 653.02 P
1.53 (xclusi) 340.43 653.02 P
1.53 (v) 368.8 653.02 P
1.53 (ely by the top-le) 374.62 653.02 P
1.53 (v) 457.25 653.02 P
1.53 (el Imak) 463.07 653.02 P
1.53 (e\336le for) 500.81 653.02 P
1.65 (performing full b) 189 639.02 P
1.65 (uilds of the installation. The most important tar) 274.71 639.02 P
1.65 (get is) 512.68 639.02 P
6 F
0.83 (W) 189 625.02 P
0.83 (orld) 197.89 625.02 P
0 F
0.83 (, which tak) 217.9 625.02 P
0.83 (es care of performing all of the con) 272.43 625.02 P
0.83 (v) 446.74 625.02 P
0.83 (entional tar) 452.56 625.02 P
0.83 (gets in) 507.5 625.02 P
0.16 (the correct order) 189 611.02 P
0.16 (. First, the W) 267.96 611.02 P
0.16 (orld tar) 330.49 611.02 P
0.16 (get b) 365.43 611.02 P
0.16 (uilds the) 389.02 611.02 P
4 F
0.39 (imake) 433.35 611.02 P
0 F
0.16 ( program, then) 469.35 611.02 P
2.23 (it generates the top-le) 189 597.02 P
2.23 (v) 299.04 597.02 P
2.23 (el Mak) 304.86 597.02 P
2.23 (e\336le, and continues with the Mak) 340.64 597.02 P
2.23 (e\336les,) 511.67 597.02 P
(clean, includes, depend, and install tar) 189 583.02 T
(gets, in that order) 372.08 583.02 T
(.) 455.41 583.02 T
1.81 (The) 189 557.02 P
6 F
1.81 (Everything) 212.47 557.02 P
0 F
1.81 ( tar) 265.12 557.02 P
1.81 (get attempts to sa) 282.37 557.02 P
1.81 (v) 371.22 557.02 P
1.81 (e time in dif) 377.04 557.02 P
1.81 (\336cult b) 440.49 557.02 P
1.81 (uilds by per-) 475.73 557.02 P
0.42 (forming the same actions as the W) 189 543.02 P
0.42 (orld tar) 356.52 543.02 P
0.42 (get, e) 391.71 543.02 P
0.42 (xcept that the Ev) 417.94 543.02 P
0.42 (erything) 500 543.02 P
-0.1 (tar) 189 529.02 P
-0.1 (get omits the cleaning step. This allo) 201.44 529.02 P
-0.1 (ws most changes to the con\336gura-) 376.86 529.02 P
0.92 (tion or distrib) 189 515.02 P
0.92 (ution to be updated without requiring e) 255.93 515.02 P
0.92 (v) 448.45 515.02 P
0.92 (erything to be re-) 454.27 515.02 P
0.73 (compiled. Use this tar) 189 501.02 P
0.73 (get only if you kno) 296.29 501.02 P
0.73 (w that e) 390.22 501.02 P
0.73 (xisting object \336les and) 429.49 501.02 P
0.65 (programs do not need to be re-compiled to account for a particular con-) 189 487.02 P
-0.18 (\336guration change. Generally) 189 473.02 P
-0.18 (, it is safer to do the \324mak) 324.82 473.02 P
-0.18 (e clean\325 step if time) 446.08 473.02 P
(allo) 189 459.02 T
(ws, since this ensures that e) 206.7 459.02 T
(v) 339.05 459.02 T
(erything will be up-to-date.) 344.87 459.02 T
0.03 (If you kno) 189 433.02 P
0.03 (w that none of the object code needs to be re-compiled, and no) 238.74 433.02 P
1.07 (header \336les need to be installed or updated, then performing the) 189 419.02 P
6 F
1.07 (install) 509.99 419.02 P
0 F
0.47 (tar) 189 405.02 P
0.47 (get from the top-le) 201.44 405.02 P
0.47 (v) 292.2 405.02 P
0.47 (el directory should suf) 298.02 405.02 P
0.47 (\336ce to \336nish compiling and) 406.78 405.02 P
(installing an interrupted b) 189 391.02 T
(uild.) 312.42 391.02 T
54 347.02 540 350.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 348.52 540 348.52 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
54 348.52 180 348.52 2 L
0 Z
N
0 0 612 792 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(1.4) 163.32 354.02 T
(The Distrib) 189 354.02 T
(ution T) 251.44 354.02 T
(ar) 290.47 354.02 T
(g) 301.63 354.02 T
(ets) 309.08 354.02 T
0 F
1.6 (Other mak) 189 329.02 P
1.6 (e tar) 241.47 329.02 P
1.6 (gets ha) 263.85 329.02 P
1.6 (v) 298.87 329.02 P
1.6 (e been added to the con) 304.69 329.02 P
1.6 (v) 425.2 329.02 P
1.6 (entional tar) 431.02 329.02 P
1.6 (gets which) 486.74 329.02 P
-0.15 (allo) 189 315.02 P
-0.15 (w control of the distrib) 206.7 315.02 P
-0.15 (ution tree as a whole, re) 315.84 315.02 P
-0.15 (g) 429.54 315.02 P
-0.15 (ardless of which parts) 435.48 315.02 P
(of the distrib) 189 301.02 T
(ution are being b) 250.09 301.02 T
(uilt.) 330.84 301.02 T
(dist\336les:) 189 275.02 T
2.44 (Echoes to the terminal the path names of all \336les) 284.4 275.02 P
0.91 (which are meant to be distrib) 284.4 261.02 P
0.91 (uted in a directory and) 428.37 261.02 P
9.56 (all of the subdirectories.  By setting the) 284.4 247.02 P
4 F
2.49 (DISTCURDIR) 284.4 233.02 P
0 F
1.04 ( v) 356.4 233.02 P
1.04 (ariable on the command line, all of) 366.14 233.02 P
0.34 (the \336le names printed will be pre\336x) 284.4 219.02 P
0.34 (ed with the v) 456.94 219.02 P
0.34 (alue) 520.01 219.02 P
1.7 (of the v) 284.4 205.02 P
1.7 (ariable.  See the) 324.16 205.02 P
4 F
4.08 ( tarfile:) 405.91 205.02 P
0 F
1.7 ( tar) 474.79 205.02 P
1.7 (get in the) 491.93 205.02 P
-0.03 (top-le) 284.4 191.02 P
-0.03 (v) 312.1 191.02 P
-0.03 (el Imak) 317.92 191.02 P
-0.03 (e\336le for an e) 354.09 191.02 P
-0.03 (xample of ho) 414.14 191.02 P
-0.03 (w this can be) 477.1 191.02 P
(used.) 284.4 177.02 T
(distmak) 189 151.02 T
(e\336les:) 226.88 151.02 T
6.91 (Mak) 284.4 151.02 P
6.91 (es Mak) 306.28 151.02 P
6.91 (e\336les for ALL of the distrib) 348.05 151.02 P
6.91 (ution) 515.33 151.02 P
1.82 (directories, not just those which ha) 284.4 137.02 P
1.82 (v) 460.57 137.02 P
1.82 (e been \322turned) 466.39 137.02 P
0.58 (on\323 to be b) 284.4 123.02 P
0.58 (uilt.  This is necessary before performing) 338.89 123.02 P
5.11 (other distrib) 284.4 109.02 P
5.11 (ution tar) 347.6 109.02 P
5.11 (gets in order to create the) 392.83 109.02 P
(Mak) 284.4 95.02 T
(e\336le which the tar) 306.28 95.02 T
(gets will operate on.) 392.38 95.02 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "8" 8
%%Page: "9" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(The Distrib) 207 736.18 T
(ution T) 253.83 736.18 T
(ar) 283.1 736.18 T
(g) 291.47 736.18 T
(ets) 297.06 736.18 T
72 726.98 558 726.98 2 L
0.25 H
N
72 74.02 558 74.02 2 L
2 Z
N
2 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
2 10 Q
-2.78 (9) 552.44 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(distclean:) 207 678.02 T
0.13 (Cleans in ALL directories in the distrib) 302.4 678.02 P
0.13 (ution.  This is) 491.6 678.02 P
0.37 (useful when programs ha) 302.4 664.02 P
0.37 (v) 424.25 664.02 P
0.37 (e been compiled e) 430.07 664.02 P
0.37 (xplicitly) 517.99 664.02 P
1.46 (from within a directory which has been disabled in) 302.4 650.02 P
0.48 (the re) 302.4 636.02 P
0.48 (gular distrib) 329.69 636.02 P
0.48 (ution tree.  From the top-le) 388.26 636.02 P
0.48 (v) 519.69 636.02 P
0.48 (el, this) 525.51 636.02 P
2.09 (tar) 302.4 622.02 P
2.09 (get also remo) 314.84 622.02 P
2.09 (v) 383.5 622.02 P
2.09 (es the) 389.32 622.02 P
4 F
5.01 (./include) 424.15 622.02 P
0 F
2.09 ( directory) 488.95 622.02 P
2.09 (. As) 536.58 622.02 P
1.79 (the name implies, this tar) 302.4 608.02 P
1.79 (get essentially returns the) 430.33 608.02 P
3.46 (entire distrib) 302.4 594.02 P
3.46 (ution tree to the original distrib) 366.61 594.02 P
3.46 (ution) 533.33 594.02 P
(state, e) 302.4 580.02 T
(xcept for the presence of Mak) 335.54 580.02 T
(e\336les.) 479.04 580.02 T
(tar\336le:) 207 554.02 T
1.51 (In the top-le) 302.4 554.02 P
1.51 (v) 363.79 554.02 P
1.51 (el Imak) 369.61 554.02 P
1.51 (e\336le, this tar) 407.33 554.02 P
1.51 (get uses the other) 469.8 554.02 P
1.11 (distrib) 302.4 540.02 P
1.11 (ution tar) 332.83 540.02 P
1.11 (gets to generate a compressed tar \336le) 374.06 540.02 P
0.77 (of all of the \336les in the original distrib) 302.4 526.02 P
0.77 (ution. Ev) 490.98 526.02 P
0.77 (en if) 535.57 526.02 P
0.89 (the tree has been compiled and all of the directories) 302.4 512.02 P
0 (contain object \336les and e) 302.4 498.02 P
0 (x) 421.55 498.02 P
0 (ecutables, the generated tar) 427.37 498.02 P
3.87 (\336le will only include the \336les from the original) 302.4 484.02 P
0.45 (distrib) 302.4 470.02 P
0.45 (ution tree. First, use the distmak) 332.83 470.02 P
0.45 (e\336les tar) 489.32 470.02 P
0.45 (get to) 530.55 470.02 P
1.13 (ensure that the e) 302.4 456.02 P
1.13 (v) 383.82 456.02 P
1.13 (ery directory has a Mak) 389.64 456.02 P
1.13 (e\336le, e) 508.02 456.02 P
1.13 (v) 540.85 456.02 P
1.13 (en) 546.67 456.02 P
3.08 (those not being b) 302.4 442.02 P
3.08 (uilt. Then, run \324mak) 393.73 442.02 P
3.08 (e tar\336le\325 to) 499.18 442.02 P
1.34 (mak) 302.4 428.02 P
1.34 (e the tar \336le, optionally specifying the name of) 322.94 428.02 P
-0.09 (the tar \336le in the) 302.4 414.02 P
4 F
-0.21 (TARFILE) 383.61 414.02 P
0 F
-0.09 ( v) 434.01 414.02 P
-0.09 (ariable on the command) 442.62 414.02 P
20.19 (line. Examine the actual rules in) 302.4 400.02 P
4 F
(zebra/) 302.4 386.02 T
(Imakefile) 345.6 386.02 T
0 F
( for more details on this tar) 410.4 386.02 T
(get.) 540.17 386.02 T
-0.02 (Zebra\325) 207 360.02 P
-0.02 (s customizations to its Imak) 238.32 360.02 P
-0.02 (e implementation are described further) 372.13 360.02 P
1.75 (in Chapter) 207 346.02 P
1.75 (3, \322Guide to Imak) 262.08 346.02 P
1.75 (e for Zebra De) 353.87 346.02 P
1.75 (v) 429.12 346.02 P
1.75 (elopers.) 434.94 346.02 P
1.75 (\323 It also includes) 471.76 346.02 P
1.02 (se) 207 332.02 P
1.02 (v) 216.7 332.02 P
1.02 (eral e) 222.52 332.02 P
1.02 (xamples of the \337e) 249.68 332.02 P
1.02 (xibility of Imak) 338.22 332.02 P
1.02 (e in general and the distrib) 415.48 332.02 P
1.02 (u-) 548 332.02 P
(tion tar) 207 318.02 T
(gets in particular) 241.12 318.02 T
(.) 321.11 318.02 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "9" 9
%%Page: "10" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Make T) 189 736.18 T
(ar) 218.79 736.18 T
(g) 227.16 736.18 T
(ets) 232.75 736.18 T
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
2 10 Q
(10) 54 60.29 T
2 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "10" 10
%%Page: "11" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
72 445.03 558 445.03 2 L
2 Z
N
72 74.02 558 74.02 2 L
0.25 H
N
2 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
2 10 Q
-2.78 (11) 546.88 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
1.2 (CHAPTER 2) 72 677 S
0 24 Q
-0.48 (Adv) 207 677 S
-0.48 (anced Con\336guration) 246.29 677 S
-0.48 (P) 207 647 S
-0.48 (arameters) 219.51 647 S
0 12 Q
2.67 (This chapter lists the adv) 207 424 P
2.67 (anced and specialized con\336guration options) 337.36 424 P
2.14 (accessible through the symbols in) 207 410 P
4 F
5.13 (config.h) 382.67 410 P
0 F
2.14 (. These options include) 440.27 410 P
-0.18 (customized distrib) 207 396 P
-0.18 (utions and grouped, project-speci\336c con\336guration de\336-) 294.92 396 P
1.19 (nitions. The) 207 382 P
4 F
2.87 (config.h) 269.72 382 P
0 F
1.19 ( \336le contains a good deal of e) 327.32 382 P
1.19 (xplanation about) 476.48 382 P
2.37 (these adv) 207 368 P
2.37 (anced parameters, so it should be consulted along with this) 254.06 368 P
0.51 (appendix. This chapter also assumes some kno) 207 354 P
0.51 (wledge of the basic mak) 434.09 354 P
0.51 (e) 552.67 354 P
(tar) 207 340 T
(gets mentioned in Section) 219.44 340 T
(1.4,  \322The Distrib) 346.78 340 T
(ution T) 430.86 340 T
(ar) 464.9 340 T
(gets\323, on page) 474.01 340 T
(8.) 545.33 340 T
72 296 558 299 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 297.5 558 297.5 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 297.5 198 297.5 2 L
0 Z
N
0 0 612 792 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(2.1) 181.32 303 T
(Customizing Distrib) 207 303 T
(utions) 320.1 303 T
0 F
0.69 (It is possible to use the Zebra distrib) 207 278 P
0.69 (ution tree and con\336guration system) 385.92 278 P
-0.17 (to de) 207 264 P
-0.17 (v) 230.19 264 P
-0.17 (elop a \322customized\323 distrib) 236.01 264 P
-0.17 (ution which does not include all parts of) 366.23 264 P
0.04 (the system. F) 207 250 P
0.04 (or e) 270.58 250 P
0.04 (xample, some sites and projects will not need an) 288.77 250 P
0.04 (y of the) 521.25 250 P
0.02 (ingest modules, nor the Optimizer) 207 236 P
0.02 (, so it is bene\336cial to be able to remo) 370.24 236 P
0.02 (v) 546.85 236 P
0.02 (e) 552.67 236 P
-0.01 (these directories from the distrib) 207 222 P
-0.01 (ution tree without modifying an) 362.7 222 P
-0.01 (y Imak) 515.15 222 P
-0.01 (e-) 548.68 222 P
(\336les and without af) 207 208 T
(fecting the b) 299.03 208 T
(uild beha) 358.78 208 T
(vior) 402.86 208 T
(.) 421.54 208 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "11" 11
%%Page: "12" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Ad) 189 736.18 T
(v) 200.86 736.18 T
(anced Con\336guration P) 205.69 736.18 T
(arameter) 301.43 736.18 T
(s) 339.31 736.18 T
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
2 10 Q
(12) 54 60.29 T
2 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.8 (Six parameters control the distrib) 189 678.02 P
0.8 (ution of v) 351.96 678.02 P
0.8 (arious optional directories in) 399.94 678.02 P
1.39 (the Zebra distrib) 189 664.02 P
1.39 (ution tree. These are listed in T) 270.85 664.02 P
1.39 (able) 427.85 664.02 P
1.39 (4 along with their) 450.84 664.02 P
(def) 189 650.02 T
(ault de\336nitions and the directories the) 204.2 650.02 T
(y af) 385.01 650.02 T
(fect.) 403.03 650.02 T
1.27 (All of the symbols def) 189 481.02 P
1.27 (ault to YES. Setting a symbol to NO causes the) 301.27 481.02 P
-0.19 (Imak) 189 467.02 P
-0.19 (e\336le of the parent directory to for) 213.54 467.02 P
-0.19 (get about its subdirectory) 372.17 467.02 P
-0.19 (, allo) 492.49 467.02 P
-0.19 (wing) 516 467.02 P
2.18 (the subdirectory to be remo) 189 453.02 P
2.18 (v) 329.51 453.02 P
2.18 (ed. Once all of the Mak) 335.33 453.02 P
2.18 (e\336les ha) 459.42 453.02 P
2.18 (v) 501.02 453.02 P
2.18 (e been) 506.84 453.02 P
2.93 (updated \050\324mak) 189 439.02 P
2.93 (e Mak) 261.46 439.02 P
2.93 (e\336les\325\051 with the ne) 294.59 439.02 P
2.93 (w de\336nitions, no mak) 392.73 439.02 P
2.93 (es will) 505.4 439.02 P
(descend into that directory) 189 425.02 T
(.) 315.86 425.02 T
2.48 (These symbols are dif) 189 399.02 P
2.48 (ferent from the) 301.8 399.02 P
4 F
5.96 (Build) 384.22 399.02 P
0 F
2.48 ( symbols which control) 420.22 399.02 P
1.4 (which parts of the distrib) 189 385.02 P
1.4 (ution are to be b) 314.35 385.02 P
1.4 (uilt. F) 397.7 385.02 P
1.4 (or e) 427.6 385.02 P
1.4 (xample, as long as) 447.14 385.02 P
4 F
2.37 (DistributeIngest) 189 371.02 P
0 F
0.99 ( has been de\336ned) 304.2 371.02 P
4 F
2.37 (YES) 394.13 371.02 P
0 F
0.99 (, the ingest directory will) 415.73 371.02 P
0.95 (al) 189 357.02 P
0.95 (w) 197.54 357.02 P
0.95 (ays be included in the distrib) 206.09 357.02 P
0.95 (ution mak) 348.94 357.02 P
0.95 (e tar) 398.11 357.02 P
0.95 (gets \050see Section) 419.83 357.02 P
0.95 (1.4\051. A) 505.39 357.02 P
0.58 (\324mak) 189 343.02 P
0.58 (e) 213.54 343.02 P
0.58 (dist\336les\325 will include the ingest modules in the list, just as \324mak) 222.44 343.02 P
0.58 (e) 534.67 343.02 P
2.23 (distclean\325 will clean all of the ingest module directories. Ho) 189 329.02 P
2.23 (we) 496.08 329.02 P
2.23 (v) 509.77 329.02 P
2.23 (er) 515.59 329.02 P
2.23 (, if) 524.44 329.02 P
4 F
0.2 (DistributeIngest) 189 315.02 P
0 F
0.09 ( has been de\336ned to) 304.2 315.02 P
4 F
0.2 (NO) 402.94 315.02 P
0 F
0.09 (, then the ingest directory) 417.34 315.02 P
-0.26 (will not be b) 189 301.02 P
-0.26 (uilt nor will it be included by distrib) 248.32 301.02 P
-0.26 (ution tar) 419.96 301.02 P
-0.26 (gets. This allo) 459.82 301.02 P
-0.26 (ws) 526.67 301.02 P
-0.03 (the entire ingest directory) 189 287.02 P
-0.03 (,) 311.11 287.02 P
4 F
-0.06 (/zebra/src/ingest) 317.09 287.02 P
0 F
-0.03 (, to be remo) 439.49 287.02 P
-0.03 (v) 496.55 287.02 P
-0.03 (ed from) 502.37 287.02 P
0.05 (the tree. Also, tar) 189 273.02 P
0.05 (gets such as the top-le) 271.92 273.02 P
0.05 (v) 377.82 273.02 P
0.05 (el \324tar\336le\325 tar) 383.64 273.02 P
0.05 (get will not include) 446.84 273.02 P
0.6 (the ingest directory in the tar) 189 259.02 P
0.6 (get tar \336le. Essentially) 330.1 259.02 P
0.6 (, the distrib) 438.44 259.02 P
0.6 (ution tree) 493.74 259.02 P
-0.19 (will beha) 189 245.02 P
-0.19 (v) 232.9 245.02 P
-0.19 (e as if the ingest directory did not e) 238.72 245.02 P
-0.19 (xist, whether it does or does) 406.31 245.02 P
(not actually e) 189 231.02 T
(xist.) 253.48 231.02 T
54 187.02 540 190.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 188.52 540 188.52 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
54 188.52 180 188.52 2 L
0 Z
N
0 0 612 792 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(2.2) 163.32 194.02 T
(Customizing C Pre-pr) 189 194.02 T
(ocessor De\336nitions) 311.44 194.02 T
0 F
0.59 (Historically) 189 169.02 P
0.59 (, man) 244.88 169.02 P
0.59 (y important) 271.96 169.02 P
4 F
1.42 (cpp) 331.81 169.02 P
0 F
0.59 ( macros and de\336nitions were scattered) 353.41 169.02 P
0.76 (throughout Zebra\325) 189 155.02 P
0.76 (s header \336les without an) 276.75 155.02 P
0.76 (y real checks for consistenc) 396.28 155.02 P
0.76 (y) 531.78 155.02 P
0.76 (.) 537 155.02 P
0.44 (The) 189 141.02 P
4 F
1.07 (config.h) 211.1 141.02 P
0 F
0.44 ( \336le no) 268.7 141.02 P
0.44 (w collects man) 302.63 141.02 P
0.44 (y of these de\336nitions into a single) 375.33 141.02 P
1.07 (\336le, from where most of the important compile-time parameters can be) 189 127.02 P
0.87 (adjusted to suit particular Zebra applications. All of these symbols pos-) 189 113.02 P
0.21 (sess the pre\336x) 189 99.02 P
4 F
0.51 (CFG_) 260.63 99.02 P
0 F
0.21 (, signifying a symbol which is de\336ned in the central) 289.43 99.02 P
54 627.02 540 640.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 634.02 540 634.02 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
54 634.02 180 634.02 2 L
0 Z
N
0 0 612 792 C
1 12 Q
0 X
0 0 0 1 0 0 0 K
(T) 54 621.02 T
(ABLE 1.) 60.92 621.02 T
3 9 Q
(Symbols f) 189 621.02 T
(or de\336ning distr) 228.24 621.02 T
(ib) 289.9 621.02 T
(ution of optional director) 296.72 621.02 T
(ies) 392.9 621.02 T
2 8 Q
(Symbol) 195 597.68 T
(Default) 354 597.68 T
(Director) 424.5 597.68 T
(y) 455.25 597.68 T
0 9 Q
(Distrib) 195 583.02 T
(uteIngest) 219.82 583.02 T
(YES) 354 583.02 T
(/zeb/src/ingest) 424.5 583.02 T
(Distrib) 195 568.02 T
(uteOptimizer) 219.82 568.02 T
(YES) 354 568.02 T
(/zeb/src/Optimizer) 424.5 568.02 T
(Distrib) 195 553.02 T
(uteDataUtil) 219.82 553.02 T
(YES) 354 553.02 T
(/zeb/src/datautil) 424.5 553.02 T
(Distrib) 195 538.02 T
(uteRealtimeDataStoreT) 219.82 538.02 T
(ools) 304.09 538.02 T
(YES) 354 538.02 T
(/zeb/src/realtime) 424.5 538.02 T
(Distrib) 195 523.02 T
(uteDataManager) 219.82 523.02 T
(YES) 354 523.02 T
(/zeb/src/dsmanage) 424.5 523.02 T
(Distrib) 195 508.02 T
(uteXHelp) 219.82 508.02 T
(YES) 354 508.02 T
(/zeb/src/xhelp) 424.5 508.02 T
189 609.77 189 503.27 2 L
V
0.5 H
0 Z
N
348 610.27 348 502.77 2 L
V
N
418.5 610.27 418.5 502.77 2 L
V
N
540 609.77 540 503.27 2 L
V
N
188.75 610.02 540.25 610.02 2 L
V
N
188.75 593.02 540.25 593.02 2 L
V
N
188.75 578.02 540.25 578.02 2 L
V
N
188.75 563.02 540.25 563.02 2 L
V
N
188.75 548.02 540.25 548.02 2 L
V
N
188.75 533.02 540.25 533.02 2 L
V
N
188.75 518.02 540.25 518.02 2 L
V
N
188.75 503.02 540.25 503.02 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "12" 12
%%Page: "13" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Custom Con\336gurations f) 207 736.18 T
(or Pr) 312.32 736.18 T
(ojects) 333.14 736.18 T
72 726.98 558 726.98 2 L
0.25 H
N
72 74.02 558 74.02 2 L
2 Z
N
2 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
2 10 Q
-2.78 (13) 546.88 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.21 (con\336guration \336le. Usually) 207 680.03 P
-0.21 (, all of the def) 331.47 680.03 P
-0.21 (aults for these con\336guration sym-) 397.51 680.03 P
2.81 (bols should suf) 207 666.03 P
2.81 (\336ce. Their de\336nitions should not be changed without) 285 666.03 P
2.62 (kno) 207 652.03 P
2.62 (wing the implications e) 224.7 652.03 P
2.62 (xactly) 344.73 652.03 P
2.62 (. Consult the section of) 373.27 652.03 P
4 F
6.3 (config.h) 500.4 652.03 P
0 F
1.25 (entitled \322Def) 207 638.03 P
1.25 (aults for compile-time constants\323 for a list of the symbols) 270.45 638.03 P
(and their def) 207 624.03 T
(aults.) 267.53 624.03 T
72 580.03 558 583.03 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 581.53 558 581.53 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 581.53 198 581.53 2 L
0 Z
N
0 0 612 792 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(2.3) 181.32 587.03 T
(Custom Con\336gurations f) 207 587.03 T
(or Pr) 347.42 587.03 T
(ojects) 375.19 587.03 T
0 F
1.31 (If a particular project should wish to set up a customized collection of) 207 562.03 P
2.65 (de\336nitions for the compile-time parameters and distrib) 207 548.03 P
2.65 (ution symbols,) 484.66 548.03 P
0.61 (these de\336nitions can be included in a conditional section of) 207 534.03 P
4 F
1.46 (config.h) 500.4 534.03 P
0 F
0.17 (which depends on some unique project symbol. See the e) 207 520.03 P
0.17 (xamples for the) 483 520.03 P
1.85 (ARM and NEXUS programs, which use the symbols) 207 506.03 P
4 F
4.45 (ARM_PROJECT) 478.8 506.03 P
0 F
2.49 (and) 207 492.03 P
4 F
5.98 (NEXUS_PROJECT) 229.82 492.03 P
0 F
2.49 (, respecti) 322.53 492.03 P
2.49 (v) 368.04 492.03 P
2.49 (ely) 373.86 492.03 P
2.49 (. Once the project-speci\336c de\336ni-) 387.74 492.03 P
0.65 (tions ha) 207 478.03 P
0.65 (v) 245.08 478.03 P
0.65 (e been grouped into a conditional section of code, a single line) 250.9 478.03 P
4.15 (in) 207 464.03 P
4 F
9.95 (config.h) 223.48 464.03 P
0 F
4.15 ( de\336ning the project symbol suf) 281.08 464.03 P
4.15 (\336ces to acti) 453.84 464.03 P
4.15 (v) 516.5 464.03 P
4.15 (ate the) 522.2 464.03 P
(project\325) 207 450.03 T
(s customized con\336guration.) 243.66 450.03 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "13" 13
%%Page: "14" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Ad) 189 736.18 T
(v) 200.86 736.18 T
(anced Con\336guration P) 205.69 736.18 T
(arameter) 301.43 736.18 T
(s) 339.31 736.18 T
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
2 10 Q
(14) 54 60.29 T
2 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "14" 14
%%Page: "15" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
72 445.03 558 445.03 2 L
2 Z
N
72 74.02 558 74.02 2 L
0.25 H
N
2 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
2 10 Q
-2.78 (15) 546.88 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
1.2 (CHAPTER 3) 72 677 S
0 24 Q
-0.48 (Guide to Imak) 207 677 S
-0.48 (e for Zebra) 339.18 677 S
-0.48 (De) 207 647 S
-0.48 (v) 233.43 647 S
-0.48 (elopers) 244.59 647 S
0 12 Q
-0.04 (Those who are simply installing Zebra need only read the) 207 424 P
6 F
-0.04 (Zebr) 485.88 424 P
-0.04 (a Installa-) 508.37 424 P
1.75 (tion Manual) 207 410 P
0 F
1.75 (. Y) 267.75 410 P
1.75 (ou should not need to read this, unless you are simply) 282.85 410 P
-0.03 (curious, or unless you are porting Zebra to a ne) 207 396 P
-0.03 (w system. F) 433.09 396 P
-0.03 (or de) 490.53 396 P
-0.03 (v) 514.52 396 P
-0.03 (elopers,) 520.34 396 P
0.87 (most of this is perhaps detail that you do not need immediately) 207 382 P
0.87 (, if e) 517.42 382 P
0.87 (v) 540.52 382 P
0.87 (er) 546.34 382 P
0.87 (.) 555 382 P
1.42 (An) 207 368 P
1.42 (y section that does not look immediately necessary is probably not.) 221.48 368 P
1.46 (This manual w) 207 354 P
1.46 (as originally a quickly hack) 281.13 354 P
1.46 (ed transition guide for local) 419.51 354 P
(de) 207 340 T
(v) 218.03 340 T
(elopers, and it still bears the marks of being both quick and hack) 223.85 340 T
(ed.) 533.35 340 T
0.56 (First, to gi) 207 314 P
0.56 (v) 257.51 314 P
0.56 (e credit where credit is due: Imak) 263.33 314 P
0.56 (e w) 427.21 314 P
0.56 (as originally written by) 444.65 314 P
0.02 (T) 207 300 P
0.02 (odd Brunhof) 213.37 300 P
0.02 (f, T) 274.08 300 P
0.02 (ektronix, Inc., while a guest engineer at Project Athena,) 290.59 300 P
0.04 (MIT) 207 286 P
0.04 (, and further de) 228.11 286 P
0.04 (v) 301.24 286 P
0.04 (eloped by Jim Fulton of the X Consortium. Imak) 307.07 286 P
0.04 (e is) 541.62 286 P
-0.26 (cop) 207 272 P
-0.26 (yrighted by MIT) 224.21 272 P
-0.26 (, b) 302.78 272 P
-0.26 (ut permission has been granted for an) 314.28 272 P
-0.26 (y use and dis-) 492.47 272 P
0.47 (trib) 207 258 P
0.47 (ution \050as long as the Cop) 223.43 258 P
0.47 (yright message is distrib) 345.31 258 P
0.47 (uted as well and all) 463.48 258 P
(that...\051.) 207 244 T
0.45 (This manual describes the general operation of imak) 207 218 P
0.45 (e and its implemen-) 461.65 218 P
0.44 (tation in the Zebra directory hierarch) 207 204 P
0.44 (y) 386.11 204 P
0.44 (. It also of) 391.33 204 P
0.44 (fers some guidelines for) 441.02 204 P
1.93 (making) 207 190 P
0 9.6 Q
1.55 (1) 243 194.8 P
0 12 Q
1.93 ( the most out of Imak) 247.8 190 P
1.93 (e\336les. The most common mak) 360.35 190 P
1.93 (e tar) 512.96 190 P
1.93 (gets,) 535.67 190 P
2.06 (such as depend, all, install, clean, and Mak) 207 176 P
2.06 (e\336le \050mf\051, still e) 426.92 176 P
2.06 (xist. Ne) 510.24 176 P
2.06 (w) 549.34 176 P
-0.06 (ones, such as includes and Mak) 207 162 P
-0.06 (e\336les, are described belo) 357.87 162 P
-0.06 (w) 476.01 162 P
-0.06 (. Also, feel free) 483.89 162 P
72 100.98 558 130.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 108.98 351 108.98 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
(1.  Shameful pun, I kno) 207 94.98 T
(w) 291.52 94.98 T
(. I\325m not proud.) 297.43 94.98 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "15" 15
%%Page: "16" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Guide to Imake f) 189 736.18 T
(or Zebra De) 258.84 736.18 T
(veloper) 308.72 736.18 T
(s) 340.6 736.18 T
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
2 10 Q
(16) 54 60.29 T
2 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
1.13 (to gi) 189 678.02 P
1.13 (v) 211.5 678.02 P
1.13 (e me an) 217.32 678.02 P
1.13 (y suggestions you may ha) 256.73 678.02 P
1.13 (v) 385.02 678.02 P
1.13 (e for additions, corrections, or) 390.83 678.02 P
(clari\336cations to this document.) 189 664.02 T
0 9.6 Q
(1) 337 668.82 T
0 12 Q
(Some other places to look for information about imak) 189 638.02 T
(e:) 446.86 638.02 T
5 11 Q
(\245) 189 618.02 T
0 12 Q
(The imak) 203.4 618.02 T
(e\0501\051 man page, imak) 248.94 618.02 T
(e.man.) 347.46 618.02 T
5 11 Q
(\245) 189 601.02 T
0 12 Q
(The mak) 203.4 601.02 T
(e\0501\051 man page.) 245.6 601.02 T
5 11 Q
(\245) 189 584.02 T
0 12 Q
(The cpp\0501\051 man page.) 203.4 584.02 T
1.52 (Y) 189 558.02 P
1.52 (ou should be f) 196.34 558.02 P
1.52 (amiliar with) 269.1 558.02 P
4 F
3.64 (make) 333.47 558.02 P
0 F
1.52 ( and) 362.27 558.02 P
4 F
3.64 (cpp) 388.63 558.02 P
0 F
1.52 ( to get the most from this) 410.23 558.02 P
0.57 (document. The) 189 544.02 P
4 F
1.37 (imake) 265.13 544.02 P
0 F
0.57 ( man page of) 301.13 544.02 P
0.57 (fers some details and command line) 364.85 544.02 P
0.75 (options which are not discussed here. The) 189 530.02 P
4 F
1.81 (imake) 398.25 530.02 P
0 F
0.75 ( man page, as well as) 434.25 530.02 P
-0.04 (the imak) 189 516.02 P
-0.04 (e source and con\336guration \336les, can be found in the Zebra direc-) 230.51 516.02 P
8.42 (tory) 189 502.02 P
4 F
20.22 (zebra/) 219.76 502.02 P
20.22 (config/) 262.96 502.02 P
20.22 (imake) 313.36 502.02 P
0 F
8.42 (, or in the X11 distrib) 349.36 502.02 P
8.42 (ution in) 494.57 502.02 P
4 F
(xc/) 189 488.02 T
(config/) 210.6 488.02 T
(imake) 261 488.02 T
0 F
(.) 297 488.02 T
-0.17 (This document refers to se) 189 462.02 P
-0.17 (v) 315.33 462.02 P
-0.17 (eral \336les which Imak) 321.15 462.02 P
-0.17 (e uses to generate Mak) 421.5 462.02 P
-0.17 (e-) 530.68 462.02 P
2.08 (\336les. All of these \336les can be found in the X11R6 distrib) 189 448.02 P
2.08 (ution under) 482.93 448.02 P
4 F
52.25 (xc/config/cf) 189 434.02 P
0 F
21.77 (, or under Zebra\325) 275.4 434.02 P
21.77 (s distrib) 421.35 434.02 P
21.77 (ution in) 481.22 434.02 P
4 F
(zebra/) 189 420.02 T
(config/cf) 232.2 420.02 T
0 F
(:) 297 420.02 T
5 11 Q
(\245) 189 400.02 T
0 12 Q
(Imak) 203.4 400.02 T
(e.tmpl) 227.94 400.02 T
5 11 Q
(\245) 189 383.02 T
0 12 Q
(Imak) 203.4 383.02 T
(e.rules) 227.94 383.02 T
5 11 Q
(\245) 189 366.02 T
0 12 Q
(*.cf) 203.4 366.02 T
1.97 (The site con\336guration \336le usually resides in the) 189 340.02 P
4 F
4.72 (cf) 435.4 340.02 P
0 F
1.97 ( directory) 449.8 340.02 P
1.97 (, b) 497.3 340.02 P
1.97 (ut the) 511.03 340.02 P
1.25 (Zebra hierarch) 189 326.02 P
1.25 (y puts a specially-modi\336ed cop) 260.49 326.02 P
1.25 (y in) 415.36 326.02 P
4 F
3 (config/project) 439.2 326.02 P
0 F
(to o) 189 312.02 T
(v) 207.16 312.02 T
(erride the cop) 212.98 312.02 T
(y in) 278.83 312.02 T
4 F
(config/cf) 300.17 312.02 T
0 F
(.) 364.97 312.02 T
5 11 Q
(\245) 189 292.02 T
0 12 Q
(site.def) 203.4 292.02 T
54 248.02 540 251.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 249.52 540 249.52 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
54 249.52 180 249.52 2 L
0 Z
N
0 0 612 792 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(3.1) 163.32 255.02 T
(Ho) 189 255.02 T
(w Imake W) 204.82 255.02 T
(orks) 265.45 255.02 T
0 F
2.24 (Imak) 189 230.02 P
2.24 (e tak) 213.54 230.02 P
2.24 (es adv) 238.65 230.02 P
2.24 (antage of the C pre-processor to generate a Mak) 270.92 230.02 P
2.24 (e\336le) 519.34 230.02 P
2.88 (from a \336le called an Imak) 189 216.02 P
2.88 (e\336le. Mak) 326.89 216.02 P
2.88 (e\336le rules and v) 378.3 216.02 P
2.88 (ariables are set) 462.95 216.02 P
-0.03 (through macros de\336ned in a series of \336les included by Imak) 189 202.02 P
-0.03 (e. Imak) 475.86 202.02 P
-0.03 (e tells) 511.7 202.02 P
2.04 (cpp to include a master template \336le, Imak) 189 188.02 P
2.04 (e.tmpl, which in turn uses) 407.83 188.02 P
1.8 (#include directi) 189 174.02 P
1.8 (v) 265.49 174.02 P
1.8 (es to include other \336les, such as the machine-speci\336c) 271.31 174.02 P
3.96 (con\336guration \336le \050with the .cf e) 189 160.02 P
3.96 (xtension\051, the Imak) 360.62 160.02 P
3.96 (e.rules \336le, the) 461.42 160.02 P
-0.28 (Project.tmpl \336le, and the Imak) 189 146.02 P
-0.28 (e\336le. The Project.tmpl \336le de\336nes common) 333.75 146.02 P
54 100.98 540 130.98 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 108.98 333 108.98 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
0 9 Q
0 X
0 0 0 1 0 0 0 K
(1.  Gary Granger) 189 94.98 T
(, NCAR/A) 249.62 94.98 T
(TD/RDP) 287.12 94.98 T
(, granger@ncar) 318.12 94.98 T
(.ucar) 373.39 94.98 T
(.edu) 390.64 94.98 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "16" 16
%%Page: "17" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Ho) 207 736.18 T
(w Imake W) 218.86 736.18 T
(orks) 264.34 736.18 T
72 726.98 558 726.98 2 L
0.25 H
N
72 74.02 558 74.02 2 L
2 Z
N
2 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
2 10 Q
-2.78 (17) 546.88 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.67 (v) 207 680.03 P
0.67 (ariables, such as install directories, needed libraries, and include direc-) 212.7 680.03 P
2.35 (tories, which are speci\336c to a particular project. The Imak) 207 666.03 P
2.35 (e.rules \336le) 505.65 666.03 P
5.93 (de\336nes macros for common Mak) 207 652.03 P
5.93 (e\336le tar) 389.22 652.03 P
5.93 (gets, such as \324depend\325,) 431.25 652.03 P
-0.27 (\324includes\325, and \324clean\325, and rules for b) 207 638.03 P
-0.27 (uilding and installing programs and) 388.42 638.03 P
1.56 (libraries. These macros e) 207 624.03 P
1.56 (xpand into Mak) 331.46 624.03 P
1.56 (e\336le rules when processed by) 410.46 624.03 P
(cpp to produce the Mak) 207 610.03 T
(e\336le.) 320.86 610.03 T
-0.25 (The imak) 207 584.03 P
-0.25 (e program is necessary to o) 252.29 584.03 P
-0.25 (v) 381.81 584.03 P
-0.25 (ercome certain limitations of C pre-) 387.63 584.03 P
2.05 (processors. First of all, cpp macros cannot e) 207 570.03 P
2.05 (xpand into multiple lines) 432.16 570.03 P
0.47 (\050i.e., the) 207 556.03 P
0.47 (y cannot insert ne) 246.61 556.03 P
0.47 (wlines into e) 332.7 556.03 P
0.47 (xpanded macros\051, whereas Mak) 394.78 556.03 P
0.47 (e-) 548.68 556.03 P
0.08 (\336le tar) 207 542.03 P
0.08 (gets must be separated from their shell commands by ne) 237.86 542.03 P
0.08 (wlines. So) 507.92 542.03 P
0.28 (Imak) 207 528.03 P
0.28 (e rules are de\336ned using tw) 231.54 528.03 P
0.28 (o consecuti) 364.44 528.03 P
0.28 (v) 418.74 528.03 P
0.28 (e \324@\325 characters to indicate) 424.56 528.03 P
0.96 (where ne) 207 514.03 P
0.96 (wlines should be placed when the macro is e) 251.3 514.03 P
0.96 (xpanded. Also, C) 472.75 514.03 P
0.81 (pre-processors are not consistent in their beha) 207 500.03 P
0.81 (vior among dif) 431.56 500.03 P
0.81 (ferent plat-) 504.21 500.03 P
1.26 (forms. Some pre-processors con) 207 486.03 P
1.26 (v) 364.92 486.03 P
1.26 (ert escaped ne) 370.74 486.03 P
1.26 (wlines to spaces, others) 440.92 486.03 P
0.09 (con) 207 472.03 P
0.09 (v) 223.85 472.03 P
0.09 (ert tabs to spaces. Since tabs are required before each line of a mak) 229.67 472.03 P
0.09 (e) 552.67 472.03 P
0.47 (rule\325) 207 458.03 P
0.47 (s shell commands, imak) 229 458.03 P
0.47 (e mak) 345.61 458.03 P
0.47 (es sure the tabs are there or inserts its) 374.96 458.03 P
(o) 207 444.03 T
(wn tabs in the cpp output.) 212.7 444.03 T
(A Mak) 207 418.03 T
(e\336le is b) 240.54 418.03 T
(uilt from an Imak) 280.97 418.03 T
(e\336le through the follo) 365.17 418.03 T
(wing steps:) 469.2 418.03 T
1 F
(1.) 207 398.03 T
4 F
1.66 (imake) 221.4 398.03 P
0 F
0.69 ( in) 257.4 398.03 P
0.69 (v) 269.95 398.03 P
0.69 (ok) 275.71 398.03 P
0.69 (es cpp, piping both cpp\325) 287.59 398.03 P
0.69 (s stdin and stdout. Imak) 405.34 398.03 P
0.69 (e sends) 522.32 398.03 P
6.14 (cpp an include directi) 221.4 384.03 P
6.14 (v) 343.16 384.03 P
6.14 (e to include the Imak) 348.98 384.03 P
6.14 (e template \336le,) 474.73 384.03 P
0.06 (Imak) 221.4 370.03 P
0.06 (e.tmpl. Meanwhile, imak) 245.94 370.03 P
0.06 (e \336lters cpp\325) 366.26 370.03 P
0.06 (s output: \322@@\323 is replaced) 425.69 370.03 P
0.56 (with \322\134n\323 and lines follo) 221.4 356.03 P
0.56 (wing tar) 339.33 356.03 P
0.56 (gets \050those lines containing a \324:\325\051 are) 379.34 356.03 P
(prepended with tabs.) 221.4 342.03 T
1 F
(2.) 207 316.03 T
0 F
4.47 (Imak) 221.4 316.03 P
4.47 (e.tmpl determines the architecture it is being compiled on) 245.94 316.03 P
0.48 (through pre-de\336ned cpp symbols so it can include a machine-speci\336c) 221.4 302.03 P
0.09 (con\336guration \336le, *.cf. Then a site.def \336le is included, allo) 221.4 288.03 P
0.09 (wing a par-) 503.18 288.03 P
1.86 (ticular site to o) 221.4 274.03 P
1.86 (v) 298.47 274.03 P
1.86 (erride an) 304.29 274.03 P
1.86 (y .cf de\336nitions or an) 348.29 274.03 P
1.86 (y of the Imak) 457.88 274.03 P
1.86 (e.tmpl) 527.66 274.03 P
16.29 (def) 221.4 260.03 P
16.29 (ault symbol de\336nitions. Zebra\325) 236.6 260.03 P
16.29 (s site.def \336le, in) 432.8 260.03 P
1.85 (con\336g/project/site.def, includes the site-speci\336c con\336g.h \336le. All of) 221.4 246.03 P
(the local con\336guration choices are actually set in con\336g.h.) 221.4 232.03 T
1 F
(3.) 207 206.03 T
0 F
1.61 (Imak) 221.4 206.03 P
1.61 (e.tmpl then gi) 245.94 206.03 P
1.61 (v) 315.2 206.03 P
1.61 (es def) 321.02 206.03 P
1.61 (ault de\336nitions to an) 350.83 206.03 P
1.61 (y v) 453.83 206.03 P
1.61 (ariables that were) 470.14 206.03 P
1.62 (not set in the pre) 221.4 192.03 P
1.62 (viously included \336les. Here are some e) 307.56 192.03 P
1.62 (xamples of) 503.39 192.03 P
(these machine- and site-speci\336c symbols:) 221.4 178.03 T
4 F
(SystemV) 230.4 152.03 T
(HasSockets) 374.4 152.03 T
(HasVFork) 230.4 138.03 T
(HasVoidSignalReturn) 374.4 138.03 T
(HasSaberC) 230.4 124.03 T
(HasFortran) 374.4 124.03 T
(DefaultCDebugFlags) 230.4 110.03 T
(ArCmd) 374.4 110.03 T
(InstallCmd) 230.4 96.03 T
(RanlibCmd) 374.4 96.03 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "17" 17
%%Page: "18" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Guide to Imake f) 189 736.18 T
(or Zebra De) 258.84 736.18 T
(veloper) 308.72 736.18 T
(s) 340.6 736.18 T
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
2 10 Q
(18) 54 60.29 T
2 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(See Imak) 189 678.02 T
(e.tmpl for the full complement. This isn\325) 233.87 678.02 T
(t e) 428.98 678.02 T
(v) 440.34 678.02 T
(en close.) 446.16 678.02 T
1 F
(4.) 189 652.02 T
0 F
0.16 (Ne) 203.4 652.02 P
0.16 (xt, Imak) 217.21 652.02 P
0.16 (e.tmpl outputs te) 257.25 652.02 P
0.16 (xt which assigns each cpp symbol de\336ned) 337.73 652.02 P
(so f) 203.4 638.02 T
(ar to a corresponding Mak) 220.94 638.02 T
(e\336le v) 347.46 638.02 T
(ariable:) 376.82 638.02 T
4 F
(AR=ArCmd) 212.4 612.02 T
(INSTALL=InstallCmd) 212.4 598.02 T
(CC=CCompiler) 212.4 584.02 T
(RANLIB=RanlibCmd) 212.4 570.02 T
(INSTPGMFLAGS=InstPgmFlags) 212.4 556.02 T
0 F
1.4 (Note the name con) 203.4 530.02 P
1.4 (v) 297.44 530.02 P
1.4 (ention: cpp symbols are lo) 303.26 530.02 P
1.4 (wercase with capital-) 435.23 530.02 P
4.57 (ized w) 203.4 516.02 P
4.57 (ord separations, while Mak) 239.51 516.02 P
4.57 (e v) 383.74 516.02 P
4.57 (ariables are all uppercase.) 402.34 516.02 P
2.13 (Remembering this can sa) 203.4 502.02 P
2.13 (v) 330.54 502.02 P
2.13 (e some confusion when looking through) 336.36 502.02 P
0.64 (Imak) 203.4 488.02 P
0.64 (e\336les. There are only one or tw) 227.94 488.02 P
0.64 (o notable e) 381.31 488.02 P
0.64 (xceptions to this con-) 435.07 488.02 P
(v) 203.4 474.02 T
(ention.) 209.22 474.02 T
1 F
(5.) 189 448.02 T
0 F
0.12 (Imak) 203.4 448.02 P
0.12 (e.tmpl ne) 227.94 448.02 P
0.12 (xt includes the Imak) 272.54 448.02 P
0.12 (e.rules \336le. In Release 5, the Imak) 370.44 448.02 P
0.12 (e) 534.67 448.02 P
0 (rules \336le w) 203.4 434.02 P
0 (as not included until after the project\325) 256.62 434.02 P
0 (s rules \336le, gi) 436.62 434.02 P
0 (ving the) 501 434.02 P
1.35 (project a chance to o) 203.4 420.02 P
1.35 (v) 307.92 420.02 P
1.35 (erride the standard Imak) 313.74 420.02 P
1.35 (e rules. In Release 6,) 434.63 420.02 P
(Imak) 203.4 406.02 T
(e.tmpl includes Imak) 227.94 406.02 T
(e.rules \336rst.) 328.81 406.02 T
1 F
(6.) 189 380.02 T
0 F
1.51 (Imak) 203.4 380.02 P
1.51 (e.tmpl then includes the Project.tmpl \336le. The Project.tmpl \336le) 227.94 380.02 P
-0.29 (assigns def) 203.4 366.02 P
-0.29 (ault v) 255.98 366.02 P
-0.29 (alues to project-speci\336c cpp symbols and then outputs) 282.39 366.02 P
1.47 (the te) 203.4 352.02 P
1.47 (xt which assigns these symbols to the corresponding Mak) 231.02 352.02 P
1.47 (e\336le) 519.34 352.02 P
1.48 (v) 203.4 338.02 P
1.48 (ariables, just as Imak) 209.1 338.02 P
1.48 (e.tmpl does in step \0504\051. F) 314.72 338.02 P
1.48 (or e) 441.59 338.02 P
1.48 (xample, Zebra\325) 461.21 338.02 P
1.48 (s) 535.33 338.02 P
(project template sets these v) 203.4 324.02 T
(ariables:) 338.41 324.02 T
4 F
(UIC=UicCmd) 212.4 298.02 T
(ARADD=ArAdd) 212.4 284.02 T
(LIBZEB=ZebLibrary) 212.4 270.02 T
1 F
(7.) 189 244.02 T
0 F
0.02 (F) 203.4 244.02 P
0.02 (or Zebra\325) 209.89 244.02 P
0.02 (s implementation, Project.tmpl is in zeb/con\336g/project. The) 254.23 244.02 P
2.13 (last line of the Zebra template includes the Zebra.rules \336le, which) 203.4 230.02 P
-0.27 (de\336nes ne) 203.4 216.02 P
-0.27 (w Zebra rules and o) 251.15 216.02 P
-0.27 (v) 345.18 216.02 P
-0.27 (errides \050by \336rst unde\336ning\051 some of the) 351 216.02 P
1.19 (def) 203.4 202.02 P
1.19 (ault de\336nitions gi) 218.6 202.02 P
1.19 (v) 304.7 202.02 P
1.19 (en in Imak) 310.52 202.02 P
1.19 (e.rules. The rules in Zebra.rules are) 364.1 202.02 P
(specially designed for the Zebra de) 203.4 188.02 T
(v) 371.39 188.02 T
(elopment en) 377.21 188.02 T
(vironment.) 435.72 188.02 T
1 F
(8.) 189 162.02 T
0 F
1.67 (Finally) 203.4 162.02 P
1.67 (, the Imak) 236.63 162.02 P
1.67 (e.tmpl \336le includes the actual Imak) 288.17 162.02 P
1.67 (e\336le. Here rule) 465.03 162.02 P
0.37 (macros are e) 203.4 148.02 P
0.37 (xpanded, and) 264.6 148.02 P
4 F
0.89 (imake) 332.33 148.02 P
0 F
0.37 ( inserts an) 368.33 148.02 P
0.37 (y necessary ne) 417.55 148.02 P
0.37 (wlines and) 487.97 148.02 P
(tabs into the output.) 203.4 134.02 T
1 F
(9.) 189 108.02 T
0 F
1.41 (Imak) 203.4 108.02 P
1.41 (e.tmpl adds some tar) 227.94 108.02 P
1.41 (gets to the output necessary for all Mak) 331.28 108.02 P
1.41 (e-) 530.68 108.02 P
(\336les, such as the follo) 203.4 94.02 T
(wing:) 307.43 94.02 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "18" 18
%%Page: "19" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Imake\336les V) 207 736.18 T
(er) 258.58 736.18 T
(sus Make\336le) 266.95 736.18 T
(.cpp Files) 320.65 736.18 T
72 726.98 558 726.98 2 L
0.25 H
N
72 74.02 558 74.02 2 L
2 Z
N
2 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
2 10 Q
-2.78 (19) 546.88 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(Mak) 221.4 680.03 T
(e\336le) 243.28 680.03 T
2.02 (F) 288 680.03 P
2.02 (or re-creating the Mak) 294.49 680.03 P
2.02 (e\336le from the Imak) 408.06 680.03 P
2.02 (e\336le using) 506.31 680.03 P
(imak) 288 666.03 T
(e.) 311.88 666.03 T
(clean) 221.4 640.03 T
0.7 (The generic clean tar) 288 640.03 P
0.7 (get which remo) 390.86 640.03 P
0.7 (v) 466.74 640.03 P
0.7 (es all object \336les,) 472.56 640.03 P
(core \336les, etc.) 288 626.03 T
0.36 (If the Imak) 221.4 600.03 P
0.36 (e\336le de\336ned the) 275.32 600.03 P
4 F
0.87 (IHaveSubdirs) 356.06 600.03 P
0 F
0.36 ( cpp symbol, tar) 442.46 600.03 P
0.36 (gets are) 520.66 600.03 P
2.15 (included for propag) 221.4 586.03 P
2.15 (ating the \324depend\325, \324includes\325, \324clean\325, \324install\325,) 320.29 586.03 P
-0.1 (\324all\325, and \324Mak) 221.4 572.03 P
-0.1 (e\336les\325 tar) 293.39 572.03 P
-0.1 (gets to the subdirectories. More on this option) 338.06 572.03 P
(later) 221.4 558.03 T
(.) 242.06 558.03 T
1 F
(10.) 207 532.03 T
0 F
2.39 (Imak) 222 532.03 P
2.39 (e writes the resulting output to a Mak) 246.54 532.03 P
2.39 (e\336le. Though this may) 442.82 532.03 P
-0.08 (sound long and complicated, the whole process has been methodically) 221.4 518.03 P
0.08 (laid out, and Mak) 221.4 504.03 P
0.08 (e\336le generation is actually v) 306.18 504.03 P
0.08 (ery quick and e) 441.64 504.03 P
0.08 (xtremely) 515.34 504.03 P
(\337e) 221.4 490.03 T
(xible.) 233.22 490.03 T
72 446.03 558 449.03 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 447.53 558 447.53 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 447.53 198 447.53 2 L
0 Z
N
0 0 612 792 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(3.2) 181.32 453.03 T
(Imake\336les V) 207 453.03 T
(er) 275.77 453.03 T
(sus Make\336le) 286.93 453.03 T
(.cpp Files) 358.54 453.03 T
0 F
0.93 (The Imak) 207 428.03 P
0.93 (e\336le system is similar to Zebra\325) 254.13 428.03 P
0.93 (s old \050we\325) 409.78 428.03 P
0.93 (re talkin\325 w) 459.03 428.03 P
0.93 (ay back\051) 516.09 428.03 P
0.89 (Mak) 207 414.03 P
0.89 (e\336le.cpp system. If you are not f) 228.88 414.03 P
0.89 (amiliar with that system and don\325) 389.42 414.03 P
0.89 (t) 554.66 414.03 P
0.27 (care to kno) 207 400.03 P
0.27 (w an) 260.56 400.03 P
0.27 (ything about it, then you may mo) 283.65 400.03 P
0.27 (v) 444.79 400.03 P
0.27 (e ahead one square, to) 450.61 400.03 P
(the ne) 207 386.03 T
(xt section.) 235.81 386.03 T
2 F
(3.2.1) 171.31 354.03 T
(Similarities) 207 354.03 T
0 F
0.06 (Both systems rely on the C pre-processor to handle the con\336guration and) 207 336.03 P
1.98 (dissemination of distrib) 207 322.03 P
1.98 (ution-wide v) 324.06 322.03 P
1.98 (ariables to the Mak) 386.74 322.03 P
1.98 (e\336le hierarch) 484.88 322.03 P
1.98 (y) 549.78 322.03 P
1.98 (.) 555 322.03 P
0.72 (Imak) 207 308.03 P
0.72 (e\325) 231.54 308.03 P
0.72 (s template \336les are simply Zebra\325) 240.2 308.03 P
0.72 (s con\336g.h tak) 403.47 308.03 P
0.72 (en to a more thor-) 469.13 308.03 P
0.21 (ough and \337e) 207 294.03 P
0.21 (xible le) 266.57 294.03 P
0.21 (v) 302.14 294.03 P
0.21 (el to maximize portability) 307.96 294.03 P
0.21 (. Symbols lik) 432.14 294.03 P
0.21 (e CCompiler) 496.12 294.03 P
-0.29 (and CCOptions, de\336ned in con\336g.h, are assigned to Mak) 207 280.03 P
-0.29 (e\336le v) 476.89 280.03 P
-0.29 (ariables by) 505.97 280.03 P
(lines lik) 207 266.03 T
(e the follo) 245.22 266.03 T
(wing in each Mak) 293.58 266.03 T
(e\336le.cpp:) 379.78 266.03 T
4 F
(CC=CCompiler) 230.4 240.03 T
(CFLAGS=CCOptions IncludeDirs) 230.4 226.03 T
0 F
1.07 (Imak) 207 200.03 P
1.07 (e tak) 231.54 200.03 P
1.07 (es care of this assignment outside of the Imak) 255.48 200.03 P
1.07 (e\336le by putting) 483.19 200.03 P
-0.07 (these lines in the template \336les, thus prepending the general, distrib) 207 186.03 P
-0.07 (ution-) 529.33 186.03 P
1.27 (wide information to the directory-speci\336c information in the Imak) 207 172.03 P
1.27 (e\336le.) 534.34 172.03 P
1.29 (An Imak) 207 158.03 P
1.29 (e\336le only describes the directory where it is located. It kno) 250.49 158.03 P
1.29 (ws) 544.67 158.03 P
0.35 (nothing about its parent or where it is in the rest of the distrib) 207 144.03 P
0.35 (ution. This) 505.64 144.03 P
1.06 (mak) 207 130.03 P
1.06 (es the whole Imak) 227.54 130.03 P
1.06 (e\336le system modular) 318.25 130.03 P
1.06 (, \337e) 419.89 130.03 P
1.06 (xible, and easy to main-) 438.77 130.03 P
-0.05 (tain. And where each and e) 207 116.03 P
-0.05 (v) 337.08 116.03 P
-0.05 (ery Mak) 342.9 116.03 P
-0.05 (e\336le.cpp had to include a rule for re-) 383.05 116.03 P
0.91 (making a Mak) 207 102.03 P
0.91 (e\336le, Imak) 278.02 102.03 P
0.91 (e appends this rule to each Mak) 330.13 102.03 P
0.91 (e\336le automati-) 487.43 102.03 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "19" 19
%%Page: "20" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Guide to Imake f) 189 736.18 T
(or Zebra De) 258.84 736.18 T
(veloper) 308.72 736.18 T
(s) 340.6 736.18 T
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
2 10 Q
(20) 54 60.29 T
2 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.07 (cally) 189 678.02 P
-0.07 (. Imak) 211.55 678.02 P
-0.07 (e also pro) 242.02 678.02 P
-0.07 (vides the added bonus of using cpp macros to gener-) 288.35 678.02 P
-0.13 (ate rules as well as v) 189 664.02 P
-0.13 (ariables; an) 287.04 664.02 P
-0.13 (y adjustment required in a rule is made in) 341.71 664.02 P
1.31 (one rules \336le, and the whole hierarch) 189 650.02 P
1.31 (y is automatically updated by the) 374.45 650.02 P
(\324Mak) 189 636.02 T
(e\336les\325 tar) 214.87 636.02 T
(get.) 259.64 636.02 T
0.3 (Notice that because of the Imak) 189 610.02 P
0.3 (e system\325) 342.67 610.02 P
0.3 (s modularity) 387.96 610.02 P
0.3 (, where each direc-) 447.82 610.02 P
0.04 (tory need only kno) 189 596.02 P
0.04 (w about its immediate subdirectories, the whole Zebra) 279.13 596.02 P
0.13 (distrib) 189 582.02 P
0.13 (ution could be inserted inside another Imak) 219.43 582.02 P
0.13 (e distrib) 428.06 582.02 P
0.13 (ution hierarch) 466.95 582.02 P
0.13 (y) 534 582.02 P
1.61 (by simply adding Zebra\325) 189 568.02 P
1.61 (s directory to one Imak) 311.48 568.02 P
1.61 (e\336le\325) 429.09 568.02 P
1.61 (s SUBDIRS v) 453.09 568.02 P
1.61 (ari-) 523.34 568.02 P
-0.21 (able. Imagine compiling) 189 554.02 P
6 F
-0.21 (e) 308.35 554.02 P
-0.21 (very) 313.5 554.02 P
0 F
-0.21 ( RDSS package by editing one con\336g.h \336le) 334.15 554.02 P
0.61 (and typing one mak) 189 540.02 P
0.61 (e command, while maintaining the capability to dis-) 285.71 540.02 P
(trib) 189 526.02 T
(ute and b) 205.43 526.02 T
(uild packages indi) 249.18 526.02 T
(vidually) 336.2 526.02 T
(.) 374.76 526.02 T
2 F
(3.2.2) 153.31 494.02 T
(Chang) 189 494.02 T
(es to Zebra with the Installation of Imake) 226.45 494.02 T
0 F
0.69 (Se) 189 476.02 P
0.69 (v) 200.7 476.02 P
0.69 (eral changes were made to the Zebra distrib) 206.52 476.02 P
0.69 (ution and b) 420.74 476.02 P
0.69 (uild beha) 475.89 476.02 P
0.69 (vior) 520.67 476.02 P
0.8 (with the transition to imak) 189 462.02 P
0.8 (e. Most of these changes were made to mak) 318.76 462.02 P
0.8 (e) 534.67 462.02 P
0.09 (imak) 189 448.02 P
0.09 (e more ef) 212.88 448.02 P
0.09 (fecti) 258.07 448.02 P
0.09 (v) 279.09 448.02 P
0.09 (e in b) 284.91 448.02 P
0.09 (uilding and maintaining Zebra; others were just) 311.51 448.02 P
(plain o) 189 434.02 T
(v) 221.82 434.02 T
(erdue. This section describes these changes.) 227.64 434.02 T
1 F
(1.) 189 414.02 T
0 F
2.72 (The resource \336les originally stored in zeb/lib/resources ha) 203.4 414.02 P
2.72 (v) 500.48 414.02 P
2.72 (e been) 506.3 414.02 P
2.19 (mo) 203.4 400.02 P
2.19 (v) 218.56 400.02 P
2.19 (ed to their respecti) 224.38 400.02 P
2.19 (v) 319.62 400.02 P
2.19 (e source directories where the) 325.44 400.02 P
2.19 (y should be.) 477.29 400.02 P
0.16 (The) 203.4 386.02 P
0.16 (y ha) 221.88 386.02 P
0.16 (v) 242.12 386.02 P
0.16 (e an e) 247.94 386.02 P
0.16 (xtension of \324.ad\325 indicating an application def) 276.06 386.02 P
0.16 (aults \336le.) 495.84 386.02 P
1.8 (These \336les are installed into the lib/resources directory) 203.4 372.02 P
1.8 (. Installation) 478.2 372.02 P
(rules are generated with the InstallAppDef) 203.4 358.02 T
(aults\050\051 Imak) 407.56 358.02 T
(e rule macro.) 465.76 358.02 T
0.23 (Other \336les are no) 203.4 332.02 P
0.23 (w installed from more appropriate places rather than) 286.77 332.02 P
-0.08 (permanently residing in their installed location. F) 203.4 318.02 P
-0.08 (or e) 439.76 318.02 P
-0.08 (xample, the mas-) 457.83 318.02 P
1.21 (ter cop) 203.4 304.02 P
1.21 (y of the zeb) 237.48 304.02 P
1.21 (.hlp \336le resides in util/xhelp, while the icons and) 296.96 304.02 P
2.89 (map \336les reside in src/etc from where the) 203.4 290.02 P
2.89 (y are installed into the) 421.77 290.02 P
(library) 203.4 276.02 T
(.) 234.61 276.02 T
1 F
(2.) 189 250.02 T
0 F
0.56 (The distrib) 203.4 250.02 P
0.56 (ution no) 256.06 250.02 P
0.56 (w beha) 295.99 250.02 P
0.56 (v) 330.64 250.02 P
0.56 (es much more \324hierarchically\325. A mak) 336.46 250.02 P
0.56 (e in) 521.77 250.02 P
1.86 (a directory will automatically propag) 203.4 236.02 P
1.86 (ate to all of its subdirectories.) 388.74 236.02 P
1.69 (Note that Imak) 203.4 222.02 P
1.69 (e subdirectory rules mak) 278.65 222.02 P
1.69 (e full use of $\050MAKE\051 and) 401.91 222.02 P
2.68 ($\050MFLA) 203.4 208.02 P
2.68 (GS\051 when recursi) 246.25 208.02 P
2.68 (v) 335.29 208.02 P
2.68 (ely calling mak) 341.11 208.02 P
2.68 (e. Hence command-line) 420.34 208.02 P
-0.3 (\337ags, e) 203.4 194.02 P
-0.3 (v) 236.8 194.02 P
-0.3 (en -n, will be automatically propag) 242.62 194.02 P
-0.3 (ated to subdirectory mak) 409.04 194.02 P
-0.3 (es.) 527 194.02 P
2.48 (F) 203.4 180.02 P
2.48 (or a great e) 209.89 180.02 P
2.48 (xample of this, try the follo) 270.8 180.02 P
2.48 (wing command from the) 414.23 180.02 P
-0.29 (tople) 203.4 166.02 P
-0.29 (v) 227.1 166.02 P
-0.29 (el Zebra directory) 232.92 166.02 P
-0.29 (. After the imak) 317.54 166.02 P
-0.29 (e program and all of the Mak) 392.54 166.02 P
-0.29 (e-) 530.68 166.02 P
(\336les ha) 203.4 152.02 T
(v) 237.49 152.02 T
(e already been made:) 243.31 152.02 T
4 F
(% make -n Everything MFLAGS=\325-n DEPLIBS=\325) 212.4 126.02 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "20" 20
%%Page: "21" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(General Imake Features) 207 736.18 T
72 726.98 558 726.98 2 L
0.25 H
N
72 74.02 558 74.02 2 L
2 Z
N
2 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
2 10 Q
-2.78 (21) 546.88 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.12 (This will run mak) 221.4 678.02 P
0.12 (e through the process of b) 307.31 678.02 P
0.12 (uilding the) 431.98 678.02 P
6 F
0.12 (entir) 486.9 678.02 P
0.12 (e) 509.12 678.02 P
0 F
0.12 ( distrib) 514.45 678.02 P
0.12 (u-) 548 678.02 P
2.7 (tion without e) 221.4 664.02 P
2.7 (v) 293.18 664.02 P
2.7 (er actually e) 299 664.02 P
2.7 (x) 362.87 664.02 P
2.7 (ecuting a single command, e) 368.69 664.02 P
2.7 (xcept of) 516.31 664.02 P
0.9 (course for the recursi) 221.4 650.02 P
0.9 (v) 325.42 650.02 P
0.9 (e mak) 331.24 650.02 P
0.9 (es. The DEPLIBS= assignment remo) 361.01 650.02 P
0.9 (v) 542.18 650.02 P
0.9 (es) 548 650.02 P
1.17 (an) 221.4 636.02 P
1.17 (y library dependencies for programs; otherwise if the library does) 232.55 636.02 P
1.24 (not e) 221.4 622.02 P
1.24 (xist, mak) 246.12 622.02 P
1.24 (e will gi) 291.24 622.02 P
1.24 (v) 332.76 622.02 P
1.24 (e an error about not being able to create the) 338.58 622.02 P
1.92 (dependenc) 221.4 608.02 P
1.92 (y tar) 272.53 608.02 P
1.92 (get. \050Note that this assignment w) 295.89 608.02 P
1.92 (orks because e) 463.35 608.02 P
1.92 (v) 536.86 608.02 P
1.92 (ery) 542.68 608.02 P
1.78 (Imak) 221.4 594.02 P
1.78 (e\336le uses the DEPLIBS v) 245.94 594.02 P
1.78 (ariable to set its dependent libraries;) 375.44 594.02 P
2.16 (this v) 221.4 580.02 P
2.16 (ariable ususally def) 249.6 580.02 P
2.16 (aults to \324libZeb) 347.11 580.02 P
2.16 (.a\325.\051 If the distrib) 424.28 580.02 P
2.16 (ution has) 512.17 580.02 P
-0.05 (recently been cleaned, the compile command for e) 221.4 566.02 P
-0.05 (v) 462.68 566.02 P
-0.05 (ery source \336le will) 468.5 566.02 P
0.54 (be printed by mak) 221.4 552.02 P
0.54 (e. Otherwise compile commands will be sho) 309.89 552.02 P
0.54 (wn for) 525.8 552.02 P
-0.29 (only those source \336les which are out-of-date. This is an e) 221.4 538.02 P
-0.29 (xtremely use-) 492.64 538.02 P
1.01 (ful technique for testing con\336guration settings and Imak) 221.4 524.02 P
1.01 (e\336le modi\336-) 497.99 524.02 P
(cations.) 221.4 510.02 T
1 F
(3.) 207 484.02 T
0 F
2.41 (The functionality of the \324Mak) 221.4 484.02 P
2.41 (e\336le\325 tar) 373.56 484.02 P
2.41 (get has been separated. The) 416.08 484.02 P
0.28 (\324Mak) 221.4 470.02 P
0.28 (e\336le\325 tar) 247.27 470.02 P
0.28 (get no longer automatically does a \324mak) 287.65 470.02 P
0.28 (e depend\325. Dur-) 481.81 470.02 P
1.85 (ing installation, a \324mak) 221.4 456.02 P
1.85 (e Mak) 337.49 456.02 P
1.85 (e\336les\325 must be done to mak) 369.54 456.02 P
1.85 (e sure all) 510.98 456.02 P
0.15 (Mak) 221.4 442.02 P
0.15 (e\336les in the distrib) 243.28 442.02 P
0.15 (ution are up-to-date. Then a \324mak) 332.48 442.02 P
0.15 (e includes\325 is) 494.38 442.02 P
2.05 (done for the whole distrib) 221.4 428.02 P
2.05 (ution to install public header \336les in the) 353.33 428.02 P
-0.28 (b) 221.4 414.02 P
-0.28 (uild\325) 227.16 414.02 P
-0.28 (s include directory \050$\050T) 249.17 414.02 P
-0.28 (OP\051/include\051. The \324depend\325 tar) 361.74 414.02 P
-0.28 (get cannot) 508.63 414.02 P
1.12 (be performed until after the \324includes\325 tar) 221.4 400.02 P
1.12 (get is complete. Hence the) 426.54 400.02 P
1.67 (\324Mak) 221.4 386.02 P
1.67 (e\336le\325 and \324depend\325 tar) 247.27 386.02 P
1.67 (gets had to be separated. The shorthand) 358.36 386.02 P
1.54 (\324mf) 221.4 372.02 P
1.54 (\325 tar) 239.39 372.02 P
1.54 (get, since it is not in) 260.37 372.02 P
1.54 (v) 364.27 372.02 P
1.54 (ok) 370.03 372.02 P
1.54 (ed in a hierarchical b) 381.91 372.02 P
1.54 (uild, performs) 488.47 372.02 P
-0.1 (both the \324Mak) 221.4 358.02 P
-0.1 (e\336le\325 and \324depend\325 tar) 289.08 358.02 P
-0.1 (gets. So when b) 394.86 358.02 P
-0.1 (uilding a Mak) 470.32 358.02 P
-0.1 (e\336le) 537.34 358.02 P
-0.06 (before the includes directory has been b) 221.4 344.02 P
-0.06 (uilt, use \324Mak) 412.07 344.02 P
-0.06 (e\336le\325 rather than) 478.82 344.02 P
(\324mf) 221.4 330.02 T
(\325. But in normal de) 239.39 330.02 T
(v) 330.08 330.02 T
(elopment, you can use \324mf) 335.9 330.02 T
(\325.) 464.21 330.02 T
1 F
(4.) 207 304.02 T
0 F
1.67 (All of the ingest modules in zeb/ingest ha) 221.4 304.02 P
1.67 (v) 432.53 304.02 P
1.67 (e been mo) 438.35 304.02 P
1.67 (v) 490.84 304.02 P
1.67 (ed into their) 496.66 304.02 P
1.09 (o) 221.4 290.02 P
1.09 (wn subdirectory) 227.1 290.02 P
1.09 (. Library routines that other ingest modules depend) 305.06 290.02 P
(upon are compiled and installed from zeb/ingest/ingest.) 221.4 276.02 T
1 F
(5.) 207 250.02 T
0 F
0.58 (The distrib) 221.4 250.02 P
0.58 (ution hierarch) 274.08 250.02 P
0.58 (y no) 341.59 250.02 P
0.58 (w includes a ne) 362.87 250.02 P
0.58 (w subdirectory) 438.64 250.02 P
0.58 (, zeb/con-) 510.1 250.02 P
0.46 (\336g, which contains the imak) 221.4 236.02 P
0.46 (e source and necessary con\336guration and) 358.77 236.02 P
(template \336les. Zebra\325) 221.4 222.02 T
(s projet-speci\336c \336les are in zeb/con\336g/project.) 323.05 222.02 T
72 178.02 558 181.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 179.52 558 179.52 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 179.52 198 179.52 2 L
0 Z
N
0 0 612 792 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(3.3) 181.32 185.02 T
(General Imake Features) 207 185.02 T
0 F
-0.08 (Imak) 207 160.02 P
-0.08 (e\336les are designed to be as machine-independent as possible. Mak) 231.54 160.02 P
-0.08 (e-) 548.68 160.02 P
-0.23 (\336le v) 207 146.02 P
-0.23 (ariables are used where) 230.81 146.02 P
-0.23 (v) 342.12 146.02 P
-0.23 (er possible to name source \336les, object \336les,) 347.94 146.02 P
1.52 (libraries, and e) 207 132.02 P
1.52 (v) 280.72 132.02 P
1.52 (en shell commands such as \324rm\325 and \324cat\325. The use of) 286.54 132.02 P
-0.13 (Mak) 207 118.02 P
-0.13 (e\336le v) 228.88 118.02 P
-0.13 (ariables allo) 258.11 118.02 P
-0.13 (ws a great deal of \337e) 316 118.02 P
-0.13 (xibility) 414.82 118.02 P
-0.13 (. Usually each v) 448.72 118.02 P
-0.13 (ariable) 525.35 118.02 P
0.04 (def) 207 104.02 P
0.04 (aults to some normal v) 222.2 104.02 P
0.04 (alue in the mak) 331.39 104.02 P
0.04 (e\336le, b) 405.04 104.02 P
0.04 (ut this v) 437.5 104.02 P
0.04 (alue can be o) 475.95 104.02 P
0.04 (v) 538.86 104.02 P
0.04 (er-) 544.68 104.02 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "21" 21
%%Page: "22" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Guide to Imake f) 189 736.18 T
(or Zebra De) 258.84 736.18 T
(veloper) 308.72 736.18 T
(s) 340.6 736.18 T
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
2 10 Q
(22) 54 60.29 T
2 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.35 (ridden from the command line of the mak) 189 678.02 P
0.35 (e\0501\051 command. F) 391.65 678.02 P
0.35 (or e) 474.49 678.02 P
0.35 (xample, a) 492.99 678.02 P
2.38 (programmer may w) 189 664.02 P
2.38 (ant to compile a source \336le with the cpp symbol) 288.28 664.02 P
0.07 (DEB) 189 650.02 P
0.07 (UG set, e) 212.88 650.02 P
0.07 (v) 257.7 650.02 P
0.07 (en though this is not the def) 263.52 650.02 P
0.07 (ault in the Mak) 397.13 650.02 P
0.07 (e\336le. Using an) 470.21 650.02 P
(imak) 189 636.02 T
(e-generated Mak) 212.88 636.02 T
(e\336le, the mak) 293.72 636.02 T
(e command w) 358.6 636.02 T
(ould be) 425.8 636.02 T
4 F
(% make DEFINES=-DDEBUG) 212.4 610.02 T
0 F
1.05 (The same mak) 189 584.02 P
1.05 (e v) 260.96 584.02 P
1.05 (ariables are generated from each and e) 276.04 584.02 P
1.05 (v) 466.6 584.02 P
1.05 (ery Imak) 472.42 584.02 P
1.05 (e\336le.) 516.34 584.02 P
1.41 (So e) 189 570.02 P
1.41 (v) 211.11 570.02 P
1.41 (en without ha) 216.93 570.02 P
1.41 (ving written the Imak) 284.83 570.02 P
1.41 (e\336le originally) 392.58 570.02 P
1.41 (, a programmer) 463.54 570.02 P
0.77 (can be assured that the DEFINES v) 189 556.02 P
0.77 (ariable is referenced in the Mak) 363.31 556.02 P
0.77 (e\336le) 519.34 556.02 P
(and will produce the desired results.) 189 542.02 T
0.75 (Imak) 189 516.02 P
0.75 (e\336le rules are de\336ned once in a central \336le rather than redundantly) 213.54 516.02 P
1.33 (copied into e) 189 502.02 P
1.33 (v) 253.36 502.02 P
1.33 (ery Mak) 259.18 502.02 P
1.33 (e\336le which requires a particular rule. Thus rules) 300.71 502.02 P
0.81 (can be adjusted in a single location for dif) 189 488.02 P
0.81 (ferent de) 396.47 488.02 P
0.81 (v) 439.29 488.02 P
0.81 (elopment beha) 445.11 488.02 P
0.81 (viors) 516 488.02 P
1.8 (and for machine portability) 189 474.02 P
1.8 (. F) 324.61 474.02 P
1.8 (or e) 338.91 474.02 P
1.8 (xample, here is the de\336nition of the) 358.86 474.02 P
(BuildIncludes\050\051 macro:) 189 460.02 T
4 10 Q
(#ifndef BuildIncludes) 90 435.35 T
(#define BuildIncludes\050srclist,dstsubdir,dstupdir\051 @@\134) 90 423.35 T
(includes:: @@\134) 90 411.35 T
(MakeDir\050$\050BUILDINCDIR\051/dstsubdir\051 @@\134) 126 399.35 T
(@\050set -x; cd $\050BUILDINCDIR\051/dstsubdir; for i in srclist; do \134 @@\134) 126 387.35 T
($\050RM\051 $$i; \134 @@\134) 126 375.35 T
($\050CP\051 -p $\050BUILDINCTOP\051/dstupdir/$\050CURRENT_DIR\051/$$i .; \134 @@\134) 126 363.35 T
(done\051) 126 351.35 T
(#endif /* BuildIncludes */) 90 339.35 T
0 12 Q
2.19 (Note the \322@@\323 strings at the end of each line. When in) 189 314.02 P
2.19 (v) 479.99 314.02 P
2.19 (ok) 485.75 314.02 P
2.19 (ed in an) 497.63 314.02 P
3.69 (Imak) 189 300.02 P
3.69 (e\336le as BuildIncludes\050$\050HEADERS\051,.,.\051, using the de\336nition in) 213.54 300.02 P
(Zebra.rules, this macro e) 189 286.02 T
(xpands to) 307.79 286.02 T
4 10 Q
(includes::) 90 261.35 T
(@if [ -d $\050BUILDINCDIR\051/. ]; then set +x; \134) 126 249.35 T
(else \050set -x; $\050MKDIRHIER\051 $\050BUILDINCDIR\051/.\051; fi) 126 237.35 T
(@\050set -x; cd $\050BUILDINCDIR\051/.; for i in $\050HEADERS\051; do \134) 126 225.35 T
($\050RM\051 $$i; \134) 126 213.35 T
($\050CP\051 -p $\050BUILDINCTOP\051/./$\050CURRENT_DIR\051/$$i .; \134) 126 201.35 T
(done\051) 126 189.35 T
0 12 Q
1.43 (This is a Mak) 189 164.02 P
1.43 (e\336le rule for installing the \336les in the \324srclist\325 parameter) 258.83 164.02 P
3.27 (into the directory $\050B) 189 150.02 P
3.27 (UILDINCDIR\051/dstsubdir) 302.34 150.02 P
3.27 (. [B) 423 150.02 P
3.27 (UILDINCDIR is a) 444.15 150.02 P
-0.23 (Mak) 189 136.02 P
-0.23 (e\336le v) 210.88 136.02 P
-0.23 (ariable that gi) 240.01 136.02 P
-0.23 (v) 305.25 136.02 P
-0.23 (es the location of the include directory in use by) 311.07 136.02 P
6.08 (an entire distrib) 189 122.02 P
6.08 (ution. F) 276.25 122.02 P
6.08 (or Zebra, B) 319.49 122.02 P
6.08 (UILDINCDIR usually equals) 386.52 122.02 P
-0.03 ($\050T) 189 108.02 P
-0.03 (OP\051/include, where $\050T) 206.11 108.02 P
-0.03 (OP\051 is the relati) 319.47 108.02 P
-0.03 (v) 394.74 108.02 P
-0.03 (e path to the top of the distri-) 400.56 108.02 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "22" 22
%%Page: "23" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(General Imake Features) 207 736.18 T
72 726.98 558 726.98 2 L
0.25 H
N
72 74.02 558 74.02 2 L
2 Z
N
2 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
2 10 Q
-2.78 (23) 546.88 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.28 (b) 207 678.02 P
0.28 (ution hierarch) 212.76 678.02 P
0.28 (y) 279.96 678.02 P
0.28 (. T) 285.18 678.02 P
0.28 (OP is set automatically when Mak) 298.57 678.02 P
0.28 (e\336les are generated) 464.82 678.02 P
(for subdirectories. F) 207 664.02 T
(or e) 303.8 664.02 T
(xample, in zebra/gp, T) 321.95 664.02 T
(OP=..]) 430.04 664.02 T
0.68 (The header \336les are in the Mak) 207 638.02 P
0.68 (e\336le HEADERS v) 360.26 638.02 P
0.68 (ariable, and the subdi-) 449.31 638.02 P
2.17 (rectory is \324.) 207 624.02 P
2.17 (\325, hence the path back to the top of the include directory) 265.49 624.02 P
3.72 (\050dstupdir\051 is \324.) 207 610.02 P
3.72 (\325. The most common macros and their uses will be) 281.92 610.02 P
(described in more detail later) 207 596.02 T
(.) 346.31 596.02 T
1.33 (The BuildIncludes\050\051 macro is an e) 207 570.02 P
1.33 (xample of a rule which has been re-) 377.09 570.02 P
1.35 (de\336ned for Zebra\325) 207 556.02 P
1.35 (s de) 296.35 556.02 P
1.35 (v) 316.4 556.02 P
1.35 (elopment en) 322.22 556.02 P
1.35 (vironment. Usually) 382.08 556.02 P
1.35 (, BuildIncludes\050\051) 475.32 556.02 P
2.5 (installs header \336les by simply creating symbolic links in the include) 207 542.02 P
0.38 (directory to the header \336le in the source directory) 207 528.02 P
0.38 (. Zebra uses a dif) 446.5 528.02 P
0.38 (ferent) 530.02 528.02 P
2.41 (beha) 207 514.02 P
2.41 (vior; header \336les are copied directly into the hierarch) 229.42 514.02 P
2.41 (y\325) 503.26 514.02 P
2.41 (s include) 512.59 514.02 P
0.14 (directory rather than link) 207 500.02 P
0.14 (ed. [The -p option, on those systems which sup-) 326.93 500.02 P
-0.2 (port it, preserv) 207 486.02 P
-0.2 (es the modi\336cation time of the copied \336le rather than using) 276.73 486.02 P
(the time of the cop) 207 472.02 T
(y) 296.87 472.02 T
(.]) 302.09 472.02 T
0.79 (The Imak) 207 446.02 P
0.79 (e system of) 253.99 446.02 P
0.79 (fers a great deal of consistenc) 309.93 446.02 P
0.79 (y among the directo-) 455.98 446.02 P
1.29 (ries of a distrib) 207 432.02 P
1.29 (ution. Rules which e) 282.96 432.02 P
1.29 (v) 385.21 432.02 P
1.29 (ery Mak) 391.03 432.02 P
1.29 (e\336le needs, such as clean) 432.52 432.02 P
4.57 (and depend, and rules for generating Mak) 207 418.02 P
4.57 (e\336les, are automatically) 434.56 418.02 P
3.67 (included in the generated Mak) 207 404.02 P
3.67 (e\336le. Distrib) 367.54 404.02 P
3.67 (ution-wide v) 430.98 404.02 P
3.67 (ariables \050i.e.) 495.35 404.02 P
0.37 (project template v) 207 390.02 P
0.37 (ariables\051 are automatically included in e) 294.1 390.02 P
0.37 (v) 487.94 390.02 P
0.37 (ery Mak) 493.76 390.02 P
0.37 (e\336le,) 534.34 390.02 P
0.72 (so that e) 207 376.02 P
0.72 (v) 248.14 376.02 P
0.72 (ery directory will kno) 253.96 376.02 P
0.72 (w where to install an) 360.15 376.02 P
0.72 (y binaries it creates) 462.85 376.02 P
0.58 (and what command to use for RANLIB. \050\324ranlib\325 for BSD b) 207 362.02 P
0.58 (ut \324true\325 for) 500.86 362.02 P
0.73 (SYSV) 207 348.02 P
0.73 (.\051 Lik) 236.12 348.02 P
0.73 (e) 263.4 348.02 P
0.73 (wise, rule macros can be adjusted as necessary from a cen-) 268.43 348.02 P
0.53 (tral \336le and the changes will automatically be distrib) 207 334.02 P
0.53 (uted throughout the) 462.95 334.02 P
0.56 (distrib) 207 320.02 P
0.56 (ution. This can be especially important when porting distrib) 237.43 320.02 P
0.56 (utions) 528.66 320.02 P
0.14 (to dif) 207 306.02 P
0.14 (ferent platforms. If a particular rule must do something special on a) 232.51 306.02 P
0.38 (certain platform, the rule macro can be adjusted with #ifdef directi) 207 292.02 P
0.38 (v) 529.46 292.02 P
0.38 (es to) 535.28 292.02 P
4.75 (conform to that platform\325) 207 278.02 P
4.75 (s requirements. The adjustments will be) 342.92 278.02 P
-0.09 (re\337ected throughout the distrib) 207 264.02 P
-0.09 (ution hierarch) 354.8 264.02 P
-0.09 (y when the Mak) 421.63 264.02 P
-0.09 (e\336les are re-) 498.88 264.02 P
(made.) 207 250.02 T
1.11 (The Imak) 207 224.02 P
1.11 (e system has b) 254.31 224.02 P
1.11 (uilt-in support for subdirectories. If a directory) 327.05 224.02 P
2.82 (has subdirectories that must be b) 207 210.02 P
2.82 (uilt, and to which rules lik) 377.86 210.02 P
2.82 (e) 517.86 210.02 P
6 F
2.82 (clean) 529.01 210.02 P
0 F
2.82 (,) 555 210.02 P
6 F
0.74 (depend) 207 196.02 P
0 F
0.74 (, and) 241.66 196.02 P
6 F
0.74 (includes) 269.46 196.02 P
0 F
0.74 ( must be propag) 309.46 196.02 P
0.74 (ated, rules for these actions can be) 388.61 196.02 P
-0.02 (automatically included in the Mak) 207 182.02 P
-0.02 (e\336le. All that is necessary is the de\336ni-) 371.47 182.02 P
5.04 (tion of the) 207 168.02 P
4 F
12.1 (IHaveSubdirs) 274.46 168.02 P
0 F
5.04 ( cpp symbol and the mak) 360.86 168.02 P
5.04 (e v) 506.28 168.02 P
5.04 (ariable) 525.35 168.02 P
1.35 (SUBDIRS in the Imak) 207 154.02 P
1.35 (e\336le. Here is an e) 319.27 154.02 P
1.35 (xample from Zebra\325) 408.13 154.02 P
1.35 (s top-le) 506.8 154.02 P
1.35 (v) 543.52 154.02 P
1.35 (el) 549.34 154.02 P
(Imak) 207 140.02 T
(e\336le:) 231.54 140.02 T
4 F
(#define IHaveSubdirs) 230.4 114.02 T
(#define PassCDebugFlags) 230.4 100.02 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "23" 23
%%Page: "24" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Guide to Imake f) 189 736.18 T
(or Zebra De) 258.84 736.18 T
(veloper) 308.72 736.18 T
(s) 340.6 736.18 T
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
2 10 Q
(24) 54 60.29 T
2 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 12 Q
(#if BUILD_OPTIMIZER) 212.4 664.02 T
(OPTIMIZER_DIR = Optimizer) 212.4 650.02 T
(#endif) 212.4 636.02 T
(#if BUILD_INGEST) 212.4 622.02 T
(INGEST_DIR = ingest) 212.4 608.02 T
(#endif) 212.4 594.02 T
(SUBDIRS = config libutil msg timer \134) 212.4 566.02 T
(DataStore gp dm util datautil \134) 241.2 552.02 T
(pd $\050OPTIMIZER_DIR\051 $\050INGEST_DIR\051) 241.2 538.02 T
(DependSubdirs\050$\050SUBDIRS\051\051) 212.4 510.02 T
0 F
1.78 (The order of the subdirectories is important, since that is the order in) 189 484.02 P
0.74 (which the subdirectories are b) 189 470.02 P
0.74 (uilt. Directories whose objects are needed) 335.68 470.02 P
0.73 (by other directories should be listed \336rst in the SUBDIRS v) 189 456.02 P
0.73 (ariable. The) 481.96 456.02 P
0.75 (DependSubdirs\050\051 macro is included because \324depend:\325 tar) 189 442.02 P
0.75 (gets for subdi-) 469.18 442.02 P
-0.17 (rectories are not automatically included in the Imak) 189 428.02 P
-0.17 (e template, unlik) 435.32 428.02 P
-0.17 (e tar-) 515.18 428.02 P
(gets clean, all, and install.) 189 414.02 T
-0.04 (The) 189 388.02 P
4 F
-0.11 (PassCDebugFlags) 210.62 388.02 P
0 F
-0.04 ( de\336nes an) 318.62 388.02 P
-0.04 (y \337ags that should be propag) 369.67 388.02 P
-0.04 (ated to) 507.72 388.02 P
1.56 (subdirectories. F) 189 374.02 P
1.56 (or e) 270.38 374.02 P
1.56 (xample, if the ./ingest directory is being compiled) 290.08 374.02 P
2.57 (with CDEB) 189 360.02 P
2.57 (UGFLA) 247.79 360.02 P
2.57 (GS=-g, all of the subdirectories will be compiled) 287.3 360.02 P
(with this \337ag since the src/ingest Imak) 189 346.02 T
(e\336le de\336nes) 373.54 346.02 T
(P) 434.2 346.02 T
(assCDeb) 440.69 346.02 T
(ugFlags.) 483.11 346.02 T
4 10 Q
(#define PassCDebugFlags \324CDEBUGFLAGS=$\050CDEBUGFLAGS\051\325) 212.4 321.35 T
0 12 Q
1.47 (The de\336nition of P) 189 296.02 P
1.47 (assCDeb) 283.56 296.02 P
1.47 (ugFlags is included on the mak) 325.98 296.02 P
1.47 (e command) 482.87 296.02 P
0.75 (line for each of the subdirectories. In other situations, such as the xhelp) 189 282.02 P
0.52 (subdirectory of ./util, it probably isn\325) 189 268.02 P
0.52 (t v) 369.06 268.02 P
0.52 (ery useful to compile xhelp with) 381.73 268.02 P
(the deb) 189 254.02 T
(ug \337ag, so the util Imak) 223.75 254.02 T
(e\336le does not pass the deb) 337.63 254.02 T
(ug v) 463.04 254.02 T
(ariable.) 483.74 254.02 T
1.94 (Another important aspect of Imak) 189 228.02 P
1.94 (e is the CURDIR and T) 359.27 228.02 P
1.94 (OPDIR cpp) 481.73 228.02 P
0 (symbols. These symbols are passed from directory to subdirectory on the) 189 214.02 P
-0.19 (imak) 189 200.02 P
-0.19 (e command line by the) 212.88 200.02 P
6 F
-0.19 (Mak) 324.26 200.02 P
-0.19 (e\336les) 345.47 200.02 P
0 F
-0.19 ( tar) 370.13 200.02 P
-0.19 (get. The Mak) 385.38 200.02 P
-0.19 (e\336le kno) 449.21 200.02 P
-0.19 (ws its cur-) 490.38 200.02 P
0.7 (rent directory and appends the subdirectory name to this v) 189 186.02 P
0.7 (alue to de\336ne) 473.95 186.02 P
2.05 (the subdirectory\325) 189 172.02 P
2.05 (s CURDIR symbol. The T) 272.04 172.02 P
2.05 (OPDIR symbol is pre\336x) 406.36 172.02 P
2.05 (ed) 528.67 172.02 P
0.5 (with \324..) 189 158.02 P
0.5 (\325 for e) 223 158.02 P
0.5 (v) 253.02 158.02 P
0.5 (ery subdirectory) 258.84 158.02 P
0.5 (. The CURDIR and T) 336.88 158.02 P
0.5 (OPDIR symbols are) 442.33 158.02 P
0.15 (assigned to the CURRENT_DIR and T) 189 144.02 P
0.15 (OP Mak) 377.2 144.02 P
0.15 (e\336le v) 417.56 144.02 P
0.15 (ariables. F) 447.08 144.02 P
0.15 (or e) 497.04 144.02 P
0.15 (xam-) 515.34 144.02 P
1.42 (ple, in the gp Mak) 189 130.02 P
1.42 (e\336le, CURRENT_DIR=./gp and T) 282.24 130.02 P
1.42 (OP=../. Hence the) 451.4 130.02 P
-0.14 (include directory can be speci\336ed the same w) 189 116.02 P
-0.14 (ay for e) 406.19 116.02 P
-0.14 (v) 442.26 116.02 P
-0.14 (ery Mak) 448.08 116.02 P
-0.14 (e\336le, with-) 488.14 116.02 P
0.6 (out using an absolute pathname, as $\050T) 189 102.02 P
0.6 (OP\051/include. If the current direc-) 380 102.02 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "24" 24
%%Page: "25" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Zebra\325) 207 736.18 T
(s Own Imake\336le Features) 233.47 736.18 T
72 726.98 558 726.98 2 L
0.25 H
N
72 74.02 558 74.02 2 L
2 Z
N
2 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
2 10 Q
-2.78 (25) 546.88 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.27 (tory is ./ingest/class, $\050T) 207 678.02 P
0.27 (OP\051/include will be e) 325.93 678.02 P
0.27 (v) 428.77 678.02 P
0.27 (aluated as ../.././include\321) 434.47 678.02 P
1.02 (the correct directory) 207 664.02 P
1.02 (. F) 305.56 664.02 P
1.02 (or the T) 319.07 664.02 P
1.02 (OP and CURRENT_DIR v) 358.88 664.02 P
1.02 (ariables to be) 491.98 664.02 P
0.28 (correctly initialized, a \324mak) 207 650.02 P
0.28 (e Mak) 340.35 650.02 P
0.28 (e\336les\325 must be done from the top-le) 370.83 650.02 P
0.28 (v) 543.52 650.02 P
0.28 (el) 549.34 650.02 P
1.32 (directory) 207 636.02 P
1.32 (. Once initialized though, a Mak) 249.54 636.02 P
1.32 (e\336le will remember its v) 411.02 636.02 P
1.32 (alues) 533.34 636.02 P
0.37 (each time it is re-made. This hierarch) 207 622.02 P
0.37 (y-independent strate) 388.1 622.02 P
0.37 (gy for de\336ning) 485.94 622.02 P
-0.3 (distrib) 207 608.02 P
-0.3 (ution-wide v) 237.43 608.02 P
-0.3 (ariables is a lar) 297.83 608.02 P
-0.3 (ge contrib) 369.04 608.02 P
-0.3 (utor to Imak) 416.82 608.02 P
-0.3 (e\325) 475.43 608.02 P
-0.3 (s \337e) 484.1 608.02 P
-0.3 (xibility and) 503.29 608.02 P
(modularity) 207 594.02 T
(.) 258.89 594.02 T
72 550.02 558 553.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 551.52 558 551.52 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 551.52 198 551.52 2 L
0 Z
N
0 0 612 792 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(3.4) 181.32 557.02 T
(Zebra\325) 207 557.02 T
(s Own Imake\336le Features) 242.29 557.02 T
0 F
0.17 (Zebra uses some custom-designed Imak) 207 532.02 P
0.17 (e\336le rule macros for added capa-) 399.53 532.02 P
1.61 (bility and con) 207 518.02 P
1.61 (v) 275.73 518.02 P
1.61 (enience, from generating UI load \336les to creating com-) 281.55 518.02 P
0.57 (pressed tar distrib) 207 504.02 P
0.57 (ution \336les. An e) 293.22 504.02 P
0.57 (xcerpt from Zebra.rules describing the) 371.43 504.02 P
-0.06 (rules is included belo) 207 490.02 P
-0.06 (w) 308.84 490.02 P
-0.06 (, follo) 316.73 490.02 P
-0.06 (wed by e) 345.03 490.02 P
-0.06 (xamples of using some of the rules.) 388.05 490.02 P
0.47 (See the Imak) 207 476.02 P
0.47 (e\336les for the best e) 270.48 476.02 P
0.47 (xamples of using these rules. The actual) 362.85 476.02 P
0.3 (de\336nitions found in Zebra.rules are the \336nal authority on the beha) 207 462.02 P
0.3 (vior of) 525.37 462.02 P
-0.29 (each of these tar) 207 448.02 P
-0.29 (gets. Just as it is with program code, the rules \336le tends to) 284.2 448.02 P
(be updated more often than the documentation.) 207 434.02 T
0.87 (There are a fe) 207 408.02 P
0.87 (w general points about rule macros that might be helpful.) 275.58 408.02 P
0.33 (Where the tar) 207 394.02 P
0.33 (get is not a con) 272.75 394.02 P
0.33 (v) 346.24 394.02 P
0.33 (entional tar) 352.07 394.02 P
0.33 (get lik) 406.5 394.02 P
0.33 (e install or clean, the tar-) 437.05 394.02 P
0.14 (get is the \336rst parameter of the macro. So for the UI load \336le macros, the) 207 380.02 P
0.37 (\336rst parameter is the name of the .lf \336le which you w) 207 366.02 P
0.37 (ant to create. Since) 465.58 366.02 P
2.92 (this name is also the tar) 207 352.02 P
2.92 (get, \324mak) 334.36 352.02 P
2.92 (e <load\336le>\325 w) 382.48 352.02 P
2.92 (orks as you w) 461.71 352.02 P
2.92 (ould) 536.66 352.02 P
0.49 (e) 207 338.02 P
0.49 (xpect. F) 212.15 338.02 P
0.49 (or the CompleteProgramT) 251.12 338.02 P
0.49 (ar) 377.14 338.02 P
0.49 (get\050\051 macro, the \336rst parameter and) 386.25 338.02 P
0.84 (the Mak) 207 324.02 P
0.84 (e\336le tar) 247.38 324.02 P
0.84 (get is the program name. Also, note that a single macro) 284.32 324.02 P
-0.05 (can actually specify more than one tar) 207 310.02 P
-0.05 (get, either e) 389.13 310.02 P
-0.05 (xplicitly or by in) 445.18 310.02 P
-0.05 (v) 524.9 310.02 P
-0.05 (oking) 530.66 310.02 P
0.73 (another rule macro. F) 207 296.02 P
0.73 (or e) 312.32 296.02 P
0.73 (xample, CompleteProgramT) 331.19 296.02 P
0.73 (ar) 467.62 296.02 P
0.73 (get\050\051 in) 476.73 296.02 P
0.73 (v) 511.97 296.02 P
0.73 (ok) 517.73 296.02 P
0.73 (es the) 529.61 296.02 P
-0.02 (NormalProgramT) 207 282.02 P
-0.02 (ar) 291.36 282.02 P
-0.02 (get\050\051 rule macro and then adds an install tar) 300.47 282.02 P
-0.02 (get for the) 508.72 282.02 P
(tar) 207 268.02 T
(get program.) 219.44 268.02 T
2 F
(3.4.1) 171.31 236.02 T
(UI Load File T) 207 236.02 T
(ar) 284.72 236.02 T
(g) 295.88 236.02 T
(ets) 303.34 236.02 T
0 F
-0.15 (These macros co) 207 218.02 P
-0.15 (v) 287.17 218.02 P
-0.15 (er all of the methods for generating .lf \336les found in the) 292.99 218.02 P
(Zebra hierarch) 207 204.02 T
(y) 277.24 204.02 T
(.) 282.46 204.02 T
1 F
1.85 (UILoadFileT) 207 178.02 P
1.85 (ar) 273.24 178.02 P
1.85 (get\050load\336le,uisr) 284.45 178.02 P
1.85 (c\051) 363.9 178.02 P
0 F
1.85 (:) 373.22 178.02 P
6 F
1.85 (load\336le) 381.41 178.02 P
0 F
1.85 ( is the .lf \336le to be created,) 417.41 178.02 P
-0.25 (and) 207 164.02 P
6 F
-0.25 (uisr) 227.08 164.02 P
-0.25 (c) 245.31 164.02 P
0 F
-0.25 ( is the source \336le which will be \324read\325 into) 250.63 164.02 P
4 F
-0.6 (uic) 454.1 164.02 P
0 F
-0.25 (.  The) 475.7 164.02 P
6 F
-0.25 (uisr) 505.61 164.02 P
-0.25 (c) 523.83 164.02 P
0 F
-0.25 ( \336le is) 529.16 164.02 P
-0.12 (read into $\050UIC\051, pager$mode is set to f) 207 150.02 P
-0.12 (alse, and a \324sa) 397.98 150.02 P
-0.12 (v) 464.68 150.02 P
-0.12 (e <load\336le> all\325 is) 470.5 150.02 P
(performed.) 207 136.02 T
1 F
0.54 (UILoadFileDepsT) 207 110.02 P
0.54 (ar) 298.57 110.02 P
0.54 (get\050load\336le,uisr) 309.78 110.02 P
0.54 (c,deps\051) 389.23 110.02 P
0 F
0.54 (:) 424.9 110.02 P
6 F
0.54 (load\336le) 431.77 110.02 P
0 F
0.54 ( is the .lf \336le to be) 467.77 110.02 P
0.8 (created, and) 207 96.02 P
6 F
0.8 (uisr) 269.58 96.02 P
0.8 (c) 287.81 96.02 P
0 F
0.8 ( is the source \336le which will be \324read\325 into) 293.13 96.02 P
4 F
1.93 (uic) 507.13 96.02 P
0 F
0.8 (.  The) 528.73 96.02 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "25" 25
%%Page: "26" 26
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Guide to Imake f) 189 736.18 T
(or Zebra De) 258.84 736.18 T
(veloper) 308.72 736.18 T
(s) 340.6 736.18 T
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
2 10 Q
(26) 54 60.29 T
2 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 12 Q
1.93 (uisr) 189 678.02 P
1.93 (c) 207.23 678.02 P
0 F
1.93 ( \336le is read into $\050UIC\051, pager$mode is set to f) 212.56 678.02 P
1.93 (alse, and a \324sa) 456 678.02 P
1.93 (v) 528.85 678.02 P
1.93 (e) 534.67 678.02 P
1.04 (<load\336le> all\325 is performed.) 189 664.02 P
6 F
1.04 (deps) 331.68 664.02 P
0 F
1.04 ( is additional UI source \336les to list as) 353.68 664.02 P
(dependencies on the mak) 189 650.02 T
(e tar) 309.85 650.02 T
(get line.) 330.62 650.02 T
1 F
1.8 (UIBootFileDepsT) 189 624.02 P
1.8 (ar) 277.9 624.02 P
1.8 (get\050load\336le,uisr) 289.1 624.02 P
1.8 (c,deps\051) 368.56 624.02 P
0 F
1.8 (: T) 404.22 624.02 P
1.8 (ar) 418.73 624.02 P
1.8 (get which creates a .lf) 427.84 624.02 P
1.01 (boot-\336le from) 189 610.02 P
6 F
1.01 (uisr) 261.02 610.02 P
1.01 (c) 279.25 610.02 P
0 F
1.01 (, installs it and cleans it as well.  Additional depen-) 284.57 610.02 P
9.22 (dencies can be passed in the) 189 596.02 P
6 F
9.22 (deps) 382.27 596.02 P
0 F
9.22 ( parameter) 404.26 596.02 P
9.22 (.  Just lik) 463.8 596.02 P
9.22 (e) 534.67 596.02 P
6 F
(UILoadF) 189 582.02 T
(ileDepsT) 233.12 582.02 T
(ar) 275.35 582.02 T
(g) 285.58 582.02 T
(et) 291.46 582.02 T
0 F
( e) 300.12 582.02 T
(xcept it uses) 308.27 582.02 T
4 F
(uib) 370.6 582.02 T
0 F
( instead of) 392.2 582.02 T
4 F
(uic) 445.19 582.02 T
0 F
(.) 466.79 582.02 T
1 F
0.72 (UISimpleLoadFileT) 189 556.02 P
0.72 (ar) 290.58 556.02 P
0.72 (get\050load\336le,uisr) 301.79 556.02 P
0.72 (c\051) 381.24 556.02 P
0 F
0.72 (: T) 390.56 556.02 P
0.72 (ar) 403.99 556.02 P
0.72 (get which creates a .lf \336le) 413.1 556.02 P
3.45 (from uisrc, installs it and cleans it as well.  Unlik) 189 542.02 P
3.45 (e tar) 458.7 542.02 P
3.45 (gets abo) 482.92 542.02 P
3.45 (v) 525.85 542.02 P
3.45 (e,) 531.67 542.02 P
(\324ui$pager_mode\325 is not set.) 189 528.02 T
1 F
1.83 (UIT) 189 502.02 P
1.83 (estLoadFileT) 209.23 502.02 P
1.83 (ar) 276.13 502.02 P
1.83 (get\050load\336le,uisr) 287.34 502.02 P
1.83 (c\051) 366.79 502.02 P
0 F
1.83 (: Same as) 376.12 502.02 P
6 F
1.83 (UILoadF) 430.61 502.02 P
1.83 (ileT) 474.73 502.02 P
1.83 (ar) 492.3 502.02 P
1.83 (g) 502.53 502.02 P
1.83 (et) 508.41 502.02 P
0 F
1.83 (, b) 517.07 502.02 P
1.83 (ut) 530.66 502.02 P
0.83 (the) 189 488.02 P
6 F
0.83 (load\336le) 207.49 488.02 P
0 F
0.83 ( is not named as an all tar) 243.49 488.02 P
0.83 (get and not installed.  The) 371.38 488.02 P
6 F
0.83 (load\336le) 504 488.02 P
0 F
8.8 (must be speci\336cally mentioned in the) 189 474.02 P
6 F
8.8 (deplibs) 423.77 474.02 P
0 F
8.8 ( parameter of) 458.44 474.02 P
6 F
(T) 189 460.02 T
(estPr) 194.57 460.02 T
(o) 219.36 460.02 T
(gr) 225.24 460.02 T
(amT) 235.73 460.02 T
(ar) 255.96 460.02 T
(g) 266.18 460.02 T
(et) 272.06 460.02 T
0 F
( to be made when the test program is being made.) 280.73 460.02 T
1 F
1.39 (UICppLoadFileT) 189 434.02 P
1.39 (ar) 277.25 434.02 P
1.39 (get\050load\336le,uisr) 288.46 434.02 P
1.39 (c,dep\336les\051) 367.91 434.02 P
0 F
1.39 (:) 418.91 434.02 P
6 F
1.39 (uisr) 426.63 434.02 P
1.39 (c) 444.86 434.02 P
0 F
1.39 ( is processed with) 450.19 434.02 P
4 F
0.43 (cpp) 189 420.02 P
0 F
0.18 ( before being compiled with) 210.6 420.02 P
4 F
0.43 (uic) 349.82 420.02 P
0 F
0.18 ( to produce) 371.42 420.02 P
6 F
0.18 (load\336le) 428.95 420.02 P
0 F
0.18 (.) 464.95 420.02 P
6 F
0.18 (dep\336les) 474.31 420.02 P
0 F
0.18 ( is the) 510.97 420.02 P
1.13 (list of \336les, other than) 189 406.02 P
6 F
1.13 (uisr) 302.66 406.02 P
1.13 (c) 320.89 406.02 P
0 F
1.13 (, on which) 326.22 406.02 P
6 F
1.13 (uisr) 382.94 406.02 P
1.13 (c) 401.17 406.02 P
0 F
1.13 ( depends \050i.e., the included) 406.5 406.02 P
(\336les\051.) 189 392.02 T
2 F
(3.4.2) 153.31 360.02 T
(Pr) 189 360.02 T
(ogram T) 201.43 360.02 T
(ar) 247.81 360.02 T
(g) 258.97 360.02 T
(ets) 266.42 360.02 T
0 F
0.5 (These tar) 189 342.02 P
0.5 (gets compile a program. These are the tar) 233.6 342.02 P
0.5 (gets most common in) 435.49 342.02 P
(Zebra Imak) 189 328.02 T
(e\336les.) 244.52 328.02 T
1 F
(CompletePr) 189 302.02 T
(ogramT) 250.76 302.02 T
(ar) 290.99 302.02 T
(get\050pr) 302.2 302.02 T
(ogram,objects,deplibs,locallibs,syslibs\051) 333.3 302.02 T
0 F
(:) 530.65 302.02 T
2.95 (Elaborates the) 189 288.02 P
6 F
2.95 (NormalPr) 266.22 288.02 P
2.95 (o) 314.35 288.02 P
2.95 (gr) 320.23 288.02 P
2.95 (amT) 330.72 288.02 P
2.95 (ar) 350.95 288.02 P
2.95 (g) 361.18 288.02 P
2.95 (et) 367.06 288.02 P
0 F
2.95 ( rule in Imak) 375.72 288.02 P
2.95 (e.rules, adding the) 446.11 288.02 P
6 F
0.61 (pr) 189 274.02 P
0.61 (o) 199.13 274.02 P
0.61 (gr) 205.01 274.02 P
0.61 (am) 215.5 274.02 P
0 F
0.61 ( to the all:: tar) 230.16 274.02 P
0.61 (get and generating a saber tar) 299.72 274.02 P
0.61 (get.  Also generates) 443.52 274.02 P
(the install tar) 189 260.02 T
(get for the program.) 251.45 260.02 T
(<program>) 189 234.02 T
(Name of program to create \050the Mak) 284.4 234.02 T
(e\336le tar) 460.22 234.02 T
(get\051) 496.33 234.02 T
(<objects>) 189 208.02 T
(Objects on which the program depends and which) 284.4 208.02 T
(should be link) 284.4 194.02 T
(ed.) 352.28 194.02 T
(<deplibs>) 189 168.02 T
-0.21 (Local libraries, such as $\050LIBZEB\051, which should be) 284.4 168.02 P
(listed as dependencies.  Almost al) 284.4 154.02 T
(w) 446.93 154.02 T
(ays this) 455.47 154.02 T
(parameter is simply $\050DEPLIBS\051, and the def) 284.4 140.02 T
(ault) 503.92 140.02 T
(v) 284.4 126.02 T
(alue for DEPLIBS set in Project.tmpl is used.) 290.1 126.02 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "26" 26
%%Page: "27" 27
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Zebra\325) 207 736.18 T
(s Own Imake\336le Features) 233.47 736.18 T
72 726.98 558 726.98 2 L
0.25 H
N
72 74.02 558 74.02 2 L
2 Z
N
2 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
2 10 Q
-2.78 (27) 546.88 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(<locallibs>) 207 678.02 T
(Local libraries required, such as LIBZEB,) 302.4 678.02 T
(LIBNETCDF) 302.4 664.02 T
(, LIBRDSS, and so on.) 367.44 664.02 T
(<syslibs>) 207 638.02 T
(System libraries, such as $\050LIBMA) 302.4 638.02 T
(TH\051,) 471.38 638.02 T
($\050LIBTERMCAP\051, or $\050LIBREGEXP\051.) 302.4 624.02 T
1 F
-0.3 (CccPr) 207 598.02 P
-0.3 (ogramT) 238.76 598.02 P
-0.3 (ar) 278.99 598.02 P
-0.3 (get\050pr) 290.2 598.02 P
-0.3 (ogram,objects,deplibs,locallibs,syslibs\051) 321.3 598.02 P
0 F
-0.3 (: Gener-) 518.65 598.02 P
0.62 (ates rules to compile and link a C++ program. Since it does not use an) 207 584.02 P
0.62 (y) 552 584.02 P
1.74 (def) 207 570.02 P
1.74 (ault object \336les, it may be used for multiple programs in the same) 222.2 570.02 P
0.43 (Imak) 207 556.02 P
0.43 (e\336le.  It also adds an install tar) 231.54 556.02 P
0.43 (get for the program.  This rule relies) 381.01 556.02 P
4.49 (on an implicit rule for .cc.o: de\336ned in Project.tmpl. It uses the) 207 542.02 P
0.92 (Imak) 207 528.02 P
0.92 (e.rules macro) 231.54 528.02 P
6 F
0.92 (CplusplusPr) 301.01 528.02 P
0.92 (o) 360.49 528.02 P
0.92 (gr) 366.37 528.02 P
0.92 (amT) 376.85 528.02 P
0.92 (ar) 397.09 528.02 P
0.92 (g) 407.31 528.02 P
0.92 (et) 413.19 528.02 P
0 F
0.92 ( and adds the install and all) 421.85 528.02 P
(tar) 207 514.02 T
(gets.) 219.44 514.02 T
2 F
(3.4.3) 171.31 482.02 T
(The Inc) 207 482.02 T
(ludes T) 248.77 482.02 T
(ar) 289.82 482.02 T
(g) 300.98 482.02 T
(et) 308.44 482.02 T
1 F
31.36 (BuildIncludes\050headers,dstsubdir) 207 464.02 P
31.36 (,dstupdir\051) 372.94 464.02 P
0 F
31.36 (: Rede\336nes the) 423.95 464.02 P
6 F
2.57 (BuildIncludes) 207 450.02 P
0 F
2.57 ( macro of Imak) 273.66 450.02 P
2.57 (e.rules. Copies \336les rather than creating) 354.88 450.02 P
-0.28 (symbolic links. The -p option, use on those systems which support it, pre-) 207 436.02 P
2.54 (serv) 207 422.02 P
2.54 (es the modi\336cation time of the \336le so the cop) 226.81 422.02 P
2.54 (y will not force a) 465.86 422.02 P
1.75 (remak) 207 408.02 P
1.75 (e of dependent \336les unless the header \336le has actually changed.) 236.87 408.02 P
4 F
3.58 (dstsubdir) 207 394.02 P
0 F
1.49 ( is the subdirectory path within the include dir where the) 271.8 394.02 P
0.39 (\336le will be put. E.g. for X this is commonly X11, and) 207 380.02 P
4 F
0.93 (dstupdir) 470.96 380.02 P
0 F
0.39 ( is the) 528.56 380.02 P
3.03 (path back to the topdir) 207 366.02 P
3.03 (, i.e., \324..) 326.64 366.02 P
3.03 (\325. Zebra will most lik) 368.52 366.02 P
3.03 (ely al) 482.19 366.02 P
3.03 (w) 511.43 366.02 P
3.03 (ays use) 519.98 366.02 P
4 F
(BuildIncludes\050headers) 207 352.02 T
0 F
(,.,.\051) 358.2 352.02 T
2 F
(3.4.4) 171.31 320.02 T
(The Distrib) 207 320.02 T
(ution List T) 269.44 320.02 T
(ar) 333.14 320.02 T
(g) 344.3 320.02 T
(ets) 351.76 320.02 T
0 F
0.65 (This section can be skipped without missing an) 207 302.02 P
0.65 (y necessary information,) 438.39 302.02 P
0.52 (b) 207 288.02 P
0.52 (ut you may \336nd some of it useful e) 212.76 288.02 P
0.52 (v) 383.92 288.02 P
0.52 (entually) 389.74 288.02 P
0.52 (. All of these rules pro) 427.62 288.02 P
0.52 (vide) 537.34 288.02 P
1.29 (e) 207 274.02 P
1.29 (xtremely useful tar) 212.15 274.02 P
1.29 (gets for creating manifest lists, tar \336les, and link) 305.16 274.02 P
1.29 (ed) 546.67 274.02 P
0.78 (trees from a source hierarch) 207 260.02 P
0.78 (y) 343.99 260.02 P
0.78 (, without interference by e) 349.21 260.02 P
0.78 (xisting object or) 478.45 260.02 P
(e) 207 246.02 T
(x) 212.15 246.02 T
(ecutable \336les and without kno) 217.97 246.02 T
(wledge of the lo) 361.66 246.02 T
(wer subdirectory le) 439.01 246.02 T
(v) 531.35 246.02 T
(els.) 537.17 246.02 T
1 F
0.33 (Dist\336lesT) 207 220.02 P
0.33 (ar) 254.57 220.02 P
0.33 (get\050dist\336les\051) 265.78 220.02 P
0 F
0.33 (: Echoes each of the \336les in) 327.77 220.02 P
6 F
0.33 (dist\336les) 465.02 220.02 P
0 F
0.33 (, prepended) 501.69 220.02 P
1.14 (with the $\050DISTCURDIR\051 v) 207 206.02 P
1.14 (ariable. DISTCURDIR def) 347.11 206.02 P
1.14 (aults to the path) 478.25 206.02 P
1.63 (of the Imak) 207 192.02 P
1.63 (e\336le\325) 265.46 192.02 P
1.63 (s directory relati) 289.46 192.02 P
1.63 (v) 371.07 192.02 P
1.63 (e to the top, b) 376.89 192.02 P
1.63 (ut it is intended to be) 448.84 192.02 P
0.38 (o) 207 178.02 P
0.38 (v) 212.82 178.02 P
0.38 (erridden on the command line. The) 218.64 178.02 P
6 F
0.38 (dist\336les) 392.53 178.02 P
0 F
0.38 ( are listed as dependencies) 429.2 178.02 P
1.17 (of the dist\336les:: tar) 207 164.02 P
1.17 (get, so the tar) 300.64 164.02 P
1.17 (get f) 368.6 164.02 P
1.17 (ails if a \336le does not e) 391.31 164.02 P
1.17 (xist. [GNU) 503.5 164.02 P
4 F
0.25 (make) 207 150.02 P
0 F
0.1 ( \336rst attempts to check the \336le out of RCS.] The) 235.8 150.02 P
6 F
0.1 (dist\336les) 470.25 150.02 P
0 F
0.1 ( parameter) 506.92 150.02 P
(should usually be the $\050DISTFILES\051 v) 207 136.02 T
(ariable.) 393.02 136.02 T
1 F
0.12 (Dist\336lesSubdirs\050subdirs\051) 207 110.02 P
0 F
0.12 (: Propag) 333.7 110.02 P
0.12 (ate the) 374.08 110.02 P
4 F
0.28 (distfiles) 408.97 110.02 P
0 F
0.12 ( tar) 473.77 110.02 P
0.12 (get to the sub-) 489.33 110.02 P
-0.12 (directories listed in the) 207 96.02 P
6 F
-0.12 (subdir) 319.16 96.02 P
-0.12 (s) 349.71 96.02 P
0 F
-0.12 ( parameter) 354.38 96.02 P
-0.12 (. A ne) 404.57 96.02 P
-0.12 (w v) 433.02 96.02 P
-0.12 (alue of) 450.26 96.02 P
-0.12 (DISTCURDIR) 486 96.02 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "27" 27
%%Page: "28" 28
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Guide to Imake f) 189 736.18 T
(or Zebra De) 258.84 736.18 T
(veloper) 308.72 736.18 T
(s) 340.6 736.18 T
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
2 10 Q
(28) 54 60.29 T
2 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
1.39 (is passed as $\050DISTCURDIR\051/$$subdir so that a special top-le) 189 681.7 P
1.39 (v) 500.46 681.7 P
1.39 (el path) 506.28 681.7 P
(can be gi) 189 667.7 T
(v) 232.02 667.7 T
(en, as in the case of making a tar \336le of a whole distrib) 237.84 667.7 T
(ution.) 500.22 667.7 T
0.86 (The) 189 641.7 P
6 F
0.86 (dist\336les) 211.52 641.7 P
0 F
0.86 ( tar) 248.19 641.7 P
0.86 (get lists the \336les of a directory intended for distrib) 264.5 641.7 P
0.86 (ution.) 512.33 641.7 P
1.83 (The Imak) 189 627.7 P
1.83 (e\336le stores a list of the distribtution \336les in the) 237.03 627.7 P
1.83 (DISTFILES) 481.33 627.7 P
2.35 (v) 189 613.7 P
2.35 (ariable, and passes the v) 194.7 613.7 P
2.35 (alue of this v) 320.09 613.7 P
2.35 (ariable to the) 389.16 613.7 P
2.35 (Dist\336lesT) 461.86 613.7 P
2.35 (ar) 508.24 613.7 P
2.35 (get\050\051) 517.34 613.7 P
1.04 (macro. The dist\336les:: rule echoes each of the \336lenames in DISTFILES,) 189 599.7 P
2.3 (prepended with the DISTCURDIR v) 189 585.7 P
2.3 (ariable. F) 373.88 585.7 P
2.3 (or e) 421.32 585.7 P
2.3 (xample, in the msg) 441.77 585.7 P
(directory) 189 571.7 T
(,) 231.54 571.7 T
4 10 Q
(% make distfiles) 212.4 547.03 T
(./msg/Imakefile) 212.4 535.03 T
(./msg/msg_lib.c) 212.4 523.03 T
(./msg/msg_BCast.c) 212.4 511.03 T
(./msg/netread.c) 212.4 499.03 T
(./msg/message.c) 212.4 487.03 T
(./msg/fccstop.c) 212.4 475.03 T
(./msg/mstatus.c) 212.4 463.03 T
(./msg/msg_ping.c) 212.4 451.03 T
(./msg/zquery.c) 212.4 439.03 T
(./msg/mlog.c) 212.4 427.03 T
(./msg/cquery.c) 212.4 415.03 T
(./msg/mtest.c) 212.4 403.03 T
(./msg/writev.c) 212.4 391.03 T
(./msg/cmd_proto.c) 212.4 379.03 T
(./msg/message.h) 212.4 367.03 T
0 12 Q
0.5 (F) 189 341.7 P
0.5 (or Imak) 195.49 341.7 P
0.5 (e\336les with subdirectories, the Dist\336lesSubdirs\050\051 macro e) 233.53 341.7 P
0.5 (xpands) 506 341.7 P
0.03 (to a dist\336les:: tar) 189 327.7 P
0.03 (get which performs a \324mak) 269.21 327.7 P
0.03 (e dist\336les\325 in each of the sub-) 398.51 327.7 P
2.9 (directories. Sometimes the DISTSUBDIRS v) 189 313.7 P
2.9 (ariable is dif) 417.3 313.7 P
2.9 (ferent from) 482.79 313.7 P
1.95 (SUBDIRS, since all subdirectories should be included in distrib) 189 299.7 P
1.95 (utions) 510.66 299.7 P
1.64 (e) 189 285.7 P
1.64 (v) 194.03 285.7 P
1.64 (en though the current con\336guration does not b) 199.85 285.7 P
1.64 (uild in some of those) 432.76 285.7 P
(subdirectories. This tar) 189 271.7 T
(get mak) 299.1 271.7 T
(es possible some useful operations.) 337.31 271.7 T
0.44 (W) 189 245.7 P
0.44 (ithout ha) 199.85 245.7 P
0.44 (ving to clean a directory or remo) 242.39 245.7 P
0.44 (v) 402.17 245.7 P
0.44 (e an) 407.99 245.7 P
0.44 (y backup \336les, you can) 427.91 245.7 P
0.31 (tar a directory and an) 189 231.7 P
0.31 (y or all of its subdirectories. Lik) 292.02 231.7 P
0.31 (e) 448.09 231.7 P
0.31 (wise, a \336le can be) 453.11 231.7 P
3.7 (under de) 189 217.7 P
3.7 (v) 234.06 217.7 P
3.7 (elopment and under re) 239.88 217.7 P
3.7 (vision control, b) 358.33 217.7 P
3.7 (ut until the \336le is) 443.83 217.7 P
-0.26 (included in the DISTFILES v) 189 203.7 P
-0.26 (ariable, it will not be distrib) 329.66 203.7 P
-0.26 (uted. The tar \336le) 461.46 203.7 P
-0.26 (generated by the follo) 189 189.7 P
-0.26 (wing command will only include the \336les necessary) 292.88 189.7 P
(to b) 189 175.7 T
(uild that directory:) 207.1 175.7 T
4 10 Q
(% tar cvf - `make -s distfiles DISTCURDIR=.` | compress -c > msg.tar.Z) 90 151.03 T
(a ./Imakefile 6 blocks) 90 139.03 T
(a ./msg_lib.c 34 blocks) 90 127.03 T
(a ./msg_BCast.c 8 blocks) 90 115.03 T
(a ./netread.c 4 blocks) 90 103.03 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "28" 28
%%Page: "29" 29
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Zebra\325) 207 736.18 T
(s Own Imake\336le Features) 233.47 736.18 T
72 726.98 558 726.98 2 L
0.25 H
N
72 74.02 558 74.02 2 L
2 Z
N
2 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
2 10 Q
-2.78 (29) 546.88 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 F
(a ./message.c 71 blocks) 108 679.35 T
(a ./fccstop.c 3 blocks) 108 667.35 T
(a ./mstatus.c 3 blocks) 108 655.35 T
(a ./msg_ping.c 5 blocks) 108 643.35 T
(a ./zquery.c 4 blocks) 108 631.35 T
(a ./mlog.c 6 blocks) 108 619.35 T
(a ./cquery.c 4 blocks) 108 607.35 T
(a ./mtest.c 4 blocks) 108 595.35 T
(a ./writev.c 4 blocks) 108 583.35 T
(a ./cmd_proto.c 4 blocks) 108 571.35 T
(a ./message.h 13 blocks) 108 559.35 T
0 12 Q
0.59 (The \324DISTCURDIR=.) 207 534.02 P
0.59 (\325 o) 314.17 534.02 P
0.59 (v) 327.58 534.02 P
0.59 (errides DISTCURDIR=$\050CURRENT_DIR\051 in) 333.4 534.02 P
1.02 (the Mak) 207 520.02 P
1.02 (e\336le. In the ingest directory) 247.56 520.02 P
1.02 (, the same command w) 383.16 520.02 P
1.02 (ould mak) 497.43 520.02 P
1.02 (e a) 543.33 520.02 P
(tar \336le of all of the ingest modules.) 207 506.02 T
0.57 (Suppose you w) 207 480.02 P
0.57 (ant to create a shado) 281.35 480.02 P
0.57 (w directory of part of Zebra without) 381.29 480.02 P
-0.18 (cop) 207 466.02 P
-0.18 (ying all of the source \336les or necessitating a preliminary cleaning. F) 224.21 466.02 P
-0.18 (or) 548 466.02 P
1.05 (e) 207 452.02 P
1.05 (xample, to create a link) 212.15 452.02 P
1.05 (ed cop) 328.53 452.02 P
1.05 (y of /zeb/src/gp in /zeb/src/gp/noshm so) 361.11 452.02 P
0 (that you can compile a graphics process without the shared memory de\336-) 207 438.02 P
(nition:) 207 424.02 T
(In the /zeb/src/gp/noshm directory) 207 398.02 T
(,) 371.2 398.02 T
4 10 Q
(% ln -s `\050cd /zeb/src/gp; make -s DISTCURDIR=/zeb/src/gp distfiles\051` .) 108 373.35 T
0 12 Q
-0.05 (All of the \336les necessary for making the gp directory will no) 207 348.02 P
-0.05 (w be links in) 496.47 348.02 P
(/zeb/src/gp/noshm. Create a Mak) 207 334.02 T
(e\336le with) 365.52 334.02 T
4 10 Q
(% imake -I/zeb/config -I/zeb/imake -DCURDIR=/zeb/gp/noshm -DTOPDIR=/zeb) 108 309.35 T
0 12 Q
(and compile with) 207 284.02 T
4 10 Q
(% make SHMDEFINES=) 230.4 259.35 T
0 12 Q
0.66 (F) 207 234.02 P
0.66 (or making full distrib) 213.49 234.02 P
0.66 (utions of Zebra from within the source hierarch) 317.58 234.02 P
0.66 (y) 549.78 234.02 P
0.66 (,) 555 234.02 P
0.19 (the) 207 220.02 P
6 F
0.19 (tar\336le) 224.85 220.02 P
0 F
0.19 ( tar) 253.52 220.02 P
0.19 (get is included in the top-le) 269.16 220.02 P
0.19 (v) 400.8 220.02 P
0.19 (el Imak) 406.62 220.02 P
0.19 (e\336le. This tar) 443.01 220.02 P
0.19 (get creates) 506.83 220.02 P
0.84 (a subdirectory called $\050T) 207 206.02 P
0.84 (ARN) 328.7 206.02 P
0.84 (AME\051 and puts links to the top-le) 353.61 206.02 P
0.84 (v) 519.67 206.02 P
0.84 (el \336les) 525.49 206.02 P
0.11 (into this directory) 207 192.02 P
0.11 (. The `mak) 291.78 192.02 P
0.11 (e dist\336les` command supplies the list of \336le-) 344.21 192.02 P
1.12 (names to the tar command, where each \336lename is pre\336x) 207 178.02 P
1.12 (ed with T) 490.21 178.02 P
1.12 (AR-) 537.34 178.02 P
0.94 (N) 207 164.02 P
0.94 (AME through the DISTCURDIR v) 215.24 164.02 P
0.94 (ariable. The result is a compressed) 387.35 164.02 P
(tar \336le of the Zebra distrib) 207 150.02 T
(ution hierarch) 333.07 150.02 T
(y) 400 150.02 T
(.) 405.22 150.02 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "29" 29
%%Page: "30" 30
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Guide to Imake f) 189 736.18 T
(or Zebra De) 258.84 736.18 T
(veloper) 308.72 736.18 T
(s) 340.6 736.18 T
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
2 10 Q
(30) 54 60.29 T
2 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 671.02 540 674.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 672.52 540 672.52 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
54 672.52 180 672.52 2 L
0 Z
N
0 0 612 792 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(3.5) 163.32 678.02 T
(Common Pitfalls) 189 678.02 T
0 F
-0.02 (This section lists some common pitf) 189 653.02 P
-0.02 (alls which may be encountered when) 362.47 653.02 P
(dealing with Imak) 189 639.02 T
(e\336les.) 276.2 639.02 T
5 11 Q
(\245) 189 619.02 T
0 12 Q
2.19 (The Mak) 203.4 619.02 P
2.19 (e\336les tar) 249.13 619.02 P
2.19 (get) 292.09 619.02 P
6 F
2.19 (does not) 311.95 619.02 P
0 F
2.19 ( re-mak) 354.47 619.02 P
2.19 (e the Mak) 393.53 619.02 P
2.19 (e\336le in the current) 445.78 619.02 P
0.79 (directory) 203.4 605.02 P
0.79 (. If you change the SUBDIRS v) 245.94 605.02 P
0.79 (ariable in the Imak) 402.67 605.02 P
0.79 (e\336le, and) 495.22 605.02 P
-0.07 (then do \324mak) 203.4 591.02 P
-0.07 (e Mak) 266.46 591.02 P
-0.07 (e\336les\325, the wrong subdirectories will be used. Do a) 296.6 591.02 P
(\324mak) 203.4 577.02 T
(e Mak) 227.94 577.02 T
(e\336le\325 \336rst.) 258.14 577.02 T
5 11 Q
(\245) 189 560.02 T
0 12 Q
0.28 (When a Mak) 203.4 560.02 P
0.28 (e\336le is re-made,) 265.81 560.02 P
4 F
0.66 (makedepend) 346.61 560.02 P
0 F
0.28 (\325) 418.61 560.02 P
0.28 (s dependenc) 421.95 560.02 P
0.28 (y tar) 481.02 560.02 P
0.28 (gets are) 502.74 560.02 P
-0.08 (lost and a \324mak) 203.4 546.02 P
-0.08 (e depend\325 is not automatically re-done \050unless the \324mf) 276.7 546.02 P
-0.08 (\325) 536 546.02 P
0.72 (shortcut tar) 203.4 532.02 P
0.72 (get w) 258.23 532.02 P
0.72 (as used\051. If some header \336les change, it is not a bad) 285.15 532.02 P
0.33 (idea to do a \324mak) 203.4 518.02 P
0.33 (e depend\325 at that time. The dependenc) 287.92 518.02 P
0.33 (y lists may be) 472.67 518.02 P
0.72 (out of date, or someone else may ha) 203.4 504.02 P
0.72 (v) 380.8 504.02 P
0.72 (e re-made the Mak) 386.62 504.02 P
0.72 (e\336le without) 478.95 504.02 P
(re-making the dependenc) 203.4 490.02 T
(y lists.) 324.52 490.02 T
5 11 Q
(\245) 189 473.02 T
0 12 Q
-0.17 (Sometimes a Mak) 203.4 473.02 P
-0.17 (e\336le can be corrupted when an incorrect Imak) 289.59 473.02 P
-0.17 (e\336le is) 508.51 473.02 P
0.44 (used to generate a ne) 203.4 459.02 P
0.44 (w Mak) 305.51 459.02 P
0.44 (e\336le. Just cop) 339.49 459.02 P
0.44 (y Mak) 405.92 459.02 P
0.44 (e\336le.bak to Mak) 437.24 459.02 P
0.44 (e\336le,) 516.34 459.02 P
(\336x the Imak) 203.4 445.02 T
(e\336le, and try the \324mak) 261.28 445.02 T
(e mf) 366.8 445.02 T
(\325 or \324mak) 389.12 445.02 T
(e Mak) 433.66 445.02 T
(e\336le\325 ag) 463.86 445.02 T
(ain.) 502.79 445.02 T
5 11 Q
(\245) 189 428.02 T
0 12 Q
1.26 (In trying to understand ho) 203.4 428.02 P
1.26 (w Imak) 332.79 428.02 P
1.26 (e w) 370.25 428.02 P
1.26 (orks, it is helpful to remember) 388.39 428.02 P
0.27 (that Mak) 203.4 414.02 P
0.27 (e\336le v) 246.54 414.02 P
0.27 (ariables are e) 276.17 414.02 P
0.27 (v) 339.71 414.02 P
0.27 (aluated recursi) 345.41 414.02 P
0.27 (v) 415.68 414.02 P
0.27 (ely) 421.5 414.02 P
0.27 (. So gi) 435.39 414.02 P
0.27 (v) 466.63 414.02 P
0.27 (en the follo) 472.45 414.02 P
0.27 (w-) 527.34 414.02 P
(ing assignment from Imak) 203.4 400.02 T
(e.tmpl,) 329.6 400.02 T
4 10 Q
(ALLINCLUDES = $\050INCLUDES\051 $\050EXTRA_INCLUDES\051 $\050TOP_INCLUDES\051 $\050STD_INCLUDES\051) 90 375.35 T
0 12 Q
4.72 (If INCLUDES is set to \324-Imy_include\325 in an Imak) 189 350.02 P
4.72 (e\336le) 466.57 350.02 P
6 F
4.72 (after) 494.95 350.02 P
0 F
4.72 ( the) 517.62 350.02 P
2.5 (ALLINCLUDES assignment abo) 189 336.02 P
2.5 (v) 353.8 336.02 P
2.5 (e, ALLINCLUDES will e) 359.62 336.02 P
2.5 (v) 490.81 336.02 P
2.5 (aluate to) 496.51 336.02 P
1.94 (\324-) 189 322.02 P
1.94 (Imy_include ....) 196.99 322.02 P
1.94 (\325 in the Mak) 273.75 322.02 P
1.94 (e\336le. It is because of this recursion that) 338.45 322.02 P
(assignments lik) 189 308.02 T
(e T) 263.22 308.02 T
(OP=../$\050T) 278.66 308.02 T
(OP\051 are ille) 327.22 308.02 T
(g) 382.36 308.02 T
(al and will produce errors.) 388.3 308.02 T
5 11 Q
(\245) 189 288.02 T
0 12 Q
0.29 (A \336nal pitf) 203.4 288.02 P
0.29 (all, b) 256.53 288.02 P
0.29 (ut by no means common: the -n option does not w) 280.58 288.02 P
0.29 (ork) 524 288.02 P
1.29 (for the) 203.4 274.02 P
6 F
1.29 (tar\336le) 240.64 274.02 P
0 F
1.29 ( tar) 269.3 274.02 P
1.29 (get in the top-le) 286.04 274.02 P
1.29 (v) 365.27 274.02 P
1.29 (el Imak) 371.09 274.02 P
1.29 (e\336le since the rules are all) 408.58 274.02 P
(one script line and the line contains $\050MAKE\051.) 203.4 260.02 T
54 216.02 540 219.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 217.52 540 217.52 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
54 217.52 180 217.52 2 L
0 Z
N
0 0 612 792 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(3.6) 163.32 223.02 T
(Tips and Sug) 189 223.02 T
(g) 264.23 223.02 T
(estions) 271.68 223.02 T
0 F
1.16 (T) 189 198.02 P
1.16 (o use a mak) 195.37 198.02 P
1.16 (e program other than /bin/mak) 255.72 198.02 P
1.16 (e, o) 406.23 198.02 P
1.16 (v) 424.54 198.02 P
1.16 (erride the v) 430.36 198.02 P
1.16 (alue of the) 487.03 198.02 P
2.85 (standard MAKE v) 189 184.02 P
2.85 (ariable. F) 282.39 184.02 P
2.85 (or e) 330.38 184.02 P
2.85 (xample, to use GNU mak) 351.38 184.02 P
2.85 (e found as) 484.98 184.02 P
4 F
(gmake) 189 170.02 T
0 F
( on the path:) 225 170.02 T
4 10 Q
(% gmake MAKE=gmake) 212.4 145.35 T
0 12 Q
1.3 (The MAKE v) 189 120.02 P
1.3 (ariable is passed do) 257.28 120.02 P
1.3 (wn the entire Mak) 354.52 120.02 P
1.3 (e\336le hierarch) 445.94 120.02 P
1.3 (y) 510.15 120.02 P
1.3 (, and) 515.38 120.02 P
(each directory uses that mak) 189 106.02 T
(e program.) 325.51 106.02 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "30" 30
%%Page: "31" 31
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Tips and Sug) 207 736.18 T
(g) 263.42 736.18 T
(estions) 269.01 736.18 T
72 726.98 558 726.98 2 L
0.25 H
N
72 74.02 558 74.02 2 L
2 Z
N
2 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
2 10 Q
-2.78 (31) 546.88 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
-0.23 (A more permanent w) 207 678.02 P
-0.23 (ay to substitute mak) 307.82 678.02 P
-0.23 (e programs is create a link to the) 403.33 678.02 P
0.31 (mak) 207 664.02 P
0.31 (e program of your choice in your home \050or home/bin\051 directory) 227.54 664.02 P
0.31 (, lik) 533.81 664.02 P
0.31 (e) 552.67 664.02 P
(so:) 207 650.02 T
4 10 Q
(% ln -s /usr/local/bin/gmake $HOME/bin/make) 230.4 625.35 T
(% set path=\050$HOME/bin $path\051) 230.4 613.35 T
(% rehash) 230.4 601.35 T
0 12 Q
(The current distrib) 207 576.02 T
(ution has been tested with GNU mak) 296.08 576.02 T
(e. \050It passes.\051) 473.27 576.02 T
0.73 (As the saying in the X distrib) 207 550.02 P
0.73 (ution goes, the easiest w) 351.77 550.02 P
0.73 (ay to mak) 471.54 550.02 P
0.73 (e a ne) 520.2 550.02 P
0.73 (w) 549.34 550.02 P
0.39 (Imak) 207 536.02 P
0.39 (e\336le is to \336rst cop) 231.54 536.02 P
0.39 (y an e) 318.98 536.02 P
0.39 (xisting one that is similar to what you need) 348.23 536.02 P
(and then modify it.) 207 522.02 T
0.18 (T) 207 496.02 P
0.18 (o \336nd out e) 213.37 496.02 P
0.18 (xactly what tar) 268.08 496.02 P
0.18 (gets and v) 339.54 496.02 P
0.18 (ariables are generated in the Mak) 388.27 496.02 P
0.18 (e-) 548.68 496.02 P
0.44 (\336le, \336rst look in the Mak) 207 482.02 P
0.44 (e\336le. F) 328.39 482.02 P
0.44 (or VER) 361.99 482.02 P
0.44 (Y detailed info, try GNU mak) 398.64 482.02 P
0.44 (e\325) 544.67 482.02 P
0.44 (s) 553.33 482.02 P
(-) 207 468.02 T
(p option for printing the Mak) 211 468.02 T
(e\336le database:) 351.2 468.02 T
4 10 Q
(% gmake -p -q | less) 230.4 443.35 T
0 12 Q
0.27 (The output is quite v) 207 418.02 P
0.27 (oluminous, hence the necessity of piping to a pager) 307.18 418.02 P
0.27 (.) 555 418.02 P
(T) 207 404.02 T
(o get just one v) 213.37 404.02 T
(ariable\325) 286.4 404.02 T
(s v) 322.39 404.02 T
(alue, pipe the output to \324e) 335.76 404.02 T
(grep <v) 458.23 404.02 T
(ariable>\325.) 495.02 404.02 T
-0.23 (T) 207 378.02 P
-0.23 (ak) 213.37 378.02 P
-0.23 (e adv) 224.58 378.02 P
-0.23 (antage of setting v) 249.7 378.02 P
-0.23 (ariables on the command line. If you just w) 337.02 378.02 P
-0.23 (ant) 543.34 378.02 P
-0.04 (to mak) 207 364.02 P
-0.04 (e the class, pam, and radar ingest modules, use this one command:) 239.84 364.02 P
4 10 Q
(% make SUBDIRS=\325pam class radar\325 install) 230.4 339.35 T
0 12 Q
(If you w) 207 314.02 T
(ant to test-link a program with OpenW) 247.54 314.02 T
(indo) 433.03 314.02 T
(ws, use) 454.07 314.02 T
4 10 Q
(% make XLIBS=\325-L/usr/openwin/lib -lXaw -lXmu -lXt -lX11\325 <program>) 108 289.35 T
0 12 Q
(T) 207 264.02 T
(o temporarily test gp without the X Shared Memory Extension, use) 213.37 264.02 T
4 10 Q
(% make SHMDEFINES=) 230.4 239.35 T
0 12 Q
0.58 (Look in con\336g/project/Project.tmpl or a Mak) 207 214.02 P
0.58 (e\336le to see all of the) 425.75 214.02 P
4 F
1.38 (make) 529.2 214.02 P
0 F
(v) 207 200.02 T
(ariables which you can o) 212.7 200.02 T
(v) 331.82 200.02 T
(erride from the command line.) 337.64 200.02 T
0.51 (T) 207 174.02 P
0.51 (ak) 213.37 174.02 P
0.51 (e adv) 224.58 174.02 P
0.51 (antage of the automatically generated tar) 250.45 174.02 P
0.51 (gets. T) 448.41 174.02 P
0.51 (o pass all of the) 480.62 174.02 P
0.01 (source \336les through lint, use \324mak) 207 160.02 P
0.01 (e lint\325. T) 370.24 160.02 P
0.01 (o pass one \336le through lint, try) 410.95 160.02 P
0.6 (\324mak) 207 146.02 P
0.6 (e FILE=\336le.c lint1\325. Another automatic tar) 231.54 146.02 P
0.6 (get is \324tags\325. The def) 438.74 146.02 P
0.6 (ault) 540 146.02 P
2.11 (command contained in the T) 207 132.02 P
2.11 (A) 351.63 132.02 P
2.11 (GS v) 359.81 132.02 P
2.11 (ariable is \324tags\325, b) 385.95 132.02 P
2.11 (ut this could be) 478.01 132.02 P
-0.29 (changed to use Emacs tags with \324T) 207 118.02 P
-0.29 (A) 371.46 118.02 P
-0.29 (GS=etags\325 on the command line or in) 379.64 118.02 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "31" 31
%%Page: "32" 32
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Guide to Imake f) 189 736.18 T
(or Zebra De) 258.84 736.18 T
(veloper) 308.72 736.18 T
(s) 340.6 736.18 T
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
2 10 Q
(32) 54 60.29 T
2 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
1.34 (the Imak) 189 678.02 P
1.34 (e\336le. Also, a rule macro e) 232.54 678.02 P
1.34 (xists in Zebra.rules for generating a) 362.68 678.02 P
(\337o) 189 664.02 T
(w \336le from) 201.37 664.02 T
4 F
(cflow) 257.7 664.02 T
0 F
(\0501\051:) 293.7 664.02 T
1 F
(C\337o) 314.03 664.02 T
(wT) 335.24 664.02 T
(ar) 350.81 664.02 T
(get\050pr) 362.02 664.02 T
(og,objs,locallibs\051) 393.12 664.02 T
0 F
(.) 478.46 664.02 T
3.22 (Imak) 189 638.02 P
3.22 (e\325) 213.54 638.02 P
3.22 (s \337e) 222.2 638.02 P
3.22 (xibility is seriously hindered by \336x) 244.91 638.02 P
3.22 (ed include paths, lik) 428.48 638.02 P
3.22 (e) 534.67 638.02 P
0.06 (\322../include/defs.h\323. Do not use such paths in source \336les. Instead, add the) 189 624.02 P
0.15 (location of special include \336les to the Imak) 189 610.02 P
0.15 (e\336le\325) 396.88 610.02 P
0.15 (s local INCLUDES v) 420.88 610.02 P
0.15 (ari-) 523.34 610.02 P
(able.) 189 596.02 T
0 (At the moment, .lf \336les are not listed as dependencies of the program tar-) 189 570.02 P
0.48 (get. So a \324mak) 189 556.02 P
0.48 (e <program>\325 will not automatically mak) 259.64 556.02 P
0.48 (e sure the .lf \336le) 460.43 556.02 P
1.19 (is up to date, though the \324all\325 and \324install\325 tar) 189 542.02 P
1.19 (gets will. If you w) 414.17 542.02 P
1.19 (ant the) 506.48 542.02 P
-0.26 (load \336le to be a program dependenc) 189 528.02 P
-0.26 (y) 359.22 528.02 P
-0.26 (, add the load \336le name to the depen-) 364.44 528.02 P
(dent libraries \050DEPLIBS\051 parameter of the program tar) 189 514.02 T
(get macro.) 452.39 514.02 T
2.02 (As may be seen from man) 189 488.02 P
2.02 (y of the Imak) 324.56 488.02 P
2.02 (e\336les, it is entirely le) 394.82 488.02 P
2.02 (g) 503.05 488.02 P
2.02 (al and) 508.99 488.02 P
0.77 (sometimes v) 189 474.02 P
0.77 (ery useful to include normal, hardcoded Mak) 249.92 474.02 P
0.77 (e\336le tar) 470.69 474.02 P
0.77 (gets in) 507.57 474.02 P
0.25 (an Imak) 189 460.02 P
0.25 (e\336le. F) 228.12 460.02 P
0.25 (or e) 261.53 460.02 P
0.25 (xample, the Optimizer Imak) 279.93 460.02 P
0.25 (e\336le de\336nes the tar) 415.89 460.02 P
0.25 (get \324lf:) 507.42 460.02 P
(Optimzer) 189 446.02 T
(.lf) 233.66 446.02 T
(\325 as a shortcut for b) 244.66 446.02 T
(uilding the Optimizer load \336le.) 337.39 446.02 T
0.05 (If you feel the need for a ne) 189 420.02 P
0.05 (w rule macro, or \336nd yourself using the same) 321.98 420.02 P
-0.24 (rule construct in se) 189 406.02 P
-0.24 (v) 278.96 406.02 P
-0.24 (eral places, just add a macro to Zebra.rules. Send it to) 284.78 406.02 P
(us so that it can be considered for inclusion in the ne) 189 392.02 T
(xt release.) 441.12 392.02 T
1.67 (Do not use tests for machine-speci\336c cpp symbols. Use a cpp symbol) 189 366.02 P
0.19 (which indicates e) 189 352.02 P
0.19 (xactly whether the condition you are testing is true. F) 272.51 352.02 P
0.19 (or) 530 352.02 P
1.08 (e) 189 338.02 P
1.08 (xample, use the) 194.15 338.02 P
4 F
2.58 (HasWriteV) 275.36 338.02 P
0 F
1.08 ( symbol instead of the more general and) 340.17 338.02 P
0.72 (less accurate symbol) 189 324.02 P
4 F
1.72 (SunArchitecture) 293.46 324.02 P
0 F
0.72 (. T) 401.46 324.02 P
0.72 (o add a ne) 414.55 324.02 P
0.72 (w symbol, gi) 465.38 324.02 P
0.72 (v) 528.85 324.02 P
0.72 (e) 534.67 324.02 P
0.88 (it a def) 189 310.02 P
0.88 (ault in Zebra.tmpl and use the machine-speci\336c symbols de\336ned) 223.97 310.02 P
(in Imak) 189 296.02 T
(e.tmpl to determine the correct v) 225.88 296.02 T
(alue for the symbol.) 382.21 296.02 T
-0.09 (Be sure to k) 189 270.02 P
-0.09 (eep the Imak) 246.29 270.02 P
-0.09 (e\336les up to date. If you add a source \336le, add the) 307.98 270.02 P
1.85 (\336lename to the SRCS v) 189 256.02 P
1.85 (ariable and its object to the appropriate OBJS) 308.77 256.02 P
1.09 (v) 189 242.02 P
1.09 (ariable. If a \336le is to be distrib) 194.7 242.02 P
1.09 (uted, add it to the DISTFILES v) 346.76 242.02 P
1.09 (ariable) 507.35 242.02 P
0.16 (also. If you add a subdirectory some) 189 228.02 P
0.16 (where which you wish b) 363.96 228.02 P
0.16 (uilt with the) 481.67 228.02 P
3.16 (rest of the distrib) 189 214.02 P
3.16 (ution, add the subdirectory to the parent directory) 279.91 214.02 P
0.36 (Imak) 189 200.02 P
0.36 (e\336le\325) 213.54 200.02 P
0.36 (s SUBDIRS v) 237.54 200.02 P
0.36 (ariable. If the directory should be distrib) 305.31 200.02 P
0.36 (uted b) 500.88 200.02 P
0.36 (ut) 530.66 200.02 P
1.54 (not b) 189 186.02 P
1.54 (uilt, add it to the DISTSUBDIRS v) 214.63 186.02 P
1.54 (ariable in the parent directory) 391.9 186.02 P
(Imak) 189 172.02 T
(e\336le.) 213.54 172.02 T
0.1 (One of the nice things about using imak) 189 146.02 P
0.1 (e for de) 381.22 146.02 P
0.1 (v) 417.77 146.02 P
0.1 (elopment is its ability to) 423.59 146.02 P
1.26 (b) 189 132.02 P
1.26 (uild Mak) 194.76 132.02 P
1.26 (e\336le\325) 239.57 132.02 P
1.26 (s for directories outside of the standard source tree. F) 263.57 132.02 P
1.26 (or) 530 132.02 P
(e) 189 118.02 T
(xample, in a source directory with absolute path) 194.15 118.02 T
6 F
(dir) 427.78 118.02 T
0 F
(, use) 441.3 118.02 T
4 10 Q
(% imake -I/zebra/config/project -I/zebra/config/imake -DTOPDIR=/zeb \134) 90 93.35 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "32" 32
%%Page: "33" 33
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Tips and Sug) 207 736.18 T
(g) 263.42 736.18 T
(estions) 269.01 736.18 T
72 726.98 558 726.98 2 L
0.25 H
N
72 74.02 558 74.02 2 L
2 Z
N
2 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
2 10 Q
-2.78 (33) 546.88 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 F
(-) 108 679.35 T
(DCURDIR=) 114 679.35 T
7 F
(dir) 162 679.35 T
0 12 Q
2.39 (This sets up a Mak) 207 654.02 P
2.39 (e\336le to use absolute path names for its T) 307.09 654.02 P
2.39 (OP and) 519.95 654.02 P
0.75 (CURRENT_DIR v) 207 640.02 P
0.75 (ariables, and since include and library paths are rela-) 299.11 640.02 P
-0.19 (ti) 207 626.02 P
-0.19 (v) 213.37 626.02 P
-0.19 (e to the T) 219.19 626.02 P
-0.19 (OP v) 264.06 626.02 P
-0.19 (ariable in the Imak) 287.91 626.02 P
-0.19 (e\336le, the location of the current direc-) 377.53 626.02 P
2.93 (tory does not hinder Imak) 207 612.02 P
2.93 (e\325) 342.58 612.02 P
2.93 (s ability to specify and \336nd \336les in the) 351.24 612.02 P
(Mak) 207 598.02 T
(e\336le.) 228.88 598.02 T
0.41 (Y) 207 572.02 P
0.41 (ou can also use the \324zmkmf) 214.34 572.02 P
0.41 (\325 script installed in the bin/ directory of the) 348.71 572.02 P
1.18 (Zebra tree. This script tak) 207 558.02 P
1.18 (es tw) 335.24 558.02 P
1.18 (o ar) 361.3 558.02 P
1.18 (guments, a path to the top directory) 380.59 558.02 P
0.38 (and a path from the top to the current directory) 207 544.02 P
0.38 (. If de) 434.6 544.02 P
0.38 (v) 463.39 544.02 P
0.38 (eloping in a direc-) 469.21 544.02 P
0.56 (tory outside the standard source tree, use absolute paths, as in the pre) 207 530.02 P
0.56 (vi-) 544.67 530.02 P
(ous e) 207 516.02 T
(xample:) 231.82 516.02 T
4 10 Q
(% zmkmf /zebra <absolute-path>) 230.4 491.35 T
0 12 Q
0.28 (Otherwise, you can use relati) 207 466.02 P
0.28 (v) 347.46 466.02 P
0.28 (e paths to mak) 353.28 466.02 P
0.28 (e Mak) 423.67 466.02 P
0.28 (e\336les from within the) 454.16 466.02 P
(source tree:) 207 452.02 T
4 10 Q
(% zmkmf ./../.. ./ingest/ingestor_dir) 230.4 427.35 T
0 12 Q
2.57 (At the moment, Imak) 207 402.02 P
2.57 (e\336les which ha) 317.25 402.02 P
2.57 (v) 394.14 402.02 P
2.57 (e) 399.95 402.02 P
6 F
2.57 (includes) 410.85 402.02 P
0 F
2.57 ( tar) 450.85 402.02 P
2.57 (gets for installing) 468.86 402.02 P
-0.2 (header \336les into the top-le) 207 388.02 P
-0.2 (v) 331.22 388.02 P
-0.2 (el common include directory must use relati) 337.04 388.02 P
-0.2 (v) 546.85 388.02 P
-0.2 (e) 552.67 388.02 P
0.96 (paths for the top and current directory) 207 374.02 P
0.96 (. Otherwise the) 393.91 374.02 P
6 F
0.96 (includes) 472.76 374.02 P
0 F
0.96 ( rule will) 512.76 374.02 P
(not w) 207 360.02 T
(ork.) 233.88 360.02 T
0.52 (Dif) 207 334.02 P
0.52 (ferent Zebra con\336gurations can be tested in isolation from the rest of) 222.7 334.02 P
1.88 (the de) 207 320.02 P
1.88 (v) 237.57 320.02 P
1.88 (elopment hierarch) 243.39 320.02 P
1.88 (y) 332.18 320.02 P
1.88 (, within either a de) 337.4 320.02 P
1.88 (v) 434.25 320.02 P
1.88 (elopment directory or a) 440.07 320.02 P
0.74 (shado) 207 306.02 P
0.74 (w directory) 234.7 306.02 P
0.74 (. [A shado) 289.64 306.02 P
0.74 (w directory consists of symbolic links to the) 340.48 306.02 P
0.1 (source \336les; see the /zebra/src/gp/noshm e) 207 292.02 P
0.1 (xample in Section) 409.61 292.02 P
0.1 (3.4.4.] Put a) 499.47 292.02 P
0.52 (cop) 207 278.02 P
0.52 (y of con\336g.h in the directory) 224.21 278.02 P
0.52 (, and set the INCLUDES v) 363.35 278.02 P
0.52 (ariable in the) 494.31 278.02 P
-0.13 (Imak) 207 264.02 P
-0.13 (e\336le to \324-I.) 231.54 264.02 P
-0.13 (\325. The local cop) 281.42 264.02 P
-0.13 (y of con\336g.h will be used by the Imak) 356.21 264.02 P
-0.13 (e\336le) 537.34 264.02 P
2.39 (and all of the source \336les rather than the global distrib) 207 250.02 P
2.39 (ution cop) 490 250.02 P
2.39 (y in) 537.27 250.02 P
1.44 (zebra/con\336g. The local con\336g.h can be edited to the con\336guration you) 207 236.02 P
1.6 (wish to test re) 207 222.02 P
1.6 (g) 278.62 222.02 P
1.6 (ardless of the con\336guration de\336ned in the global \324con-) 284.56 222.02 P
1.08 (\336g.h\325. F) 207 208.02 P
1.08 (or the /zebra/gp/noshm e) 246.24 208.02 P
1.08 (xample gi) 368.27 208.02 P
1.08 (v) 416.72 208.02 P
1.08 (en earlier) 422.54 208.02 P
1.08 (, rather than using) 468.11 208.02 P
3.01 (SHMDEFINES= on the mak) 207 194.02 P
3.01 (e command line, the \324XSharedMemory\325) 354.34 194.02 P
1.96 (symbol in the local cop) 207 180.02 P
1.96 (y of con\336g.h could be de\336ned to NO without) 326.7 180.02 P
0.16 (af) 207 166.02 P
0.16 (fecting the rest of the distrib) 216.02 166.02 P
0.16 (ution. The INCLUDES v) 352.21 166.02 P
0.16 (ariable could also) 473.04 166.02 P
(be set on the command line, as in) 207 152.02 T
4 10 Q
(% make INCLUDES=-I.) 230.4 127.35 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "33" 33
%%Page: "34" 34
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Guide to Imake f) 189 736.18 T
(or Zebra De) 258.84 736.18 T
(veloper) 308.72 736.18 T
(s) 340.6 736.18 T
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
2 10 Q
(34) 54 60.29 T
2 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.35 (so that the Imak) 189 678.02 P
0.35 (e\336le does not ha) 266.92 678.02 P
0.35 (v) 346.05 678.02 P
0.35 (e to be changed. Ho) 351.87 678.02 P
0.35 (we) 448.61 678.02 P
0.35 (v) 462.3 678.02 P
0.35 (er) 468.12 678.02 P
0.35 (, this method) 476.96 678.02 P
1.02 (is error) 189 664.02 P
1.02 (-prone since you must remember al) 224.1 664.02 P
1.02 (w) 398.72 664.02 P
1.02 (ays to add the INCLUDES) 407.26 664.02 P
(ar) 189 650.02 T
(gument.) 198.11 650.02 T
0.91 (Those porting Zebra to ne) 189 624.02 P
0.91 (w systems may wish to b) 316.98 624.02 P
0.91 (uild the Zebra mod-) 441.62 624.02 P
0.09 (ules one at a time rather than try to compile the whole distrib) 189 610.02 P
0.09 (ution in one) 482.48 610.02 P
0.76 (mak) 189 596.02 P
0.76 (e. This can be done by splitting up the top-le) 209.54 596.02 P
0.76 (v) 430.05 596.02 P
0.76 (el tar) 435.87 596.02 P
0.76 (gets used by the) 460.73 596.02 P
2.16 (usual installation tar) 189 582.02 P
2.16 (gets: \324mak) 290.44 582.02 P
2.16 (e W) 342.81 582.02 P
2.16 (orld\325 and \324mak) 363.67 582.02 P
2.16 (e Ev) 439.19 582.02 P
2.16 (erything\325. First,) 462.84 582.02 P
2.37 (follo) 189 568.02 P
2.37 (w all of the normal installation steps, such as editing \324con\336g.h\325.) 211.37 568.02 P
0.63 (Then, rather than performing a \324mak) 189 554.02 P
0.63 (e W) 367.33 554.02 P
0.63 (orld\325, b) 386.66 554.02 P
0.63 (uild the top-le) 422.38 554.02 P
0.63 (v) 490.68 554.02 P
0.63 (el Mak) 496.5 554.02 P
0.63 (e-) 530.68 554.02 P
(\336le out of the Mak) 189 540.02 T
(e\336le.ini \336le with these commands:) 278.21 540.02 T
4 10 Q
(% cd $TOPDIR) 212.4 515.35 T
(% rm -f Makefile) 212.4 503.35 T
(% make -f Makefile.ini Makefile) 212.4 491.35 T
0 12 Q
(Then mak) 189 466.02 T
(e the rest of the Mak) 237.2 466.02 T
(e\336les in the distrib) 336.06 466.02 T
(ution:) 424.82 466.02 T
4 10 Q
(% cd $TOPDIR) 212.4 441.35 T
(% make Makefiles) 212.4 429.35 T
0 12 Q
0.32 (At this point all of the directories in the distrib) 189 404.02 P
0.32 (ution ha) 414.61 404.02 P
0.32 (v) 453.69 404.02 P
0.32 (e Mak) 459.51 404.02 P
0.32 (e\336les con-) 490.03 404.02 P
-0.01 (\336gured according to con\336g.h and generated from each directory\325) 189 390.02 P
-0.01 (s Imak) 498.48 390.02 P
-0.01 (e-) 530.68 390.02 P
0.53 (\336le. The \324mak) 189 376.02 P
0.53 (e Mak) 257.6 376.02 P
0.53 (e\336le\325 and \324mak) 288.34 376.02 P
0.53 (e Mak) 361.93 376.02 P
0.53 (e\336les\325 are e) 392.67 376.02 P
0.53 (xactly the \336rst tw) 448.86 376.02 P
0.53 (o) 534 376.02 P
-0.18 (steps in the \324mak) 189 362.02 P
-0.18 (e W) 270 362.02 P
-0.18 (orld\325 installation tar) 288.52 362.02 P
-0.18 (get. Ne) 383.27 362.02 P
-0.18 (xt, install all of the global) 417.56 362.02 P
(include \336les by doing) 189 348.02 T
4 10 Q
(% cd $TOPDIR) 212.4 323.35 T
(% make includes) 212.4 311.35 T
0 12 Q
1.24 (T) 189 286.02 P
1.24 (o add the header \336le dependences to all of the Mak) 195.37 286.02 P
1.24 (e\336les, e) 452.24 286.02 P
1.24 (x) 489.96 286.02 P
1.24 (ecute the) 495.78 286.02 P
6 F
(depend) 189 272.02 T
0 F
( tar) 223.66 272.02 T
(get.) 239.1 272.02 T
4 10 Q
(% cd $TOPDIR) 212.4 247.35 T
(% make depend) 212.4 235.35 T
0 12 Q
2.36 (This tar) 189 210.02 P
2.36 (get tra) 228.14 210.02 P
2.36 (v) 260.58 210.02 P
2.36 (erses the distrib) 266.4 210.02 P
2.36 (ution hierarch) 346.21 210.02 P
2.36 (y generating dependenc) 415.49 210.02 P
2.36 (y) 534 210.02 P
0.75 (rules for all of the Mak) 189 196.02 P
0.75 (e\336les. No) 303.62 196.02 P
0.75 (w each directory can be b) 350.06 196.02 P
0.75 (uilt indi) 476.54 196.02 P
0.75 (vidu-) 514.67 196.02 P
1.04 (ally by performing a \324mak) 189 182.02 P
1.04 (e all\325 in that directory) 319.04 182.02 P
1.04 (. F) 426.42 182.02 P
1.04 (or most e) 439.95 182.02 P
1.04 (x) 486.53 182.02 P
1.04 (ecutables,) 492.35 182.02 P
1.62 (ho) 189 168.02 P
1.62 (we) 200.7 168.02 P
1.62 (v) 214.39 168.02 P
1.62 (er) 220.21 168.02 P
1.62 (, it will be necessary to \336rst do a \324mak) 229.06 168.02 P
1.62 (e install\325 in the library) 426.85 168.02 P
(directories, zebra/src/lib and zebra/src/ds.) 189 154.02 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "34" 34
%%Page: "35" 35
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Cutting Edg) 207 736.18 T
(e) 258.08 736.18 T
72 726.98 558 726.98 2 L
0.25 H
N
72 74.02 558 74.02 2 L
2 Z
N
2 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
2 10 Q
-2.78 (35) 546.88 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 671.02 558 674.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 672.52 558 672.52 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 672.52 198 672.52 2 L
0 Z
N
0 0 612 792 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(3.7) 181.32 678.02 T
(Cutting Edg) 207 678.02 T
(e) 275.11 678.02 T
0 F
1.38 (There ha) 207 653.02 P
1.38 (v) 250.45 653.02 P
1.38 (e been some three v) 256.27 653.02 P
1.38 (ery recent additions to Zebra\325) 356.92 653.02 P
1.38 (s Imak) 503.75 653.02 P
1.38 (e\336le) 537.34 653.02 P
(system, all appearing for the \336rst time in v) 207 639.02 T
(ersion 4.2.) 410.47 639.02 T
2.04 (The \336rst is autocon\336guration, where the con\336g.h \336le is bypassed and) 207 613.02 P
1.72 (con\336guration symbols are chosen automatically based on the architec-) 207 599.02 P
2.81 (ture. Common con\336guration choices, such as OpenW) 207 585.02 P
2.81 (indo) 480.02 585.02 P
2.81 (ws or MIT) 501.05 585.02 P
-0.09 (X11, nati) 207 571.02 P
-0.09 (v) 251.27 571.02 P
-0.09 (e C compiler or GNU, can be propag) 257.09 571.02 P
-0.09 (ated to the whole b) 433.7 571.02 P
-0.09 (uild on) 524.42 571.02 P
1.09 (the command line in an A) 207 557.02 P
1.09 (UT) 336.11 557.02 P
1.09 (O_DEFINES v) 351.89 557.02 P
1.09 (ariable and in the AutoDe-) 425.67 557.02 P
(\336nes cpp symbol.) 207 543.02 T
1.2 (The second addition is a rule which automatically adds deri) 207 517.02 P
1.2 (v) 503.11 517.02 P
1.2 (ed \336les to) 508.93 517.02 P
1.53 (the .cvsignore \336le of the current directory) 207 503.02 P
1.53 (. If the symbols HasCvs and) 415.02 503.02 P
5.25 (W) 207 489.02 P
5.25 (antCvsIgnore are both true, the) 217.37 489.02 P
6 F
5.25 (CvsIgnor) 395.59 489.02 P
5.25 (eF) 439.81 489.02 P
5.25 (ile) 451.93 489.02 P
0 F
5.25 ( rule included in) 463.93 489.02 P
-0.19 (Zebra.rules automatically adds the gi) 207 475.02 P
-0.19 (v) 383.56 475.02 P
-0.19 (en \336le to .cvsignore if the \336le name) 389.38 475.02 P
7.39 (w) 207 461.02 P
7.39 (as not present there already) 215.54 461.02 P
7.39 (. F) 375.61 461.02 P
7.39 (or e) 395.49 461.02 P
7.39 (xample, the tar) 421.02 461.02 P
7.39 (get of a) 507.23 461.02 P
6 F
0.54 (CompletePr) 207 447.02 P
0.54 (o) 264.46 447.02 P
0.54 (gr) 270.34 447.02 P
0.54 (amT) 280.82 447.02 P
0.54 (ar) 301.06 447.02 P
0.54 (g) 311.28 447.02 P
0.54 (et) 317.16 447.02 P
0 F
0.54 ( rule will be added to .cvsignore when that pro-) 325.82 447.02 P
0.12 (gram is b) 207 433.02 P
0.12 (uilt, telling CVS to ignore the appearance of that \336le. The mod-) 251.67 433.02 P
0.63 (i\336ed CVS ignore \336les can either be updated and committed, or the) 207 419.02 P
0.63 (y can) 531.71 419.02 P
(be ignored and k) 207 405.02 T
(ept up-to-date e) 287.2 405.02 T
(xclusi) 362.33 405.02 T
(v) 390.7 405.02 T
(ely with the mak) 396.52 405.02 T
(e system.) 476.72 405.02 T
1.73 (Lastly) 207 379.02 P
1.73 (, the project con\336guration is no) 236.22 379.02 P
1.73 (w capable of b) 394.58 379.02 P
1.73 (uilding the RDSS) 469.85 379.02 P
0.63 (libraries required by Zebra, UI and Util, from within the Zebra distrib) 207 365.02 P
0.63 (u-) 548 365.02 P
2.34 (tion tree. The ui and util directories from the RDSS libraries can be) 207 351.02 P
2.96 (grafted beneath the top directory of the Zebra distrib) 207 337.02 P
2.96 (ution. De\336ning) 482.37 337.02 P
6 F
1.94 (BuildRDSS) 207 323.02 P
0 F
1.94 ( to true will b) 261 323.02 P
1.94 (uild and install the ui and util libraries from) 333.18 323.02 P
0.27 (within the distrib) 207 309.02 P
0.27 (ution tree and use those libraries and include \336les when) 289.3 309.02 P
0.47 (b) 207 295.02 P
0.47 (uilding the rest of Zebra. This allo) 212.76 295.02 P
0.47 (ws for more compact Zebra distrib) 379.6 295.02 P
0.47 (u-) 548 295.02 P
2.41 (tions where it is not necessary to install RDSS separately if all it is) 207 281.02 P
(needed for is Zebra.) 207 267.02 T
72 223.02 558 226.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 224.52 558 224.52 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 224.52 198 224.52 2 L
0 Z
N
0 0 612 792 C
2 12 Q
0 X
0 0 0 1 0 0 0 K
(3.8) 181.32 230.02 T
(Future De) 207 230.02 T
(velopments) 262.82 230.02 T
0 F
0.55 (There is lots of potential for the current mak) 207 205.02 P
0.55 (e system. F) 423.93 205.02 P
0.55 (or e) 479.19 205.02 P
0.55 (xample, it is) 497.89 205.02 P
-0.21 (v) 207 191.02 P
-0.21 (ery possible to use Imak) 212.82 191.02 P
-0.21 (e to b) 328.5 191.02 P
-0.21 (uild all of the RDSS packages while main-) 354.5 191.02 P
0.13 (taining and distrib) 207 177.02 P
0.13 (uting each package separately as well. It is e) 294.36 177.02 P
0.13 (xactly this) 508.2 177.02 P
0.04 (capability which allo) 207 163.02 P
0.04 (ws the RDSS UI and Util libraries to be b) 307.44 163.02 P
0.04 (uilt as part) 507.25 163.02 P
-0.24 (of a Zebra distrib) 207 149.02 P
-0.24 (ution while still being distrib) 289.01 149.02 P
-0.24 (uted \050without modi\336cation\051) 426.48 149.02 P
(with the RDSS Libraries package.) 207 135.02 T
0.86 (The current distrib) 207 109.02 P
0.86 (ution automatically compiles and uses the distrib) 297.79 109.02 P
0.86 (uted) 537.34 109.02 P
0.81 (imak) 207 95.02 P
0.81 (e. It w) 230.88 95.02 P
0.81 (ould be nice to easily allo) 262.71 95.02 P
0.81 (w the use of a pre) 389.45 95.02 P
0.81 (viously installed) 478.18 95.02 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "35" 35
%%Page: "36" 36
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
2 9 Q
(Guide to Imake f) 189 736.18 T
(or Zebra De) 258.84 736.18 T
(veloper) 308.72 736.18 T
(s) 340.6 736.18 T
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
2 10 Q
(36) 54 60.29 T
2 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
0.8 (imak) 189 678.02 P
0.8 (e. This does not mean much of an impro) 212.88 678.02 P
0.8 (v) 412.74 678.02 P
0.8 (ement in b) 418.56 678.02 P
0.8 (uild time; it is) 470.58 678.02 P
(simply a desirable capability when porting to other systems.) 189 664.02 T
1.65 (T) 189 638.02 P
1.65 (o mak) 195.37 638.02 P
1.65 (e the distrib) 226.56 638.02 P
1.65 (ution e) 286.28 638.02 P
1.65 (v) 320.63 638.02 P
1.65 (en f) 326.45 638.02 P
1.65 (ancier) 346.3 638.02 P
1.65 (, it should be possible to use the) 375.14 638.02 P
0.49 (GNU Autoconf \050or perhaps Larry W) 189 624.02 P
0.49 (all\325) 366.08 624.02 P
0.49 (s metacon\336g\051 package to con\336g-) 381.42 624.02 P
2.2 (ure some of the v) 189 610.02 P
2.2 (ariables in con\336g.h, either automatically or interac-) 280.83 610.02 P
3.63 (ti) 189 596.02 P
3.63 (v) 195.37 596.02 P
3.63 (ely) 201.19 596.02 P
3.63 (. The ultimate goal w) 215.08 596.02 P
3.63 (ould be a distrib) 331.8 596.02 P
3.63 (ution which needed no) 420.12 596.02 P
(editing\321just a fe) 189 582.02 T
(w questions to the installer and a) 272.03 582.02 T
(w) 429.17 582.02 T
(ay it goes.) 437.71 582.02 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "36" 36
%%Page: "37" 37
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
0 X
0 0 0 1 0 0 0 K
(A) 72 681.98 T
0 F
(all, Mak) 72 672.98 T
(e\336le tar) 101.91 672.98 T
(get) 128.99 672.98 T
(6) 144.49 672.98 T
2 F
(C) 72 653.98 T
0 F
(CFG_, compile-time parameters) 72 644.98 T
(12) 192.74 644.98 T
(clean, Mak) 72 634.98 T
(e\336le tar) 111.9 634.98 T
(get) 138.98 634.98 T
(7) 154.48 634.98 T
(customizing con\336gurations) 72 624.98 T
(13) 174.25 624.98 T
(customizing distrib) 72 614.98 T
(utions) 141.07 614.98 T
(11) 167.58 614.98 T
2 F
(D) 72 595.98 T
0 F
(depend, Mak) 72 586.98 T
(e\336le tar) 118.9 586.98 T
(get) 145.98 586.98 T
(7) 161.48 586.98 T
(distclean, Mak) 72 576.98 T
(e\336le tar) 124.9 576.98 T
(get) 151.98 576.98 T
(9) 167.48 576.98 T
(dist\336les, Mak) 72 566.98 T
(e\336le tar) 120.92 566.98 T
(get) 148 566.98 T
(8) 163.49 566.98 T
(distmak) 72 556.98 T
(e\336les, Mak) 100.41 556.98 T
(e\336le tar) 140.32 556.98 T
(get) 167.4 556.98 T
(8) 182.9 556.98 T
(Distrib) 72 546.98 T
(uteDataManager) 96.82 546.98 T
(, con\336guration symbol) 156.44 546.98 T
(12) 242.19 546.98 T
(Distrib) 72 536.98 T
(uteDataUtil, con\336guration symbol) 96.82 536.98 T
(12) 224.57 536.98 T
(Distrib) 72 526.98 T
(uteIngest, con\336guration symbol) 96.82 526.98 T
(12) 215.57 526.98 T
(Distrib) 72 516.98 T
(uteOptimizer) 96.82 516.98 T
(, con\336guration symbol) 143.96 516.98 T
(12) 229.71 516.98 T
(Distrib) 72 506.98 T
(uteRealtimeDataStoreT) 96.82 506.98 T
(ools, con\336guration symbol) 181.09 506.98 T
(12) 281.84 506.98 T
2 F
(E) 72 487.98 T
0 F
(Ev) 72 478.98 T
(erything, top-le) 81.86 478.98 T
(v) 137.13 478.98 T
(el mak) 141.5 478.98 T
(e tar) 165.65 478.98 T
(get) 181.23 478.98 T
(8) 196.73 478.98 T
2 F
(I) 72 459.98 T
0 F
(includes, Mak) 72 450.98 T
(e\336le tar) 122.9 450.98 T
(get) 149.99 450.98 T
(7) 165.48 450.98 T
(install, Mak) 72 440.98 T
(e\336le tar) 114.91 440.98 T
(get) 141.99 440.98 T
(7) 157.49 440.98 T
2 F
(M) 72 421.98 T
0 F
(mak) 72 412.98 T
(edepend) 87.41 412.98 T
(7) 121.9 412.98 T
(Mak) 72 402.98 T
(e\336le, Mak) 88.41 402.98 T
(e\336le tar) 124.81 402.98 T
(get) 151.89 402.98 T
(7) 167.39 402.98 T
(Mak) 72 392.98 T
(e\336les, Mak) 88.41 392.98 T
(e\336le tar) 128.31 392.98 T
(get) 155.39 392.98 T
(7) 170.89 392.98 T
2 F
(T) 72 373.98 T
0 F
(tar\336le, top-le) 72 364.98 T
(v) 118.27 364.98 T
(el mak) 122.63 364.98 T
(e tar) 146.79 364.98 T
(get) 162.37 364.98 T
(9) 177.87 364.98 T
2 F
(W) 72 345.98 T
0 F
(W) 72 336.98 T
(orld, top-le) 79.78 336.98 T
(v) 119.55 336.98 T
(el mak) 123.91 336.98 T
(e tar) 148.07 336.98 T
(get) 163.65 336.98 T
(8) 179.15 336.98 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "37" 37
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 37
%%DocumentFonts: Times-Roman
%%+ Times-Bold
%%+ Helvetica-Bold
%%+ Helvetica
%%+ Courier
%%+ Courier-Bold
%%+ Times-Italic
%%+ Courier-Oblique
%%EOF
