%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 5.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 5.0, for use with Frame 5.0 products
% This ps_prolog file is Copyright (c) 1986-1995 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameMaker/SGML and FrameViewer as long as this 
% copyright notice is preserved.
%
% FrameMaker users specify the proper paper size for each print job in the
% "Print" dialog's "Printer Paper Size" "Width" and "Height~ fields.  If the
% printer that the PS file is sent to does not support the requested paper
% size, or if there is no paper tray of the proper size currently installed, 
% then the job will not be printed.  The following flag, if set to true, will
% cause the job to print on the default paper in such cases.
/FMAllowPaperSizeMismatch            false def
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to true, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% The following is a set of predefined optimal frequencies and angles for various
% common dpi settings. This is taken from "Advances in Color Separation Using
% PostScript Software Technology," from Adobe Systems (3/13/89 P.N. LPS 0043)
% and corrolated with information which is in various PPD (4.0) files.
%
% The "dpiranges" figure is the minimum dots per inch device resolution which
% can support this setting. The "low" and "high" values are controlled by the
% setting of the FMUseHighFrequencyScreens flag above. The "TDot" flags control
% the use of the "Yellow Triple Dot" feature whereby the frequency id divided by
% three, but the dot function is "trippled" giving a block of 3x3 dots per cell.
%
% PatFreq is a compromise pattern frequency for ps Level 2 printers which is close
% to the ideal WYSIWYG pattern frequency of 9 repetitions/inch but does not beat
% (too badly) against the screen frequencies of any separations for that DPI.
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (5.0) def 
/fMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	fMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto show
	72 220 moveto show
	FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!  Check installation;)
		(also check ~/fminit and ./fminit for old versions) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(Adobe's PostScript Language Reference Manual, 2nd Edition, section H.2.4)
	(says your EPS file is not valid, as it calls X              )
	dup dup (X) search pop exch pop exch pop length 
	5 -1 roll 
	putinterval 
	FMFAILURE
	} def
/fmConcatProcs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin [
	/ALDsave
	/FMdicttop
	/FMoptop
	/FMpointsize
	/FMsaveobject
	/b
	/bitmapsave
	/blut
	/bpside
	/bs
	/bstring
	/bwidth
	/c
	/cf
	/cs
	/cynu
	/depth
	/edown
	/fh
	/fillvals
	/fw
	/fx
	/fy
	/g
	/gfile
	/gindex
	/grnt
	/gryt
	/gstring
	/height
	/hh
	/i
	/im
	/indx
	/is
	/k
	/kk
	/landscape
	/lb
	/len
	/llx
	/lly
	/m
	/magu
	/manualfeed
	/n
	/offbits
	/onbits
	/organgle
	/orgbangle
	/orgbfreq
	/orgbproc
	/orgbxfer
	/orgfreq
	/orggangle
	/orggfreq
	/orggproc
	/orggxfer
	/orgmatrix
	/orgproc
	/orgrangle
	/orgrfreq
	/orgrproc
	/orgrxfer
	/orgxfer
	/pagesave
	/paperheight
	/papersizedict
	/paperwidth
	/pos
	/pwid
	/r
	/rad
	/redt
	/sl
	/str
	/tran
	/u
	/urx
	/ury
	/val
	/width
	/width
	/ws
	/ww
	/x
	/x1
	/x2
	/xindex
	/xpoint
	/xscale
	/xx
	/y
	/y1
	/y2
	/yelu
	/yindex
	/ypoint
	/yscale
	/yy
] { 0 def } forall
/FmBD {bind def} bind def
systemdict /pdfmark known {
	/fMAcrobat true def
	
	/FmPD /pdfmark load def
	
	
	/FmPT /show load def
	
	
	currentdistillerparams /CoreDistVersion get 2000 ge {
	
		
		/FmPD2 /pdfmark load def
		
		
		
		
		
		/FmPA { mark exch /Dest exch 5 3 roll 
				/View [ /XYZ null 6 -2 roll FmDC exch pop null] /DEST FmPD 
		}FmBD
	} {
		
		/FmPD2 /cleartomark load def
		/FmPA {pop pop pop}FmBD
	} ifelse
} {
	
	/fMAcrobat false def
	/FmPD /cleartomark load def
	/FmPD2 /cleartomark load def
	/FmPT /pop load def
	/FmPA {pop pop pop}FmBD
} ifelse
/FmDC {
	transform fMDefaultMatrix itransform cvi exch cvi exch
}FmBD
/FmBx {
	dup 3 index lt {3 1 roll exch} if 
	1 index 4 index lt {4 -1 roll 3 1 roll exch 4 1 roll} if
}FmBD
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/fMNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		RealSetrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
fMLevel1 { 
	
	
	
	/patScreenDict 7 dict dup begin
		<0f1e3c78f0e1c387> [ 45  { pop } {exch pop} 		.5   2 sqrt] FmBD
		<0f87c3e1f0783c1e> [ 135 { pop } {exch pop}			.5   2 sqrt] FmBD
		<cccccccccccccccc> [ 0   { pop } dup				.5   2	   ] FmBD
		<ffff0000ffff0000> [ 90  { pop } dup				.5   2	   ] FmBD
		<8142241818244281> [ 45  { 2 copy lt {exch} if pop}	dup .75  2 sqrt] FmBD
		<03060c183060c081> [ 45  { pop } {exch pop}			.875 2 sqrt] FmBD
		<8040201008040201> [ 135 { pop } {exch pop}			.875 2 sqrt] FmBD
	end def
} { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} ifelse
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				fMAcrobat not FMPColor graymode and and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode fMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not fMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/fMDefaultMatrix matrix defaultmatrix def
/fMatrix2 matrix def
/dpi    72 0 fMDefaultMatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 fMDefaultMatrix dtransform exch atan def
	sangle fMatrix2 rotate 
	fMDefaultMatrix fMatrix2 concatmatrix 
	dup 0 get /sflipx exch def
	    3 get /sflipy exch def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	fMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /fMNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	fMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{papersizefailure} if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{2 dict
		 dup /PageSize [paperwidth paperheight] put
		 manualfeed {dup /ManualFeed manualfeed put} if
		 {setpagedevice} stopped {papersizefailure} if
		}
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			fMNegative {
				1 1 4 { 
					pop { 1 exch sub } fmConcatProcs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		fMNegative {
			{ 1 exch sub } fmConcatProcs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/papersizefailure {
	FMAllowPaperSizeMismatch not
		{
(The requested paper size is not available in any currently-installed tray)
(Edit the PS file to "FMAllowPaperSizeMismatch true" to use default tray)
		 FMFAILURE } if
	} def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYK } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/BEGINBITMAPCMYK { 
		BITMAPCMYKGRAY } def
	/BEGINBITMAPCMYKc { 
		BITMAPCMYKGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
fMLevel1 {
	/fmGetFlip {
		fMatrix2 exch get mul 0 lt { -1 } { 1 } ifelse
	} FmBD
} if
/setPatternMode {
	fMLevel1 {
		2 index patScreenDict exch known {
			pop pop
			patScreenDict exch get aload pop 
			freq 								
			mul									
			5 2 roll							
			fMatrix2 currentmatrix 1 get 0 ne {
				3 -1 roll 90 add 3 1 roll 		
				sflipx 1 fmGetFlip sflipy 2 fmGetFlip neg mul
			} {  								
				sflipx 0 fmGetFlip sflipy 3 fmGetFlip mul 
			} ifelse
			0 lt {exch pop} {pop} ifelse 		
			fMNegative { 
				{neg} fmConcatProcs 			
			} if
			bind
			
			
			
			systemdict /setscreen get exec		
			/FrameCurGray exch def
		} {
			/bwidth  exch def
			/bpside  exch def
			/bstring exch def
			/onbits 0 def  /offbits 0 def
			freq sangle landscape {90 add} if 
				{/ypoint exch def
				 /xpoint exch def
				 /xindex xpoint 1 add 2 div bpside mul cvi def
				 /yindex ypoint 1 add 2 div bpside mul cvi def
				 bstring yindex bwidth mul xindex 8 idiv add get
				 1 7 xindex 8 mod sub bitshift and 0 ne fMNegative {not} if
				 {/onbits  onbits  1 add def 1}
				 {/offbits offbits 1 add def 0}
				 ifelse
				}
				setscreen
			offbits offbits onbits add div fMNegative {1.0 exch sub} if
			/FrameCurGray exch def
		} ifelse
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		fMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode fMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode fMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/rip4 { 
	   
	  
	  kis cis copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  cis mis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  mis yis copy pop 
	  dup dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  yis kis copy pop 
	  3 mul is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
/wbytes { 
      dup dup
      8 gt { pop 8 idiv mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	cvtProc                
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/cvtProc exch def
	/depth exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def 
	cvtProc              
	/is width depth wbytes string def
	/cf currentfile def 
	width height depth [width 0 0 height neg 0 height] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
fMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/kk cynu magu min yelu min def
		/u kk currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 kk currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch fmConcatProcs settransfer
} bind def
/BITMAPCOLOR { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/bitmapsave save def
	fMLevel1 {	
		colorsetup
		/is width depth wbytes string def
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is width depth wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/depth 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	fMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		width height depth [width 0 0 height neg 0 height] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width width def
			/Height height def
			/ImageMatrix [width 0 0 height neg 0 height] def
			/DataSource {ip} bind def
			/BitsPerComponent depth def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/depth 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip pop ris} {gis} {bis} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCMYKc { 
	/depth 32 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	width height 8 [width 0 0 height neg 0 height] 
	{width rip4 pop cis} {mis} {yis} {kis} true 4 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYK { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /mis width string def
        /yis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop } 
        { cf mis readhexstring pop } 
        { cf yis readhexstring pop } 
        { cf kis readhexstring pop } 
        true 4 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/depth 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 width getinterval def	
	/gis im width width getinterval def	
	/bis im width 2 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop ris gis bis width gray} image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAYc { 
	/depth 32 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/height exch def /width exch def
	/lb width depth wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/cis im 0 width getinterval def	
	/mis im width width getinterval def	
	/yis im width 2 mul width getinterval def 
	/kis im width 3 mul width getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        {width rip pop cis mis yis kis width cgray} image
        bitmapsave restore 
        grestore
        } bind def
/cgray { 
        /ww exch def
        /k exch def
        /y exch def
        /m exch def
        /c exch def
        0 1 ww 1 sub { /i exch def c i get m i get y i get k i get CMYKtoRGB
				.144 mul 3 1 roll .587 mul 3 1 roll .299 mul add add
				c i 3 -1 roll floor cvi put } for
        c
 		} bind def
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /gis width string def
        /bis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop width gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPCMYKGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/height exch def /width exch def
        /bitmapsave save def 
        /is width string def
        /yis width string def
        /mis width string def
        /kis width string def
        /cf currentfile def 
        width height 8 [width 0 0 height neg 0 height] 
        { cf is readhexstring pop 
          cf mis readhexstring pop 
          cf yis readhexstring pop 
          cf kis readhexstring pop width cgray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(5.0) FMVERSION
1 1 0 0 612 792 0 1 10 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /Times-Roman FMFONTDEFINE
2 0 /Courier FMFONTDEFINE
3 0 /Courier-Bold FMFONTDEFINE
4 0 /Times-Italic FMFONTDEFINE
5 0 /Times-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
72 603 558 603 2 L
2 Z
N
72 74.02 558 74.02 2 L
0.25 H
N
0 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
0 10 Q
-2.78 (1) 552.44 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 32 Q
-0.32 -0.64 (Zebra Release Notes) 207 671.67 B
1 12 Q
1.14 (This document describes the most important changes to Zebra o) 207 577 P
1.14 (v) 524.05 577 P
1.14 (er the) 529.87 577 P
(past fe) 207 563 T
(w releases.) 238.36 563 T
72 519 558 522 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
207 520.5 558 520.5 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
72 520.5 198 520.5 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 0 0 1 0 0 0 K
(1.) 187.99 526 T
(V) 207 526 T
(er) 214.4 526 T
(sion 4.2) 225.56 526 T
1 F
0.44 (While there ha) 207 501 P
0.44 (v) 278.29 501 P
0.44 (e been numerous changes to Zebra for this release, there) 284.11 501 P
1.57 (are relati) 207 487 P
1.57 (v) 250.59 487 P
1.57 (ely fe) 256.41 487 P
1.57 (w user) 284.67 487 P
1.57 (-visible dif) 317.66 487 P
1.57 (ferences or ne) 371.27 487 P
1.57 (w features. If you need) 441.41 487 P
0.87 (details and speci\336cs, check the) 207 473 P
2 F
2.09 (ChangeLog) 361.99 473 P
1 F
0.87 ( \336le in the top directory of) 426.79 473 P
(the distrib) 207 459 T
(ution.) 255.1 459 T
0 F
(1.1) 181.32 427 T
(Ne) 207 427 T
(w f) 222.16 427 T
(eatures) 238.7 427 T
3 11 Q
(\245) 207 409 T
1 12 Q
1.53 (Horizontal plots no) 221.4 409 P
1.53 (w support se) 316.82 409 P
1.53 (v) 380.24 409 P
1.53 (eral map projections which can be) 386.06 409 P
0.87 (selected interacti) 221.4 395 P
0.87 (v) 302.94 395 P
0.87 (ely) 308.76 395 P
0.87 (. The list of current projections includes Merca-) 322.65 395 P
1 (tor) 221.4 381 P
1 (, Lambert conformal, Lambert polar) 234.25 381 P
1 (, Lambert equal area, Cassini,) 411.05 381 P
2.8 (Albers equal area, orthographic, and stereographic. Others can be) 221.4 367 P
0.04 (added to future releases as interest indicates.The original f) 221.4 353 P
0.04 (ast c) 501.16 353 P
0.04 (yclidri-) 522.67 353 P
(cal projection is still a) 221.4 339 T
(v) 327.16 339 T
(ailable, also.) 332.86 339 T
3 11 Q
(\245) 207 322 T
1 12 Q
-0.04 (A port to the Linux operating system for Intel processors is no) 221.4 322 P
-0.04 (w a) 519.59 322 P
-0.04 (v) 536.3 322 P
-0.04 (ail-) 542 322 P
1.06 (able. This port has some limitations, and should be considered beta-) 221.4 308 P
1.9 (test softw) 221.4 294 P
1.9 (are. See the) 269.51 294 P
4 F
1.9 (Installation Manual) 333.85 294 P
1 F
1.9 ( for more information. A) 431.42 294 P
1.95 (binary release is a) 221.4 280 P
1.95 (v) 313.32 280 P
1.95 (ailable with all of the optional capabilities, e.g.) 319.02 280 P
0.83 (projections, e) 221.4 266 P
0.83 (xcept for the HDF interf) 286.7 266 P
0.83 (ace. [HDF 4.0-beta supposedly) 406.54 266 P
(b) 221.4 252 T
(uilds on Linux, b) 227.16 252 T
(ut it has not been tested with Zebra.]) 308.93 252 T
3 11 Q
(\245) 207 235 T
1 12 Q
1.81 (It is no) 221.4 235 P
1.81 (w easier to run multiple Zebra sessions concurrently on the) 258.06 235 P
0.66 (same host, or to run multiple display managers within a single Zebra) 221.4 221 P
0.27 (session. Among other things, this means a datastore daemon on a sin-) 221.4 207 P
2.55 (gle host can concurrently service multiple display sessions on the) 221.4 193 P
0.73 (local host and other hosts. Lik) 221.4 179 P
0.73 (e) 369.58 179 P
0.73 (wise a single host can simulate a net-) 374.6 179 P
1.4 (w) 221.4 165 P
1.4 (ork of Zebra sessions, or multiple netw) 229.94 165 P
1.4 (ork) 425.88 165 P
1.4 (ed sessions can be run-) 441.75 165 P
(ning concurrently on the same set of hosts.) 221.4 151 T
3 11 Q
(\245) 207 134 T
1 12 Q
0.73 (An impro) 221.4 134 P
0.73 (v) 268.28 134 P
0.73 (ed time widget, with ne) 274.1 134 P
0.73 (w features, including the ability to) 389.71 134 P
(remember \322interesting\323 times in a menu.) 221.4 120 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 1
%%Page: "2" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
0 10 Q
(2) 54 60.29 T
0 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 11 Q
(\245) 189 678.02 T
1 12 Q
2.01 (The help mechanism can no) 203.4 678.02 P
2.01 (w w) 345.79 678.02 P
2.01 (ork with either the) 368.02 678.02 P
2 F
4.83 (netscape) 467.39 678.02 P
1 F
2.01 ( or) 524.99 678.02 P
2 F
1.01 (mosaic) 203.4 664.02 P
1 F
0.42 ( bro) 246.6 664.02 P
0.42 (wsers. Xhelp is still distrib) 265.72 664.02 P
0.42 (uted with this release, b) 395.5 664.02 P
0.42 (ut can) 510.59 664.02 P
-0.27 (be con\336gured out. The) 203.4 650.02 P
4 F
-0.27 (Installation Manual) 313.98 650.02 P
1 F
-0.27 ( describes ho) 409.39 650.02 P
-0.27 (w to con\336gure) 471.21 650.02 P
(your help bro) 203.4 636.02 T
(wser) 267.76 636.02 T
(.) 289.75 636.02 T
3 11 Q
(\245) 189 619.02 T
1 12 Q
-0.11 (F) 203.4 619.02 P
-0.11 (or those who manually edit plot description \336les, the syntax has been) 209.89 619.02 P
0.04 (signi\336cantly relax) 203.4 605.02 P
0.04 (ed. Comments and blank lines are permitted e) 289.59 605.02 P
0.04 (v) 509.53 605.02 P
0.04 (erye-) 515.35 605.02 P
0.55 (where, and tabs are not required an) 203.4 591.02 P
0.55 (ywhere. A ne) 374.82 591.02 P
0.55 (w utility) 439.93 591.02 P
0.55 (,) 480.05 591.02 P
2 F
1.33 (pdcheck) 486.6 591.02 P
1 F
0.55 (,) 537 591.02 P
-0.11 (v) 203.4 577.02 P
-0.11 (eri\336es the syntax of plot description \336les and reports an) 209.22 577.02 P
-0.11 (y w) 474.35 577.02 P
-0.11 (arnings or) 491.79 577.02 P
(errors.) 203.4 563.02 T
3 11 Q
(\245) 189 546.02 T
1 12 Q
1.26 (The interf) 203.4 546.02 P
1.26 (ace to netCDF \336les is a little more intelligent and \337e) 252.2 546.02 P
1.26 (xible) 516 546.02 P
1.59 (re) 203.4 532.02 P
1.59 (g) 212.54 532.02 P
1.59 (arding the styles and con) 218.48 532.02 P
1.59 (v) 343.68 532.02 P
1.59 (entions it accepts. F) 349.51 532.02 P
1.59 (or e) 449.43 532.02 P
1.59 (xample, it can) 469.16 532.02 P
0.42 (no) 203.4 518.02 P
0.42 (w read and write se) 215.1 518.02 P
0.42 (v) 309.77 518.02 P
0.42 (eral con) 315.59 518.02 P
0.42 (v) 353.84 518.02 P
0.42 (entions for time, and it supports e) 359.66 518.02 P
0.42 (v) 522.85 518.02 P
0.42 (en) 528.67 518.02 P
0.11 (the most bizarre combinations of capitalization in \336eld and dimension) 203.4 504.02 P
(names, as well as some common abbre) 203.4 490.02 T
(viations.) 389.4 490.02 T
3 11 Q
(\245) 189 473.02 T
1 12 Q
(Zebra successfully b) 203.4 473.02 T
(uilds and runs with the MIT X11 Release 6.) 301.8 473.02 T
3 11 Q
(\245) 189 456.02 T
1 12 Q
-0.11 (The Zebra source distrib) 203.4 456.02 P
-0.11 (ution can be compiled with the public domain) 320.46 456.02 P
(GNU FOR) 203.4 442.02 T
(TRAN compiler) 255.01 442.02 T
2 F
(g77) 336.34 442.02 T
1 F
(.) 357.94 442.02 T
3 11 Q
(\245) 189 425.02 T
1 12 Q
2.47 (The graphics process supports interacti) 203.4 425.02 P
2.47 (v) 400.29 425.02 P
2.47 (e manipulation of the plot) 406.11 425.02 P
0.87 (windo) 203.4 411.02 P
0.87 (w layout, through plot description parameters and icon menus.) 233.1 411.02 P
1.4 (Currently the layout parameters include the height and width of the) 203.4 397.02 P
2.82 (icon re) 203.4 383.02 P
2.82 (gion, the top annotation re) 239.02 383.02 P
2.82 (gion, the side annotation border) 376.42 383.02 P
(re) 203.4 369.02 T
(gions, and each of the four axis re) 212.54 369.02 T
(gions.) 374.99 369.02 T
3 11 Q
(\245) 189 352.02 T
1 12 Q
0.92 (This release of the data store library incorporates a primiti) 203.4 352.02 P
0.92 (v) 490.29 352.02 P
0.92 (e Hierar-) 496.11 352.02 P
1.69 (chical Data F) 203.4 338.02 P
1.69 (ormat \050HDF\051 interf) 270.58 338.02 P
1.69 (ace. So f) 365.82 338.02 P
1.69 (ar the interf) 410.73 338.02 P
1.69 (ace is tailored) 469.97 338.02 P
-0.2 (spec\336cally to) 203.4 324.02 P
-0.2 (w) 266.56 324.02 P
-0.2 (ards the HDF/netCDF satellite image \336les generated by) 275.1 324.02 P
(SeaSpace\325) 203.4 310.02 T
(s T) 252.72 310.02 T
(erascan Data F) 266.88 310.02 T
(ormat \050TDF\051 con) 338 310.02 T
(v) 419.51 310.02 T
(erter) 425.33 310.02 T
(,) 446.83 310.02 T
2 F
(tdf2hdf) 452.83 310.02 T
1 F
(.) 503.23 310.02 T
3 11 Q
(\245) 189 293.02 T
1 12 Q
2.27 (The graphics process contains the \336rst release of a histogram plot) 203.4 293.02 P
1.7 (type. Histograms support bar charts of data bin counts for multiple) 203.4 279.02 P
(platforms and \336elds.) 203.4 265.02 T
0 F
(1.2) 163.32 233.02 T
(Chang) 189 233.02 T
(es) 226.45 233.02 T
3 11 Q
(\245) 189 215.02 T
1 12 Q
-0.17 (The interf) 203.4 215.02 P
-0.17 (ace between the display manager and graphics processes has) 250.76 215.02 P
0.14 (changed signi\336cantly) 203.4 201.02 P
0.14 (. The lar) 305.08 201.02 P
0.14 (gest user) 345.46 201.02 P
0.14 (-visible change is that the name) 387.68 201.02 P
0.88 (of a graphics process\321the name kno) 203.4 187.02 P
0.88 (wn by the message system\321no) 385.14 187.02 P
1.31 (longer must match the windo) 203.4 173.02 P
1.31 (w name gi) 348.32 173.02 P
1.31 (v) 400.63 173.02 P
1.31 (en by the display manager) 406.45 173.02 P
1.31 (.) 537 173.02 P
0.14 (By def) 203.4 159.02 P
0.14 (ault the display manager still tries to k) 235.74 159.02 P
0.14 (eep windo) 420.25 159.02 P
0.14 (w names iden-) 469.74 159.02 P
0.23 (tical to message names. The message names are used with commands) 203.4 145.02 P
0.48 (lik) 203.4 131.02 P
0.48 (e) 215.95 131.02 P
2 F
1.14 (zquery) 224.76 131.02 P
1 F
0.48 ( and with the plot description monitor f) 267.96 131.02 P
0.48 (acility) 459.5 131.02 P
0.48 (, while the) 488.72 131.02 P
6.03 (windo) 203.4 117.02 P
6.03 (w names apply to display manager commands. A ne) 233.1 117.02 P
6.03 (w) 531.34 117.02 P
1.02 (\324-) 203.4 103.02 P
1.02 (multiple\325 option allo) 211.39 103.02 P
1.02 (ws more than one display manager to run in a) 311.82 103.02 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "2" 2
%%Page: "3" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 9 Q
(V) 207 736.18 T
(er) 212.55 736.18 T
(sion 4.2) 220.92 736.18 T
72 726.98 558 726.98 2 L
0.25 H
N
72 74.02 558 74.02 2 L
2 Z
N
0 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
0 10 Q
-2.78 (3) 552.44 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
0.92 (single message session, so dif) 221.4 678.02 P
0.92 (ferent displays \050hosts and X terminals\051) 367.77 678.02 P
0.04 (can share the same message manager and datastore daemon. The mul-) 221.4 664.02 P
0.61 (tiple option gi) 221.4 650.02 P
0.61 (v) 289.67 650.02 P
0.61 (es each graphics process a unique message name, dif-) 295.49 650.02 P
1.41 (ferent from the windo) 221.4 636.02 P
1.41 (w name. The communication between display) 330.31 636.02 P
1.54 (manager and graphics process has been optimized slightly) 221.4 622.02 P
1.54 (, to a) 510.39 622.02 P
1.54 (v) 536.9 622.02 P
1.54 (oid) 542.66 622.02 P
(such things as redundant replots.) 221.4 608.02 T
3 11 Q
(\245) 207 591.02 T
1 12 Q
1.96 (The Zebra 4.2 distrib) 221.4 591.02 P
1.96 (ution incorporates the Imak) 328.37 591.02 P
1.96 (e system from the) 466.45 591.02 P
0.28 (MIT Release 6 of X11. This means the Zebra directory tree has a fe) 221.4 577.02 P
0.28 (w) 549.34 577.02 P
0.2 (changes. The original) 221.4 563.02 P
2 F
0.49 (imake) 328.66 563.02 P
1 F
0.2 ( directory has been split into the) 364.66 563.02 P
2 F
0.49 (cf) 523.07 563.02 P
1 F
0.2 ( and) 537.47 563.02 P
2 F
3.62 (imake) 221.4 549.02 P
1 F
1.51 ( directories under the) 257.4 549.02 P
2 F
3.62 (config) 368.07 549.02 P
1 F
1.51 ( directory) 411.27 549.02 P
1.51 (, and the \336les origi-) 458.31 549.02 P
0.25 (nally in) 221.4 535.02 P
2 F
0.61 (config) 261.24 535.02 P
1 F
0.25 ( no) 304.44 535.02 P
0.25 (w reside in) 319.39 535.02 P
2 F
0.61 (config/project) 375.8 535.02 P
1 F
0.25 (. The actual con-) 476.6 535.02 P
1.57 (\336guration and installation steps ha) 221.4 521.02 P
1.57 (v) 392.08 521.02 P
1.57 (e changed v) 397.9 521.02 P
1.57 (ery little, e) 458.17 521.02 P
1.57 (xcept the) 512.78 521.02 P
0.38 (the f) 221.4 507.02 P
0.38 (amiliar) 243.32 507.02 P
2 F
0.91 (config.h) 280.7 507.02 P
1 F
0.38 ( \336le has been mo) 338.3 507.02 P
0.38 (v) 420.96 507.02 P
0.38 (ed to) 426.78 507.02 P
2 F
0.91 (config/project) 454.2 507.02 P
1 F
0.38 (.) 555 507.02 P
0.62 (If you ha) 221.4 493.02 P
0.62 (v) 265.73 493.02 P
0.62 (e local Imak) 271.55 493.02 P
0.62 (e\336les for programs outside of the Zebra distri-) 332 493.02 P
0.56 (ubtion, see the) 221.4 479.02 P
4 F
0.56 (De) 295.75 479.02 P
0.56 (veloper\325) 309.56 479.02 P
0.56 (s Guide) 349.06 479.02 P
1 F
0.56 ( for instructions on porting them to) 386.62 479.02 P
(Zebra\325) 221.4 465.02 T
(s ne) 252.72 465.02 T
(w set of Imak) 271.42 465.02 T
(e rules.) 336.95 465.02 T
3 11 Q
(\245) 207 448.02 T
1 12 Q
0.26 (In general, se) 221.4 448.02 P
0.26 (v) 285.93 448.02 P
0.26 (eral lar) 291.75 448.02 P
0.26 (ge portions of the code ha) 325.45 448.02 P
0.26 (v) 450.83 448.02 P
0.26 (e been cleaned up. A) 456.65 448.02 P
-0.03 (fe) 221.4 434.02 P
-0.03 (w more memory leaks ha) 230.42 434.02 P
-0.03 (v) 351.39 434.02 P
-0.03 (e been plugged, and a fe) 357.21 434.02 P
-0.03 (w more programs) 473.4 434.02 P
0.6 (are a little more rob) 221.4 420.02 P
0.6 (ust. In particular) 318.2 420.02 P
0.6 (, the message manager has man) 397.89 420.02 P
0.6 (y) 552 420.02 P
2.25 (more safety checks and more deb) 221.4 406.02 P
2.25 (ugging \337e) 392.69 406.02 P
2.25 (xibility \050see) 443.1 406.02 P
2 F
5.4 (message) 507.6 406.02 P
6.92 (-) 221.4 392.02 P
6.92 (h) 228.6 392.02 P
1 F
2.88 (\051. In general, library header \336les \336nally declare prototypes for) 235.8 392.02 P
(e) 221.4 378.02 T
(v) 226.43 378.02 T
(ery public function.) 232.25 378.02 T
3 11 Q
(\245) 207 361.02 T
1 12 Q
1.56 (A Zebra distrib) 221.4 361.02 P
1.56 (ution is no) 297.6 361.02 P
1.56 (w a) 351.1 361.02 P
1.56 (v) 369.42 361.02 P
1.56 (ailable which includes and automati-) 375.11 361.02 P
0.45 (cally b) 221.4 347.02 P
0.45 (uilds the RDSS libraries needed to compile Zebra. Sites which) 253.94 347.02 P
1.64 (do not already ha) 221.4 333.02 P
1.64 (v) 309.08 333.02 P
1.64 (e the RDSS libraries do not need to acquire and) 314.89 333.02 P
(install them separately) 221.4 319.02 T
(. See the) 328.61 319.02 T
4 F
(Installation Manual) 372.6 319.02 T
1 F
( for details.) 468.28 319.02 T
3 11 Q
(\245) 207 302.02 T
1 12 Q
2.29 (The) 221.4 302.02 P
2 F
5.49 (dsmanage) 245.35 302.02 P
1 F
2.29 ( utility) 302.95 302.02 P
2.29 (, whose source code is C++, only compiles) 336.14 302.02 P
0.09 (with GNU C++ v) 221.4 288.02 P
0.09 (ersion 2.7.0 or later) 305.35 288.02 P
0.09 (. As usual the utility is still a) 398.59 288.02 P
0.09 (v) 536.3 288.02 P
0.09 (ail-) 542 288.02 P
1.64 (able in binary for all supported platforms. Lik) 221.4 274.02 P
1.64 (e) 452.75 274.02 P
1.64 (wise, the rest of the) 457.78 274.02 P
2.15 (source distrib) 221.4 260.02 P
2.15 (ution w) 288.3 260.02 P
2.15 (as tested on all of the supported architectures) 326.67 260.02 P
0.08 (with) 221.4 246.02 P
2 F
0.2 (gcc) 245.82 246.02 P
1 F
0.08 ( 2.7.0 or higher) 267.42 246.02 P
0.08 (. Earlier v) 340.67 246.02 P
0.08 (ersions of) 388.31 246.02 P
2 F
0.2 (gcc) 438.47 246.02 P
1 F
0.08 ( should still compile) 460.07 246.02 P
(the rest of Zebra without an) 221.4 232.02 T
(y problems.) 354.19 232.02 T
3 11 Q
(\245) 207 215.02 T
1 12 Q
2.43 (The SunOS 4.1.3 binary distrib) 221.4 215.02 P
2.43 (ution has been replaced by SunOS) 380.88 215.02 P
1.38 (4.1.3U1 binaries. This may produce \322une) 221.4 201.02 P
1.38 (xpected v) 426.11 201.02 P
1.38 (ersion\323 messages) 473.64 201.02 P
0.12 (from the dynamic link) 221.4 187.02 P
0.12 (er on 4.1.3 systems, b) 328.65 187.02 P
0.12 (ut there should not be an) 433.23 187.02 P
0.12 (y) 552 187.02 P
(other compatibility problems.) 221.4 173.02 T
0 F
(1.3) 181.32 141.02 T
(Kno) 207 141.02 T
(wn Bugs) 230.15 141.02 T
1 F
1.96 (There are man) 207 123.02 P
1.96 (y items on the Zebra task list, b) 280.04 123.02 P
1.96 (ut these are just a fe) 444.19 123.02 P
1.96 (w) 549.34 123.02 P
(which might be helpful to kno) 207 109.02 T
(w when using this release.) 351.7 109.02 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "3" 3
%%Page: "4" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
0 10 Q
(4) 54 60.29 T
0 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 11 Q
(\245) 189 678.02 T
1 12 Q
3.23 (The) 203.4 678.02 P
2 F
7.76 (dsdwidget) 228.29 678.02 P
1 F
3.23 ( scrolled list of platform \336les sho) 293.1 678.02 P
3.23 (ws some odd) 470.87 678.02 P
0.49 (beha) 203.4 664.02 P
0.49 (vior when the list contains se) 225.82 664.02 P
0.49 (v) 367.61 664.02 P
0.49 (eral hundred \336les. The list itself is) 373.42 664.02 P
(still correct, ho) 203.4 650.02 T
(we) 275.42 650.02 T
(v) 289.12 650.02 T
(er) 294.94 650.02 T
(.) 303.6 650.02 T
2.55 (Real-time installations should tak) 189 624.02 P
2.55 (e into account the follo) 357.53 624.02 P
2.55 (wing kno) 478.09 624.02 P
2.55 (wn) 525.34 624.02 P
(problems with \336le synchronization under concurrent reads and writes:) 189 610.02 T
3 11 Q
(\245) 189 590.02 T
1 12 Q
0.44 (The netCDF library routine) 203.4 590.02 P
2 F
1.05 (ncsync\050\051) 339.8 590.02 P
1 F
0.44 ( f) 397.4 590.02 P
0.44 (ails to sync the library b) 404.71 590.02 P
0.44 (uf) 522.31 590.02 P
0.44 (f-) 532.01 590.02 P
2.61 (ers with the \336le on disk, so clients holding a \336le open will miss) 203.4 576.02 P
0.39 (changes written by another client. The current w) 203.4 562.02 P
0.39 (orkaround forces cli-) 438.59 562.02 P
1.73 (ents to close and then re-open \336les which need to be synchronized) 203.4 548.02 P
1.18 (with changes on the disk. Naturally this is slo) 203.4 534.02 P
1.18 (wer and less desirable) 430.84 534.02 P
0.9 (than sync\325ing the open \336le. A patch does e) 203.4 520.02 P
0.9 (xist for) 414.71 520.02 P
2 F
2.16 (ncsync\050\051) 453.84 520.02 P
1 F
0.9 (; con-) 511.44 520.02 P
-0.19 (tact RDP if you suspect you need it. Only real-time installations trying) 203.4 506.02 P
1.06 (to frequently \050on the order of seconds\051 read from \336les while writing) 203.4 492.02 P
(them w) 203.4 478.02 T
(ould ha) 238.94 478.02 T
(v) 274.37 478.02 T
(e an) 280.19 478.02 T
(y use for the patch.) 299.66 478.02 T
3 11 Q
(\245) 189 461.02 T
1 12 Q
0.5 (Linux NFS re-uses the inode of deleted \336les e) 203.4 461.02 P
0.5 (v) 427.06 461.02 P
0.5 (en while references to) 432.88 461.02 P
-0.17 (the inode are open in other processes. Ordinarily the datastore daemon) 203.4 447.02 P
0.56 (detects a replaced \336le by the inode change. b) 203.4 433.02 P
0.56 (ut this f) 422.56 433.02 P
0.56 (ails under Linux) 460.23 433.02 P
-0.03 (o) 203.4 419.02 P
-0.03 (v) 209.22 419.02 P
-0.03 (er NFS \336lesystems. This is a rare situation, limited only to NFS and) 215.04 419.02 P
(not a problem with the nati) 203.4 405.02 T
(v) 332.76 405.02 T
(e e) 338.58 405.02 T
(xt2 \336lesystem.) 352.06 405.02 T
54 361.02 540 364.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 362.52 540 362.52 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
54 362.52 180 362.52 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 0 0 1 0 0 0 K
(2.) 169.99 368.02 T
(V) 189 368.02 T
(er) 196.4 368.02 T
(sion 4.1) 207.56 368.02 T
1 F
1.87 (Zebra v) 189 343.02 P
1.87 (ersion 4.1 contains man) 227.67 343.02 P
1.87 (y changes, dri) 347.09 343.02 P
1.87 (v) 417.51 343.02 P
1.87 (en by products lik) 423.33 343.02 P
1.87 (e the) 515.14 343.02 P
-0 (second ST) 189 329.02 P
-0 (ORM-FEST CDR) 239.11 329.02 P
-0 (OM, the CO) 325.64 329.02 P
-0 (ARE inte) 384.88 329.02 P
-0 (grated data set, and the) 429.7 329.02 P
1.09 (ARM and LANTEX projects. The follo) 189 315.02 P
1.09 (wing is a partial list of changes) 384.13 315.02 P
(for this release.) 189 301.02 T
0 F
(2.1) 163.32 269.02 T
(The name c) 189 269.02 T
(hang) 254.9 269.02 T
(e) 283.69 269.02 T
1 F
-0.14 (The original name for the Zebra system w) 189 251.02 P
-0.14 (as found to ha) 389.5 251.02 P
-0.14 (v) 456.49 251.02 P
-0.14 (e an unfortunate) 462.31 251.02 P
-0.07 (meaning in certain languages and cultures. Rather than potentially of) 189 237.02 P
-0.07 (fend) 518.68 237.02 P
0.06 (people, we chose to change the name. The ne) 189 223.02 P
0.06 (w name is \050hopefully\051 close) 406.45 223.02 P
-0.16 (enough to the old one to be recognizable without ha) 189 209.02 P
-0.16 (ving undesired mean-) 436.33 209.02 P
(ings.) 189 195.02 T
0.77 (F) 189 169.02 P
0.77 (or the time being, references to \322zeb\323 still perv) 195.49 169.02 P
0.77 (ade the code and docu-) 426.29 169.02 P
(mentation; these will be cleaned up o) 189 155.02 T
(v) 367.46 155.02 T
(er time.) 373.28 155.02 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "4" 4
%%Page: "5" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 9 Q
(V) 207 736.18 T
(er) 212.55 736.18 T
(sion 4.1) 220.92 736.18 T
72 726.98 558 726.98 2 L
0.25 H
N
72 74.02 558 74.02 2 L
2 Z
N
0 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
0 10 Q
-2.78 (5) 552.44 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 12 Q
(2.2) 181.32 678.02 T
(Ne) 207 678.02 T
(w f) 222.16 678.02 T
(eatures) 238.7 678.02 T
3 11 Q
(\245) 207 660.02 T
1 12 Q
-0.16 (P) 221.4 660.02 P
-0.16 (artial support for the GRIB \336le format \321 used mostly for model data) 227.89 660.02 P
(\321 has been added. Not all grid types are currently supported.) 221.4 646.02 T
3 11 Q
(\245) 207 629.02 T
1 12 Q
0.19 (P) 221.4 629.02 P
0.19 (artial support for the GRADS \336le format has been added. Almost all) 227.89 629.02 P
0.55 (GRADS \336les should be readable, b) 221.4 615.02 P
0.55 (ut Zebra is not able to output data) 392.53 615.02 P
(in this format.) 221.4 601.02 T
3 11 Q
(\245) 207 584.02 T
1 12 Q
0.35 (A ne) 221.4 584.02 P
0.35 (w \322model widget\323 has been added which allo) 244.44 584.02 P
0.35 (ws a greater de) 464.19 584.02 P
0.35 (gree) 537.35 584.02 P
0.25 (of time control in displays. When dealing with model data that mak) 221.4 570.02 P
0.25 (es) 548 570.02 P
1.24 (use of multiple data times \050i.e. issue, v) 221.4 556.02 P
1.24 (alid, and forecast times\051, this) 414.41 556.02 P
-0.23 (widget should be used instead of the time widget to control the display) 221.4 542.02 P
(time of a graphics windo) 221.4 528.02 T
(w) 340.42 528.02 T
(.) 348.3 528.02 T
3 11 Q
(\245) 207 511.02 T
1 12 Q
0.88 (Zebra has been ported to the Silicon Graphics IRIX 5 operating sys-) 221.4 511.02 P
(tem.) 221.4 497.02 T
3 11 Q
(\245) 207 480.02 T
1 12 Q
2.39 (A ne) 221.4 480.02 P
2.39 (w widget has been added to allo) 246.48 480.02 P
2.39 (w automatic generation of a) 414.48 480.02 P
(series of images in GIF) 221.4 466.02 T
(, PostScript or X windo) 332.42 466.02 T
(w dump format.) 445.13 466.02 T
3 11 Q
(\245) 207 449.02 T
1 12 Q
1.14 (The help system is no) 221.4 449.02 P
1.14 (w able to use) 330.34 449.02 P
2 F
2.75 (Mosaic) 400.91 449.02 P
1 F
1.14 ( for the presentation of) 444.11 449.02 P
0.64 (help system. XHelp is still included in this v) 221.4 435.02 P
0.64 (ersion of Zebra, b) 439.36 435.02 P
0.64 (ut will) 526.35 435.02 P
(probably be remo) 221.4 421.02 T
(v) 305.87 421.02 T
(ed from future distrib) 311.69 421.02 T
(utions.) 414.43 421.02 T
3 11 Q
(\245) 207 404.02 T
1 12 Q
2.63 (The) 221.4 404.02 P
2 F
6.32 (startzeb) 245.69 404.02 P
1 F
2.63 ( and) 303.29 404.02 P
2 F
6.32 (zebstop) 331.89 404.02 P
1 F
2.63 ( commands ha) 382.29 404.02 P
2.63 (v) 456.64 404.02 P
2.63 (e been renamed to) 462.46 404.02 P
2 F
(zstart) 221.4 390.02 T
1 F
( and) 264.6 390.02 T
2 F
(zstop) 287.93 390.02 T
1 F
(, respecti) 323.93 390.02 T
(v) 366.95 390.02 T
(ely) 372.77 390.02 T
(.) 386.65 390.02 T
0 F
(2.3) 181.32 358.02 T
(Internal c) 207 358.02 T
(hang) 260.23 358.02 T
(es) 289.02 358.02 T
1 F
0.53 (The follo) 207 340.02 P
0.53 (wing changes are not normally user) 251.56 340.02 P
0.53 (-visible, b) 424.94 340.02 P
0.53 (ut can be seen by) 473.23 340.02 P
(people who w) 207 326.02 T
(ork with the Zebra data store or con\336guration \336les.) 274.2 326.02 T
3 11 Q
(\245) 207 306.02 T
1 12 Q
0.05 (A ne) 221.4 306.02 P
0.05 (w data or) 244.15 306.02 P
0.05 (g) 288.69 306.02 P
0.05 (anization called \322nspace\323 has been added. This or) 294.63 306.02 P
0.05 (g) 533.4 306.02 P
0.05 (ani-) 539.34 306.02 P
0.52 (zation is designed to model the general, N-dimensional grid structure) 221.4 292.02 P
(used by netCDF) 221.4 278.02 T
(.) 298.44 278.02 T
3 11 Q
(\245) 207 261.02 T
1 12 Q
0.11 (A mechanism has been added to encapsulate standard plot description) 221.4 261.02 P
1.2 (components and their associated user interf) 221.4 247.02 P
1.2 (ace code. This code may) 434.9 247.02 P
1.84 (then be remo) 221.4 233.02 P
1.84 (v) 287.56 233.02 P
1.84 (ed from the) 293.38 233.02 P
2 F
4.42 (gp.init) 357.23 233.02 P
1 F
1.84 ( \336le and loaded in only when) 407.62 233.02 P
2.62 (needed. Look at the description of the) 221.4 219.02 P
2 F
6.28 (require) 424.36 219.02 P
1 F
2.62 ( plot description) 474.76 219.02 P
(parameter and) 221.4 205.02 T
2 F
(gp) 292.7 205.02 T
1 F
( command in the) 307.1 205.02 T
(Zebra) 390.43 205.02 T
4 F
( Advanced User\325) 418.42 205.02 T
(s Manual) 498.58 205.02 T
1 F
(.) 543.58 205.02 T
3 11 Q
(\245) 207 188.02 T
1 12 Q
0.88 (A platform \322class\323 mechanism has been added to the data store dae-) 221.4 188.02 P
0.31 (mon\325) 221.4 174.02 P
0.31 (s con\336guration \336le. Use of platform classes mak) 246.07 174.02 P
0.31 (es the data store) 480.09 174.02 P
0.13 (con\336guration task easier) 221.4 160.02 P
0.13 (. Refer to the) 338.31 160.02 P
0.13 (Zebra) 404.47 160.02 P
4 F
0.13 ( Advanced User\325) 432.46 160.02 P
0.13 (s Manual) 512.87 160.02 P
1 F
(for more information, and the CO) 221.4 146.02 T
(ARE con\336gurations for e) 382.96 146.02 T
(xamples.) 503.76 146.02 T
3 11 Q
(\245) 207 129.02 T
1 12 Q
0.65 (The message daemon no longer creates an internet sock) 221.4 129.02 P
0.65 (et unless it is) 493.72 129.02 P
0.31 (in) 221.4 115.02 P
0.31 (v) 230.26 115.02 P
0.31 (ok) 236.02 115.02 P
0.31 (ed with the \322) 247.9 115.02 P
2 F
0.74 (-i) 310.48 115.02 P
1 F
0.31 (\323 option. This change will only af) 324.88 115.02 P
0.31 (fect users who) 488.07 115.02 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "5" 5
%%Page: "6" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
0 10 Q
(6) 54 60.29 T
0 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
1.8 (use inter) 203.4 678.02 P
1.8 (-host messaging, which is normally only done in real-time) 245.95 678.02 P
(installations.) 203.4 664.02 T
3 11 Q
(\245) 189 647.02 T
1 12 Q
1.35 (Display con\336gurations sa) 203.4 647.02 P
1.35 (v) 327.85 647.02 P
1.35 (ed in the display manager no) 333.67 647.02 P
1.35 (w ha) 478.41 647.02 P
1.35 (v) 502.51 647.02 P
1.35 (e their) 508.33 647.02 P
0.27 (associated plot descriptions stored in the same \336le. The ne) 203.4 633.02 P
0.27 (w \336le has a) 484.86 633.02 P
1.61 (\322) 203.4 619.02 P
2 F
3.85 (.dc) 208.73 619.02 P
1 F
1.61 (\323 e) 230.33 619.02 P
1.61 (xtension, and the associated \322) 245.41 619.02 P
2 F
3.85 (.pd) 394.14 619.02 P
1 F
1.61 (\323 \336le no longer is sa) 415.74 619.02 P
1.61 (v) 519.85 619.02 P
1.61 (ed.) 525.67 619.02 P
1.3 (The older \336les for pre) 203.4 605.02 P
1.3 (viously-e) 312.96 605.02 P
1.3 (xisting con\336gurations will remain on) 357.44 605.02 P
(the disk, b) 203.4 591.02 T
(ut are no longer used.) 252.83 591.02 T
3 11 Q
(\245) 189 574.02 T
1 12 Q
0.2 (An \322autoscale\323 option has been added to man) 203.4 574.02 P
0.2 (y plot types to allo) 423.61 574.02 P
0.2 (w the) 513.47 574.02 P
0.82 (automatic calculation of plot limits for contouring, color) 203.4 560.02 P
0.82 (-coding, etc.) 479.53 560.02 P
(In all cases, manual scaling is still supported.) 203.4 546.02 T
0 F
(2.4) 163.32 514.02 T
(Kno) 189 514.02 T
(wn pr) 212.15 514.02 T
(ob) 243.91 514.02 T
(lems) 258.46 514.02 T
3 11 Q
(\245) 189 496.02 T
1 12 Q
0.9 (Under Solaris 2, if you stop then immediately restart Zebra, the ne) 203.4 496.02 P
0.9 (w) 531.34 496.02 P
0.46 (in) 203.4 482.02 P
0.46 (v) 212.26 482.02 P
0.46 (ocation may die a quick and graceless death. This beha) 218.02 482.02 P
0.46 (vior results) 485.87 482.02 P
1.47 (from a b) 203.4 468.02 P
1.47 (ug in the Solaris sock) 246.76 468.02 P
1.47 (et library) 355.87 468.02 P
1.47 (. The w) 400.22 468.02 P
1.47 (orkaround is to w) 439.37 468.02 P
1.47 (ait) 528 468.02 P
(about 15 seconds before restarting the system.) 203.4 454.02 T
3 11 Q
(\245) 189 437.02 T
1 12 Q
1.08 (The autoscaling feature can cause scaling to change between frames) 203.4 437.02 P
4.48 (of a mo) 203.4 423.02 P
4.48 (vie, creating results which are possibly decepti) 248.84 423.02 P
4.48 (v) 499.71 423.02 P
4.48 (e. The) 505.53 423.02 P
2.06 (w) 203.4 409.02 P
2.06 (orkaround for no) 211.94 409.02 P
2.06 (w is to use the \322adjust limits\323 option to disable) 297.08 409.02 P
(autoscaling before generating a mo) 203.4 395.02 T
(vie.) 371.84 395.02 T
3 11 Q
(\245) 189 378.02 T
1 12 Q
1.25 (Autoscaling in time-series plots can produce undesired results when) 203.4 378.02 P
0.05 (confronted with glitch) 203.4 364.02 P
0.05 (y data. A bad glitch can e) 310.09 364.02 P
0.05 (xpand the range of the) 432.5 364.02 P
0.15 (data to be plotted by three orders of magnitude, turning the plot into a) 203.4 350.02 P
0.01 (single, horizontal line. The w) 203.4 336.02 P
0.01 (orkaround is to use manual scaling when) 343.97 336.02 P
(this occurs.) 203.4 322.02 T
3 11 Q
(\245) 189 305.02 T
2 12 Q
-0.27 (dsmanage) 203.4 305.02 P
1 F
-0.11 ( incorrectly calculates free space on disks which are lar) 261 305.02 P
-0.11 (ger) 524.68 305.02 P
(than about 2GB.) 203.4 291.02 T
54 247.02 540 250.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 248.52 540 248.52 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
54 248.52 180 248.52 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 0 0 1 0 0 0 K
(3.) 169.99 254.02 T
(V) 189 254.02 T
(er) 196.4 254.02 T
(sion 4.0) 207.56 254.02 T
1 F
0.21 (F) 189 229.02 P
0.21 (ollo) 195.49 229.02 P
0.21 (wing are some of the major changes which appear in V) 213.86 229.02 P
0.21 (ersion 4.0 of) 479.25 229.02 P
0.02 (Zebra. First, here are the performance and interf) 189 215.02 P
0.02 (ace changes which af) 419.96 215.02 P
0.02 (fect) 522.01 215.02 P
(all Zebra users.) 189 201.02 T
3 11 Q
(\245) 189 181.02 T
1 12 Q
2.66 (The DataStore no longer uses System V shared memory to share) 203.4 181.02 P
0.44 (information with its client applications. The shared memory has been) 203.4 167.02 P
1.19 (replaced by messages carried by the Zebra message handler) 203.4 153.02 P
1.19 (. Conse-) 498.82 153.02 P
0.61 (quently) 203.4 139.02 P
0.61 (, there are no longer an) 238.62 139.02 P
0.61 (y limits on the number of platforms or) 352.1 139.02 P
(data \336les which the data store can support.) 203.4 125.02 T
3 11 Q
(\245) 189 108.02 T
1 12 Q
0.82 (Zebra has been ported to Sun Solaris 2.3 and to HP 9000 Series 700) 203.4 108.02 P
(machines under HP-UX, v) 203.4 94.02 T
(ersion 9.0.) 330.53 94.02 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "6" 6
%%Page: "7" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 9 Q
(V) 207 736.18 T
(er) 212.55 736.18 T
(sion 4.0) 220.92 736.18 T
72 726.98 558 726.98 2 L
0.25 H
N
72 74.02 558 74.02 2 L
2 Z
N
0 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
0 10 Q
-2.78 (7) 552.44 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 11 Q
(\245) 207 678.02 T
1 12 Q
1.2 (Multiple Zebra processes may be run on the same machine simulta-) 221.4 678.02 P
(neously by setting the en) 221.4 664.02 T
(vironment v) 340.25 664.02 T
(ariable ZEB_SOCKET) 398.28 664.02 T
(.) 508.38 664.02 T
3 11 Q
(\245) 207 647.02 T
1 12 Q
-0.1 (OpenW) 221.4 647.02 P
-0.1 (indo) 258.24 647.02 P
-0.1 (ws 2.0 is no longer supported. OpenW) 279.28 647.02 P
-0.1 (indo) 462.84 647.02 P
-0.1 (ws 3.0 contains) 483.87 647.02 P
0.17 (the Athena W) 221.4 633.02 P
0.17 (idgets library and some b) 287.92 633.02 P
0.17 (ug \336x) 409.69 633.02 P
0.17 (es necessary for Zebra to) 437.35 633.02 P
0.65 (compile with the OpenW) 221.4 619.02 P
0.65 (indo) 343.86 619.02 P
0.65 (ws libraries and w) 364.9 619.02 P
0.65 (ork properly with the) 454.39 619.02 P
(OpenW) 221.4 605.02 T
(indo) 258.24 605.02 T
(ws serv) 279.28 605.02 T
(er) 315.42 605.02 T
(.) 324.08 605.02 T
3 11 Q
(\245) 207 588.02 T
1 12 Q
0.14 (The Zebra softw) 221.4 588.02 P
0.14 (are distrib) 300.87 588.02 P
0.14 (ution no) 349.1 588.02 P
0.14 (w uses the Imak) 388.61 588.02 P
0.14 (e system to con\336g-) 466.58 588.02 P
-0.02 (ure all of the Mak) 221.4 574.02 P
-0.02 (eiles in its directory hierarch) 307.17 574.02 P
-0.02 (y) 444.33 574.02 P
-0.02 (. Zebra\325) 449.55 574.02 P
-0.02 (s mak) 486.85 574.02 P
-0.02 (e\336les are) 515.04 574.02 P
(no) 221.4 560.02 T
(w more \337e) 233.1 560.02 T
(xible and portable to v) 284.24 560.02 T
(arious operating systems.) 391.93 560.02 T
3 11 Q
(\245) 207 543.02 T
1 12 Q
-0.22 (A ne) 221.4 543.02 P
-0.22 (w utility has been added,) 243.88 543.02 P
2 F
-0.52 (dsmanage) 365.44 543.02 P
1 F
-0.22 (, which f) 423.04 543.02 P
-0.22 (acilitates the mo) 464.81 543.02 P
-0.22 (v) 542.86 543.02 P
-0.22 (e-) 548.68 543.02 P
1.61 (ment of data \336les between local disk space and an e) 221.4 529.02 P
1.61 (xternal archi) 485.23 529.02 P
1.61 (v) 546.85 529.02 P
1.61 (e) 552.67 529.02 P
1.17 (medium, such as Exabyte tape or CD-R) 221.4 515.02 P
1.17 (OM. The) 418.23 515.02 P
2 F
2.8 (dsmanage) 467.55 515.02 P
1 F
1.17 ( utility) 525.15 515.02 P
(must be compiled with a C++ compiler) 221.4 501.02 T
(.) 408.94 501.02 T
3 11 Q
(\245) 207 484.02 T
1 12 Q
1.92 (The documentation set has been e) 221.4 484.02 P
1.92 (xpanded. Most note) 393.13 484.02 P
1.92 (w) 491.67 484.02 P
1.92 (orth) 500.21 484.02 P
1.92 (y is the) 519.49 484.02 P
0.65 (Zebra) 221.4 470.02 P
4 F
0.65 ( Advanced User\325) 249.38 470.02 P
0.65 (s Manual) 330.84 470.02 P
1 F
0.65 (, which describes all of the processes) 376.49 470.02 P
1.63 (in the Zebra user interf) 221.4 456.02 P
1.63 (ace and pro) 337.79 456.02 P
1.63 (vides details on the operation of) 396.18 456.02 P
(each one.) 221.4 442.02 T
3 11 Q
(\245) 207 425.02 T
1 12 Q
-0.03 (Graphics displays ha) 221.4 425.02 P
-0.03 (v) 321.09 425.02 P
-0.03 (e a po) 326.91 425.02 P
-0.03 (werful ne) 355.2 425.02 P
-0.03 (w channel for user control called) 400.52 425.02 P
4 F
0.43 (active ar) 221.4 411.02 P
0.43 (eas) 263.71 411.02 P
1 F
0.43 (. F) 279.7 411.02 P
0.43 (or e) 292.62 411.02 P
0.43 (xample, acti) 311.19 411.02 P
0.43 (v) 369.97 411.02 P
0.43 (e areas allo) 375.79 411.02 P
0.43 (w platforms to be selected) 430.32 411.02 P
0.26 (and con\336gured by clicking the mouse on the platform\325) 221.4 397.02 P
0.26 (s location sym-) 484.14 397.02 P
(bol in a constant-altitude plot.) 221.4 383.02 T
3 11 Q
(\245) 207 366.02 T
1 12 Q
(V) 221.4 366.02 T
(ertical cross-sections can no) 228.73 366.02 T
(w plot winds o) 363.4 366.02 T
(v) 434.22 366.02 T
(erlays.) 440.04 366.02 T
3 11 Q
(\245) 207 349.02 T
1 12 Q
0.95 (Contours and color) 221.4 349.02 P
0.95 (-coded aircraft tracks can be automatically scaled) 315.05 349.02 P
(when desired.) 221.4 335.02 T
3 11 Q
(\245) 207 318.02 T
1 12 Q
-0.25 (Lastly) 221.4 318.02 P
-0.25 (, of course, there ha) 250.62 318.02 P
-0.25 (v) 344.03 318.02 P
-0.25 (e been the requisite numerous b) 349.85 318.02 P
-0.25 (ug \336x) 500.68 318.02 P
-0.25 (es and) 527.92 318.02 P
(performance enhancements.) 221.4 304.02 T
0.31 (There has also been a signi\336cant change to the application programming) 207 278.02 P
0.24 (interf) 207 264.02 P
0.24 (ace. The DataStore no) 232.87 264.02 P
0.24 (w uses a more encapsulated and modularized) 339.93 264.02 P
2.48 (data structure, called the DataChunk, for passing v) 207 250.02 P
2.48 (arious classes and) 467.05 250.02 P
0.43 (or) 207 236.02 P
0.43 (g) 216.78 236.02 P
0.43 (anizations of data. DataChunks support all of the data originally sup-) 222.72 236.02 P
0.36 (ported by data objects, as well as \336eld data of types other than \337oat, and) 207 222.02 P
(v) 207 208.02 T
(arious le) 212.7 208.02 T
(v) 253.39 208.02 T
(els of attrib) 259.21 208.02 T
(utes.) 313.63 208.02 T
-0.25 (The most recent non-source release of Zebra is the StormFEST CD-R) 207 182.02 P
-0.25 (OM) 538.67 182.02 P
1.05 (three-v) 207 168.02 P
1.05 (olume set. The CD-R) 240.74 168.02 P
1.05 (OM set includes e) 346.09 168.02 P
1.05 (x) 436.06 168.02 P
1.05 (ecutables for Zebra and) 441.88 168.02 P
0.66 (WINDS, a full Zebra con\336guration for StormFEST) 207 154.02 P
0.66 (, and data for dozens) 455.72 154.02 P
-0.13 (of platforms for each of the Intensi) 207 140.02 P
-0.13 (v) 373.22 140.02 P
-0.13 (e Observing Periods. F) 379.04 140.02 P
-0.13 (or information) 488.47 140.02 P
0.1 (about acquiring the CD-R) 207 126.02 P
0.1 (OM set, contact one of the persons listed in the) 331.14 126.02 P
(\322Whom to Contact\323 section of the) 207 112.02 T
4 F
(Installation Manual) 373.64 112.02 T
1 F
(.) 469.32 112.02 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "7" 7
%%Page: "8" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
0 10 Q
(8) 54 60.29 T
0 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
54 671.02 540 674.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 672.52 540 672.52 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
54 672.52 180 672.52 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 0 0 1 0 0 0 K
(4.) 169.99 678.02 T
(Suppor) 189 678.02 T
(ted systems) 231.24 678.02 T
1 F
1.34 (The Zebra system is supported on Sun systems under both Solaris and) 189 653.02 P
0.56 (SunOS, HP 700-series systems, Silicon Graphics systems under IRIX 5,) 189 639.02 P
1.38 (and Intel-based systems running the Linux operating system. Since we) 189 625.02 P
-0.04 (are unable to k) 189 611.02 P
-0.04 (eep numerous systems around with dif) 259.75 611.02 P
-0.04 (ferent hardw) 444.24 611.02 P
-0.04 (are and) 505.06 611.02 P
2.15 (softw) 189 597.02 P
2.15 (are con\336gurations, support tends to be limited to a small subset) 215.54 597.02 P
-0.26 (thereof. The follo) 189 583.02 P
-0.26 (wing sections gi) 272.48 583.02 P
-0.26 (v) 349.66 583.02 P
-0.26 (e details of the port to each system and) 355.48 583.02 P
0.51 (hints, when necessary) 189 569.02 P
0.51 (, for b) 294.21 569.02 P
0.51 (uilding and running Zebra on those systems.) 323.97 569.02 P
0.73 (The instructions in the) 189 555.02 P
4 F
0.73 (Installation Manual) 302.57 555.02 P
1 F
0.73 ( and the machine notes in its) 398.98 555.02 P
(appendix contain more information.) 189 541.02 T
0 F
(4.1) 163.32 509.02 T
(SunOS) 189 509.02 T
1 F
0.38 (Much of the de) 189 491.02 P
0.38 (v) 262.82 491.02 P
0.38 (elopment for Zebra is done under SunOS 4.1.3, so there) 268.64 491.02 P
2.24 (should not be much in the w) 189 477.02 P
2.24 (ay of port-related dif) 338.35 477.02 P
2.24 (\336culties. Supported) 444.42 477.02 P
0.32 (compilers are) 189 463.02 P
2 F
0.76 (gcc) 257.62 463.02 P
1 F
0.32 (, the b) 279.22 463.02 P
0.32 (undled Sun compiler \050) 309.28 463.02 P
2 F
0.76 (cc) 417.22 463.02 P
1 F
0.32 (\051 and Sun\325) 431.62 463.02 P
0.32 (s unb) 481.59 463.02 P
0.32 (undled) 507.34 463.02 P
0.04 (ANSI compiler \050) 189 449.02 P
2 F
0.09 (acc) 269.73 449.02 P
1 F
0.04 (\051. The) 291.33 449.02 P
2 F
0.09 (dsmanage) 323.06 449.02 P
1 F
0.04 ( utility will not b) 380.66 449.02 P
0.04 (uild under Sun\325) 461.25 449.02 P
0.04 (s) 535.33 449.02 P
-0.14 (C++ compiler at this time. MIT X11R5, MIT X11R6, and OpenW) 189 435.02 P
-0.14 (indo) 505.63 435.02 P
-0.14 (ws) 526.67 435.02 P
0.56 (3 are supported. No attempt has been made to compile Zebra under ear-) 189 421.02 P
0.97 (lier v) 189 407.02 P
0.97 (ersions of SunOS for a long time, b) 214.79 407.02 P
0.97 (ut an) 391.34 407.02 P
0.97 (y system after 4.1 should) 415.79 407.02 P
(w) 189 393.02 T
(ork.) 197.54 393.02 T
0 F
(4.2) 163.32 361.02 T
(Solaris) 189 361.02 T
1 F
0.11 (Zebra b) 189 343.02 P
0.11 (uilds and runs under Solaris v) 225.85 343.02 P
0.11 (ersions 2.2 through 2.4. Either) 369.2 343.02 P
2 F
0.26 (gcc) 518.4 343.02 P
1 F
0.93 (or Sun\325) 189 329.02 P
0.93 (s unb) 224.93 329.02 P
0.93 (undled compiler may be used, though) 251.29 329.02 P
2 F
2.23 (dsmanage) 440.53 329.02 P
1 F
0.93 ( will not) 498.13 329.02 P
1.88 (b) 189 315.02 P
1.88 (uild under Sun\325) 194.76 315.02 P
1.88 (s) 272.52 315.02 P
2 F
4.5 (C++) 282.06 315.02 P
1 F
1.88 ( compiler) 303.66 315.02 P
1.88 (. Open W) 350.54 315.02 P
1.88 (indo) 400.13 315.02 P
1.88 (ws 3, MIT X11R5, and) 421.17 315.02 P
(MIT X11R6 are all supported.) 189 301.02 T
(Some hints for b) 189 275.02 T
(uilding under Solaris:) 268.43 275.02 T
3 11 Q
(\245) 189 255.02 T
1 12 Q
0.95 (When using) 203.4 255.02 P
2 F
2.28 (cc) 265.96 255.02 P
1 F
0.95 (, be sure that the unb) 280.36 255.02 P
0.95 (undled compiler directory \050usu-) 384.85 255.02 P
4.78 (ally something lik) 203.4 241.02 P
4.78 (e) 299.51 241.02 P
2 F
11.46 (/opt/SUNWspro/SC2.0.1) 312.61 241.02 P
1 F
4.78 (\051 precedes the) 463.81 241.02 P
3.86 (directory) 203.4 227.02 P
2 F
9.27 (/usr/ucb) 253.58 227.02 P
1 F
3.86 ( in your) 311.18 227.02 P
2 F
9.27 (PATH) 363.09 227.02 P
1 F
3.86 (. Using) 391.89 227.02 P
2 F
9.27 (/usr/ucb/cc) 437.28 227.02 P
1 F
3.86 ( can) 516.48 227.02 P
(cause strange compile and link problems.) 203.4 213.02 T
3 11 Q
(\245) 189 196.02 T
1 12 Q
5.2 (Be sure to put) 203.4 196.02 P
2 F
12.48 (BOOTSTRAPCFLAGS=-DSVR4) 294.2 196.02 P
1 F
5.2 ( on your) 452.6 196.02 P
2 F
12.48 (make) 511.2 196.02 P
2.72 (World) 203.4 182.02 P
1 F
1.13 ( command or Zebra will not b) 239.4 182.02 P
1.13 (uild properly) 389.28 182.02 P
1.13 (.) 451.96 182.02 P
5 F
1.13 (Note) 459.1 182.02 P
1 F
1.13 ( the change) 483.08 182.02 P
(from pre) 203.4 168.02 T
(vious v) 244.75 168.02 T
(ersions, which required) 279.58 168.02 T
2 F
(-Dsolaris) 394.88 168.02 T
1 F
( instead.) 459.68 168.02 T
3 11 Q
(\245) 189 151.02 T
1 12 Q
2.92 (The Sun C compiler generates unbelie) 203.4 151.02 P
2.92 (v) 401.35 151.02 P
2.92 (able numbers of w) 407.05 151.02 P
2.92 (arnings) 504.67 151.02 P
0.77 (while compiling Zebra, man) 203.4 137.02 P
0.77 (y of which are incomprehensible. Ignore) 341.52 137.02 P
0.88 (them. In v) 203.4 123.02 P
0.88 (ersion 4.2, these w) 253.98 123.02 P
0.88 (arnings ha) 346.17 123.02 P
0.88 (v) 396.47 123.02 P
0.88 (e been much reduced, if not) 402.29 123.02 P
(completely eliminated.) 203.4 109.02 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "8" 8
%%Page: "9" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 9 Q
(Suppor) 207 736.18 T
(ted systems) 238.68 736.18 T
72 726.98 558 726.98 2 L
0.25 H
N
72 74.02 558 74.02 2 L
2 Z
N
0 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
0 10 Q
-2.78 (9) 552.44 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 11 Q
(\245) 207 678.02 T
1 12 Q
2.27 (If you are b) 221.4 678.02 P
2.27 (uilding under MIT X, and your X libraries are not in) 283.63 678.02 P
2 F
-0.55 (/usr/lib) 221.4 664.02 P
1 F
-0.23 (, then the Imak) 279 664.02 P
-0.23 (e con\336guration will automatically include a) 350.17 664.02 P
0.48 (-) 221.4 650.02 P
0.48 (R) 225.4 650.02 P
4 F
0.48 (runpath) 236.88 650.02 P
1 F
0.48 ( link option on the compiler command line. The -R option) 274.88 650.02 P
1.64 (causes the gi) 221.4 636.02 P
1.64 (v) 285.7 636.02 P
1.64 (en) 291.52 636.02 P
4 F
1.64 (runpath) 307.48 636.02 P
1 F
1.64 ( to be inserted into the binaries you b) 345.48 636.02 P
1.64 (uild,) 536.33 636.02 P
1.65 (a) 221.4 622.02 P
1.65 (v) 226.49 622.02 P
1.65 (oiding a whole series of \322library not found\323 problems when pro-) 232.25 622.02 P
0.98 (grams are e) 221.4 608.02 P
0.98 (x) 278.48 608.02 P
0.98 (ecuted later) 284.3 608.02 P
0.98 (. If you see such errors, the -) 340.26 608.02 P
0.98 (R option is not) 484.05 608.02 P
2.04 (being passed or is being speci\336ed incorrectly) 221.4 594.02 P
2.04 (. If the -) 448.79 594.02 P
2.04 (R \337ag is not) 493.55 594.02 P
6.14 (present on the command line, then the en) 221.4 580.02 P
6.14 (vironment v) 461.18 580.02 P
6.14 (ariable) 525.35 580.02 P
2 F
8.65 (LD_RUN_PATH) 221.4 566.02 P
1 F
3.61 ( tak) 300.6 566.02 P
3.61 (es ef) 321.75 566.02 P
3.61 (fect. If necessary) 347.38 566.02 P
3.61 (, you can e) 435.43 566.02 P
3.61 (xplicitly set) 498.05 566.02 P
1.13 (LD_R) 221.4 552.02 P
1.13 (UN_P) 250.92 552.02 P
1.13 (A) 279.82 552.02 P
1.13 (TH to point to the directory containing the X libraries,) 287.15 552.02 P
(b) 221.4 538.02 T
(ut -) 227.16 538.02 T
(R tak) 243.49 538.02 T
(es precedence when present.) 269.04 538.02 T
3.04 (Solaris places some pretty strict limits on shared memory usage by) 207 512.02 P
1.39 (def) 207 498.02 P
1.39 (ault. Since Zebra mak) 222.2 498.02 P
1.39 (es hea) 331.57 498.02 P
1.39 (vy use of shared memory \321 especially) 362.37 498.02 P
0.39 (when mo) 207 484.02 P
0.39 (vies are being run \321 it is easy to run afoul of those limits. The) 251.54 484.02 P
0.24 (symptom is windo) 207 470.02 P
0.24 (ws that die and refuse to come back, especially imme-) 295.87 470.02 P
(diately after display con\336guration changes.) 207 456.02 T
0.94 (The solution is to raise the shared memory limits. T) 207 430.02 P
0.94 (o do this, you must) 462.54 430.02 P
(\050as superuser\051 edit the \336le) 207 416.02 T
2 F
(/etc/system) 333.97 416.02 T
1 F
(, adding the follo) 413.17 416.02 T
(wing lines:) 494.87 416.02 T
2 F
(set shmsys:shminfo_shmmax=1024000) 230.4 396.02 T
(set shmsys:shminfo_shmseg=32) 230.4 382.02 T
1 F
(The system must be rebooted for the change to tak) 207 356.02 T
(e ef) 449.17 356.02 T
(fect.) 466.52 356.02 T
0 F
(4.3) 181.32 324.02 T
(HP-UX) 207 324.02 T
1 F
1.03 (Zebra has been ported to an HP 715/33 running HP-) 207 306.02 P
1.03 (UX 9.01. Both the) 466.58 306.02 P
0.89 (system C compiler and) 207 292.02 P
2 F
2.13 (gcc) 323.88 292.02 P
1 F
0.89 ( are supported; the HP compiler should not) 345.48 292.02 P
0.34 (be used in the ANSI mode, ho) 207 278.02 P
0.34 (we) 353.74 278.02 P
0.34 (v) 367.43 278.02 P
0.34 (er) 373.25 278.02 P
0.34 (. HP\325) 381.91 278.02 P
0.34 (s windo) 406.93 278.02 P
0.34 (w system does not sup-) 444.64 278.02 P
-0.2 (port the MIT Athena W) 207 264.02 P
-0.2 (idget set \050) 319.7 264.02 P
2 F
-0.48 (Xaw) 366.63 264.02 P
1 F
-0.2 (\051, which is a required component of) 388.23 264.02 P
0.33 (Zebra\325) 207 250.02 P
0.33 (s user interf) 238.32 250.02 P
0.33 (ace. The) 295.52 250.02 P
0.33 (y do pro) 336.31 250.02 P
0.33 (vide) 376.79 250.02 P
2 F
0.8 (Xaw) 400.79 250.02 P
1 F
0.33 ( on the contrib) 422.39 250.02 P
0.33 (uted softw) 492.81 250.02 P
0.33 (are) 543.35 250.02 P
(CD-) 207 236.02 T
(R) 227.66 236.02 T
(OM, ho) 235.19 236.02 T
(we) 272.22 236.02 T
(v) 285.91 236.02 T
(er; see the installation instructions for details.) 291.73 236.02 T
0 F
(4.4) 181.32 204.02 T
(IRIX) 207 204.02 T
1 F
0.21 (As of v) 207 186.02 P
0.21 (ersion 4.1, Zebra runs on a Silicon Graphics Indy system running) 242.57 186.02 P
(Irix v) 207 172.02 T
(ersion 5.) 233.15 172.02 T
0 F
(4.5) 181.32 140.02 T
(Lin) 207 140.02 T
(ux) 224.88 140.02 T
1 F
0.31 (Zebra 4.2 runs under almost an) 207 122.02 P
0.31 (y v) 357.68 122.02 P
0.31 (ersion of linux after 1.1 through 1.2.8,) 372.82 122.02 P
0.57 (b) 207 108.02 P
0.57 (uilding with) 212.76 108.02 P
2 F
1.36 (gcc) 275.24 108.02 P
1 F
0.57 ( and the \050beta\051 GNU F) 296.84 108.02 P
0.57 (ortran compiler) 407.14 108.02 P
2 F
1.36 (g77) 485.6 108.02 P
1 F
0.57 (. This port) 507.2 108.02 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "9" 9
%%Page: "10" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
0 10 Q
(10) 54 60.29 T
0 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
1.42 (should be considered to be a beta-test v) 189 678.02 P
1.42 (ersion. Some things to k) 387.7 678.02 P
1.42 (eep in) 509.59 678.02 P
(mind with this port:) 189 664.02 T
3 11 Q
(\245) 189 644.02 T
1 12 Q
0.02 (Ingest modules ha) 203.4 644.02 P
0.02 (v) 290.53 644.02 P
0.02 (e not been tested at all, and should not be e) 296.35 644.02 P
0.02 (xpected) 502.68 644.02 P
(to w) 203.4 630.02 T
(ork.) 224.28 630.02 T
3 11 Q
(\245) 189 613.02 T
1 12 Q
1.29 (The GRIB \336le format is not currently supported. NetCDF) 203.4 613.02 P
1.29 (, GRADS,) 489.05 613.02 P
0.62 (and the raster format w) 203.4 599.02 P
0.62 (ork normally) 317.05 599.02 P
0.62 (. The) 379.22 599.02 P
0.62 (Zebra nati) 408.11 599.02 P
0.62 (v) 457.42 599.02 P
0.62 (e format w) 463.24 599.02 P
0.62 (orks,) 516.34 599.02 P
(b) 203.4 585.02 T
(ut \336les are not interchang) 209.16 585.02 T
(able with big-endian systems.) 331.08 585.02 T
3 11 Q
(\245) 189 568.02 T
1 12 Q
0.71 (Inter) 203.4 568.02 P
0.71 (-host communications will not w) 225.82 568.02 P
0.71 (ork between big-endian and lit-) 386.53 568.02 P
(tle-endian machines.) 203.4 554.02 T
3 11 Q
(\245) 189 537.02 T
1 12 Q
2.01 (Data store cache \336les will not w) 203.4 537.02 P
2.01 (ork between big-endian and little-) 369.32 537.02 P
(endian machines.) 203.4 523.02 T
1.75 (No ports to other Intel-based operating systems are currently planned.) 189 497.02 P
0.31 (Porting to nonmultitasking systems \050i.e. DOS, W) 189 483.02 P
0.31 (indo) 426.06 483.02 P
0.31 (ws\051 is not feasable.) 447.09 483.02 P
0.33 (Ports to other Intel-based Unix systems should be relati) 189 469.02 P
0.33 (v) 457.31 469.02 P
0.33 (ely easy) 463.13 469.02 P
0.33 (, should) 501.67 469.02 P
(somebody wish to undertak) 189 455.02 T
(e them.) 321.2 455.02 T
54 411.02 540 414.02 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
189 412.52 540 412.52 2 L
0.25 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
54 412.52 180 412.52 2 L
0 Z
N
0 0 612 792 C
0 12 Q
0 X
0 0 0 1 0 0 0 K
(5.) 169.99 418.02 T
(Pr) 189 418.02 T
(oject con\336gurations) 201.43 418.02 T
1 F
(V) 189 389.02 T
(ersion 4.2 of Zebra includes con\336gurations for the follo) 196.33 389.02 T
(wing projects:) 462.32 389.02 T
3 11 Q
(\245) 189 369.02 T
1 12 Q
(CaPE, the Cape Electri\336cation and Precipitation Experiment) 203.4 369.02 T
3 11 Q
(\245) 189 352.02 T
1 12 Q
3.05 (StormFEST) 203.4 352.02 P
3.05 (, Storm-scale meteorology) 259.86 352.02 P
3.05 (, Fronts Experiment Systems) 392.17 352.02 P
(T) 203.4 338.02 T
(est) 209.89 338.02 T
3 11 Q
(\245) 189 321.02 T
1 12 Q
3.9 (T) 203.4 321.02 P
3.9 (OGA-CO) 210.52 321.02 P
3.9 (ARE, T) 256.75 321.02 P
3.9 (ropical Ocean Global Atmosphere \321 Coupled) 297.56 321.02 P
(Ocean Atmosphere Research Experiment) 203.4 307.02 T
3 11 Q
(\245) 189 290.02 T
1 12 Q
(TRMM, T) 203.4 290.02 T
(ropical Rainf) 252.98 290.02 T
(all Measurement Mission) 315.85 290.02 T
-0 (All of the con\336guration directories ha) 189 264.02 P
-0 (v) 369.72 264.02 P
-0 (e been modi\336ed to some e) 375.54 264.02 P
-0 (xtent \321) 501 264.02 P
0.65 (some greatly) 189 250.02 P
0.65 (. A brief discussion follo) 250.52 250.02 P
0.65 (ws on the changes to each project.) 371.81 250.02 P
0.06 (Note that there are, to our kno) 189 236.02 P
0.06 (wledge, no incompatible changes to Zebra,) 333.39 236.02 P
1.93 (meaning that an) 189 222.02 P
1.93 (y old sets of project con\336gurations may still be used.) 269.33 222.02 P
0.62 (Man) 189 208.02 P
0.62 (y of the ne) 210.82 208.02 P
0.62 (w features of Zebra will not be a) 263.36 208.02 P
0.62 (v) 423.75 208.02 P
0.62 (ailable when operating) 429.45 208.02 P
(in that mode, ho) 189 194.02 T
(we) 266.7 194.02 T
(v) 280.39 194.02 T
(er) 286.21 194.02 T
(.) 294.88 194.02 T
0 F
(5.1) 163.32 162.02 T
(CaPE con\336gurations) 189 162.02 T
1 F
0.04 (The con\336gurations for CaPE ha) 189 144.02 P
0.04 (v) 340.92 144.02 P
0.04 (e been re) 346.74 144.02 P
0.04 (written almost from the ground) 389.83 144.02 P
1.31 (up and are, as of this writing, still under some construction. All of the) 189 130.02 P
1.1 (v) 189 116.02 P
1.1 (arious real-time oriented display con\336gurations \050\322ops director\323, \322no) 194.7 116.02 P
1.1 (w-) 527.34 116.02 P
-0.19 (caster\323\051 ha) 189 102.02 P
-0.19 (v) 240.2 102.02 P
-0.19 (e been eliminated and replaced with a v) 246.02 102.02 P
-0.19 (ery simple set of sam-) 434.78 102.02 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "10" 10
%%Page: "11" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
72 750.02 558 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
0 9 Q
(Pr) 207 736.18 T
(oject con\336gurations) 216.32 736.18 T
72 726.98 558 726.98 2 L
0.25 H
N
72 74.02 558 74.02 2 L
2 Z
N
0 8 Q
(The z) 207 60.29 T
(ebra installation man) 227.53 60.29 T
(ual) 307.47 60.29 T
0 10 Q
-2.78 (11) 546.88 60.29 P
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
1 12 Q
-0.05 (ple displays. It has gotten easy enough for users to de) 207 678.02 P
-0.05 (v) 462.45 678.02 P
-0.05 (elop and sa) 468.27 678.02 P
-0.05 (v) 521.91 678.02 P
-0.05 (e their) 527.73 678.02 P
0.21 (o) 207 664.02 P
0.21 (wn con\336gurations that we ha) 212.7 664.02 P
0.21 (v) 351.93 664.02 P
0.21 (e not felt the need to create a comprehen-) 357.75 664.02 P
(si) 207 650.02 T
(v) 214.7 650.02 T
(e set of prepackaged displays.) 220.52 650.02 T
0 F
(5.2) 181.32 618.02 T
(ST) 207 618.02 T
(ORM-FEST) 221.86 618.02 T
1 F
1.12 (The ST) 207 600.02 P
1.12 (ORM-FEST con\336gurations ha) 243.57 600.02 P
1.12 (v) 390.92 600.02 P
1.12 (e been augmented to support the) 396.73 600.02 P
(second CDR) 207 586.02 T
(OM set, which features model data.) 267.52 586.02 T
0 F
(5.3) 181.32 554.02 T
(CO) 207 554.02 T
(ARE) 224.4 554.02 T
1 F
1.07 (The CO) 207 536.02 P
1.07 (ARE con\336gurations ha) 245.98 536.02 P
1.07 (v) 357.86 536.02 P
1.07 (e seen e) 363.68 536.02 P
1.07 (xtensi) 403.61 536.02 P
1.07 (v) 431.98 536.02 P
1.07 (e w) 437.8 536.02 P
1.07 (ork in support of the) 455.74 536.02 P
0.8 (CO) 207 522.02 P
0.8 (ARE data w) 223.25 522.02 P
0.8 (orkshop in August, 1994. A lar) 283.39 522.02 P
0.8 (ge set of prede\336ned con-) 436.17 522.02 P
1.78 (\336gurations e) 207 508.02 P
1.78 (xists which may be used with the full CO) 268.27 508.02 P
1.78 (ARE Inte) 480.75 508.02 P
1.78 (grated) 528.01 508.02 P
1.06 (Data Set. A set of demo data which may be used with these con\336gura-) 207 494.02 P
(tions may be found with the Zebra release.) 207 480.02 T
0 F
(5.4) 181.32 448.02 T
(TRMM) 207 448.02 T
1 F
-0.08 (The TRMM project con\336guration w) 207 430.02 P
-0.08 (as put together as a preliminary dem-) 379.86 430.02 P
1.38 (onstration of Zebra\325) 207 416.02 P
1.38 (s capabilities for data intercomparisons for TRMM) 305.08 416.02 P
0.52 (program satellite ground truth. The follo) 207 402.02 P
0.52 (wing datasets are currently sup-) 403.29 402.02 P
(ported:) 207 388.02 T
3 11 Q
(\245) 207 368.02 T
1 12 Q
(gridded Darwin radar) 221.4 368.02 T
3 11 Q
(\245) 207 351.02 T
1 12 Q
(Darwin sounding) 221.4 351.02 T
3 11 Q
(\245) 207 334.02 T
1 12 Q
(raing) 221.4 334.02 T
(auge netw) 246 334.02 T
(ork) 294.86 334.02 T
3 11 Q
(\245) 207 317.02 T
1 12 Q
0.16 (GMS satellite \05010 km resolution for the vicinity of Darwin and 22 km) 221.4 317.02 P
(resolution co) 221.4 303.02 T
(v) 283.55 303.02 T
(ering Australia\051) 289.37 303.02 T
3 11 Q
(\245) 207 286.02 T
1 12 Q
(SSMI satellite) 221.4 286.02 T
3.64 (Three prede\336ned display con\336gurations are included as part of the) 207 260.02 P
(TRMM package:) 207 246.02 T
5 F
1.37 (Cr) 207 220.02 P
1.37 (oss-section:) 220.78 220.02 P
1 F
1.37 (The cross-section display con\336guration is comprised of) 283.8 220.02 P
0.56 (tw) 207 206.02 P
0.56 (o graphics windo) 218.88 206.02 P
0.56 (ws. The upper one is a horizontal display of satellite) 302.35 206.02 P
0.45 (imagery o) 207 192.02 P
0.45 (v) 255.6 192.02 P
0.45 (erlaid with contours of radar data and a map. The lo) 261.42 192.02 P
0.45 (wer win-) 514.57 192.02 P
0.65 (do) 207 178.02 P
0.65 (w displays contours of a v) 218.7 178.02 P
0.65 (ertical cross-section through the radar data.) 347.45 178.02 P
0.74 (The interf) 207 164.02 P
0.74 (ace is set up so the user can dra) 255.27 164.02 P
0.74 (w a line in the upper windo) 411.65 164.02 P
0.74 (w) 547.11 164.02 P
0.74 (,) 555 164.02 P
0.48 (using the middle mouse b) 207 150.02 P
0.48 (utton, which then de\336nes the endpoints for the) 332.01 150.02 P
-0.04 (v) 207 136.02 P
-0.04 (ertical cross-section in the other windo) 212.82 136.02 P
-0.04 (w) 398.64 136.02 P
-0.04 (. In this w) 406.52 136.02 P
-0.04 (ay) 454.3 136.02 P
-0.04 (, it is simple for the) 464.84 136.02 P
(user to quickly and arbitrarily slice through the radar data.) 207 122.02 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "11" 11
%%Page: "12" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
54 750.02 540 750.02 2 L
2 H
0 Z
0 X
0 0 0 1 0 0 0 K
N
54 726.98 540 726.98 2 L
0.25 H
N
54 74.02 540 74.02 2 L
2 Z
N
0 10 Q
(12) 54 60.29 T
0 8 Q
(The z) 189 60.29 T
(ebra installation man) 209.53 60.29 T
(ual) 289.47 60.29 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 12 Q
0.14 (T) 189 678.02 P
0.14 (ime series:) 196.79 678.02 P
1 F
0.14 ( The time series display con\336guration pro) 251.24 678.02 P
0.14 (vides a small win-) 451.91 678.02 P
1.02 (do) 189 664.02 P
1.02 (w sho) 200.7 664.02 P
1.02 (wing raing) 229.75 664.02 P
1.02 (auge station locations and a lar) 282.38 664.02 P
1.02 (ger windo) 435.58 664.02 P
1.02 (w in which) 484.63 664.02 P
0.95 (the user can easily display time series rainf) 189 650.02 P
0.95 (all data from an) 401.83 650.02 P
0.95 (y of the sta-) 480.16 650.02 P
0.8 (tions of the netw) 189 636.02 P
0.8 (ork. The time series windo) 271.6 636.02 P
0.8 (w comes up empty initially;) 402.81 636.02 P
0.21 (stations to be displayed may be chosen from the station location windo) 189 622.02 P
0.21 (w) 531.34 622.02 P
0.94 (by using the left mouse b) 189 608.02 P
0.94 (utton to bring up the menu under each station) 314.47 608.02 P
1.89 (and selecting \322Display in other windo) 189 594.02 P
1.89 (w) 379.78 594.02 P
1.89 (.) 387.67 594.02 P
1.89 (\323 The cross-hair cursor which) 389.83 594.02 P
0.36 (comes up should then be mo) 189 580.02 P
0.36 (v) 327.62 580.02 P
0.36 (ed into the time series windo) 333.44 580.02 P
0.36 (w and the left) 473.27 580.02 P
(mouse b) 189 566.02 T
(utton click) 229.09 566.02 T
(ed to add the chosen station to the display) 279.97 566.02 T
(.) 479.84 566.02 T
5 F
1.26 (Thr) 189 540.02 P
1.26 (ee windo) 208.79 540.02 P
1.26 (w:) 254.93 540.02 P
1 F
1.26 ( The three windo) 267.59 540.02 P
1.26 (w display con\336guration is a combina-) 352.72 540.02 P
0.01 (tion of the other tw) 189 526.02 P
0.01 (o con\336gurations. Three windo) 280.92 526.02 P
0.01 (ws are displayed: a hor-) 425.31 526.02 P
1.71 (izontal display) 189 512.02 P
1.71 (, a v) 260.26 512.02 P
1.71 (ertical cross section, and a time series display) 283.83 512.02 P
1.71 (. The) 513.63 512.02 P
0.26 (endpoints for the v) 189 498.02 P
0.26 (ertical cross section and stations displayed in the time) 279.93 498.02 P
-0.27 (series can be controlled from the horizontal display as in the pre) 189 484.02 P
-0.27 (vious tw) 493.38 484.02 P
-0.27 (o) 534 484.02 P
(con\336gurations.) 189 470.02 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "12" 12
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 12
%%DocumentFonts: Helvetica-Bold
%%+ Times-Roman
%%+ Courier
%%+ Courier-Bold
%%+ Times-Italic
%%+ Times-Bold
%%EOF
