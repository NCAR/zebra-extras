#! /usr/local/bin/perl5
#
# Make target display configs from the given template
# $Id: tmake,v 1.6 2000-06-07 23:04:35 granger Exp $

if ($#ARGV < 2)
{
    print "Usage: $0 <dir> <prefix> <template> <platform> [platform ...]\n";
    print "Puts the generated configs in directory <dir>\n";
    print "If <dir> is not a directory, " .
	"writes all the configs into the file <dir>\n";
    print "Replaces slashes in platform names with _ in config file name\n";
    print "Example: $0 .. '' iss-batch iss1 iss2 iss3\n";
    print "Example: $0 .. 'lineplot-' template iss1 iss2 iss3\n";
    print "Example: $0 .. 'class-' template bel bea alg tim own sud\n";
    exit 1;
}

$debug = 0;
$dir = shift;
$prefix = shift;
$template = shift;
# Add the template string to the replacement regexp before adding the 
# config name prefix
$regexp = '(' . join ('|',@ARGV) . '|' . "$template" . ')';
$template = "$prefix" . "$template" ;
if (! -f "$template.dc" )
{
    print "No such template: $template.dc\n";
    exit 1;
}

print "Replacing $regexp\n" if $debug;

@Warning = 
("! ================",
 "! WARNING: Auto-generated display configuration!",
 "!",
 "! This display was generated from the template $template, and probably",
 "! will be again, so any changes made in this file will be forgotten.",
 "! Permanent changes for all the basic iss configurations should be",
 "! made in $template, then run tmake to re-generate this display config.",
 "! ================");

if (! -d $dir)
{
    print "$dir is not a directory\n" if $debug;
    unlink($dir);
}

foreach $platform (@ARGV)
{

    $target = $prefix . $platform;
    print "$target\n";
    if (-d $dir)
    {
	$dc="$target.dc";
	$dc =~ s,/,_,g;
	$dc="$dir/$dc";
	unlink($dc);
	print "Generating $dc from $template...\n" if $debug;
    }
    else
    {
	print "Appending config to file $dir\n" if $debug;
	$dc = $dir;
    }

    # Warning header:
    open (DC, ">> $dc");
    print DC join("\n",@Warning), "\n";
    open (TMPL, "$template.dc");

    # Substitute for platform names and the config name
    while (<TMPL>)
    {
	if (/parameter.*platform.*/)
	{
	    $_ =~ s/$regexp/$platform/g;
	    #$_ = " parameter platform '$platform'\n";
	}
	if (/description/ || /^config/ || /^beginpd/ || /pd-name/)
	{
	    $_ =~ s/$template/$target/g;
	}
	print DC;
    }
    close TMPL;
    close DC;	    
}


