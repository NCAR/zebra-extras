# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.91 95/01/12 16:15:47 kaleb Exp $

# ----------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $XConsortium: Imake.tmpl,v 1.224 94/12/27 03:57:50 gildea Exp $
#

.SUFFIXES: .i

# $XConsortium: Imake.cf,v 1.19 95/01/05 19:24:32 kaleb Exp $

# -----------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.sample,v 1.9 94/04/08 17:02:06 rws Exp $

# -----------------------------------------------------------------------
# Definitions from config.h included here.  The definitions here override
# the defaults in Project.tmpl.  See ...../zebra/config/project/config.h.
# $Id: Makefile,v 1.1 2000-06-06 22:54:03 granger Exp $
# -----------------------------------------------------------------------

# -----------------------------------------------------------------------
# platform-specific configuration parameters - edit sun.cf to change

# platform:  $XConsortium: sun.cf,v 1.139 95/01/12 15:30:26 kaleb Exp $

# operating system:  SunOS 5.3

# $XConsortium: svr4.cf,v 1.11 95/01/25 16:32:39 kaleb Exp $

# $XConsortium: sv4Lib.rules,v 1.14 94/04/09 12:00:10 rws Exp $

# -----------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.sample,v 1.9 94/04/08 17:02:06 rws Exp $

# -----------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.197 94/12/05 19:30:41 gildea Exp $

          PATHSEP = /
            SHELL = /bin/sh

              TOP = ../../..
      CURRENT_DIR = src/etc/dmlib

            IMAKE = $(IMAKESRC)/imake
           DEPEND = $(DEPENDSRC)/makedepend
        MKDIRHIER = $(SHELL) $(CONFIGSRC)/util/mkdirhier.sh
        CONFIGSRC = $(TOP)/config
         IMAKESRC = $(CONFIGSRC)/imake
        DEPENDSRC = $(CONFIGSRC)/makedepend
           IXXSRC = $(UNSUPPORTEDSRC)/programs/ixx
              IXX = $(IXXSRC)/ixx
         IXXFLAGS = -s BaseObject -m TypeObj -r RequestObj -p Xf
      IXXINCLUDES = -i '<X11/Fresco/enter-scope.h>'

          INCROOT = /usr/include
        USRLIBDIR = /usr/lib
         SHLIBDIR = /usr/lib
       LINTLIBDIR = $(USRLIBDIR)/lint
          MANPATH = /usr/share/man
    MANSOURCEPATH = $(MANPATH)/man
           MANDIR = $(MANSOURCEPATH)1
        LIBMANDIR = $(MANSOURCEPATH)3
       FILEMANDIR = $(MANSOURCEPATH)$(FILEMANSUFFIX)

               AR = /usr/ccs/bin/ar cq
  BOOTSTRAPCFLAGS = -DSVR4
               CC = gcc -fpcc-struct-return
               AS = /usr/ccs/bin/as

.SUFFIXES: .cxx

              CXX = g++
    CXXDEBUGFLAGS = -g
 CXXEXTRA_DEFINES =
CXXEXTRA_INCLUDES =
  CXXIDL_INCLUDES = -I$(TOP)/include
   CXXSTD_DEFINES = -Dsun -DSVR4
       CXXOPTIONS = -O
      CXXINCLUDES = $(INCLUDES) $(TOP_INCLUDES) $(CXXEXTRA_INCLUDES) $(CXXIDL_INCLUDES)
       CXXDEFINES = $(CXXINCLUDES) $(CXXSTD_DEFINES) $(THREADS_CXXDEFINES) $(CXXEXTRA_DEFINES)
         CXXFLAGS = $(CXXDEBUGFLAGS) $(CXXOPTIONS) $(THREADS_CXXFLAGS) $(CXXDEFINES)

         COMPRESS = compress
              CPP = /usr/ccs/lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = gcc -fpcc-struct-return -E $(STD_CPP_DEFINES)
          INSTALL = $(SHELL) $(CONFIGSRC)/util/install.sh
     INSTALLFLAGS = -c
               LD = /usr/ccs/bin/ld
              LEX = /usr/ccs/bin/lex
           LEXLIB = -ll
             YACC = /usr/ccs/bin/yacc
           CCYACC = /usr/ccs/bin/yacc
             LINT = lint
      LINTLIBFLAG = -o
         LINTOPTS = -bh
               LN = ln -s
             MAKE = /usr/ccs/bin/make
               MV = mv
               CP = cp

               RM = rm -f
        MANSUFFIX = 1x
     LIBMANSUFFIX = 3x
    FILEMANSUFFIX = 4
            TROFF = psroff
         MSMACROS = -ms
              TBL = tbl
              EQN = eqn

            DVIPS = dvips
            LATEX = latex

           PROOF = proof
    PROOFOPTIONS =

     STD_INCLUDES =
  STD_CPP_DEFINES = -Dsun -DSVR4
      STD_DEFINES = -Dsun -DSVR4
 EXTRA_LOAD_FLAGS =
  EXTRA_LDOPTIONS =
  EXTRA_LIBRARIES = -lsocket -lnsl
             TAGS = ctags

    SHAREDCODEDEF =
         SHLIBDEF =

     SHLIBLDFLAGS = -G -z text

         PICFLAGS = -Kpic

      CXXPICFLAGS = -K PIC

    PROTO_DEFINES =

     INSTPGMFLAGS =

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4755
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -g sys -m 2755

     TOP_INCLUDES = -I$(TOP)

      CDEBUGFLAGS = -g
        CCOPTIONS = -O

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(THREADS_DEFINES) $(DEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(THREADS_CFLAGS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES) $(DEPEND_DEFINES)
         LDPRELIB = -L$(BUILDLIBDIR)
        LDPOSTLIB =
        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS)  $(EXTRA_LDOPTIONS) $(THREADS_LDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)
     CXXLDOPTIONS = $(CXXDEBUGFLAGS) $(CXXOPTIONS) $(EXTRA_LDOPTIONS) $(THREADS_CXXLDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIB)

           LDLIBS = $(LDPOSTLIB) $(THREADS_LIBS) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

           CCLINK = $(CC)

          CXXLINK = $(CXX)

     LDSTRIPFLAGS = -x
   LDCOMBINEFLAGS = -r
      DEPENDFLAGS =

        MACROFILE = sun.cf
           RM_CMD = $(RM)

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGSRC)/cf
        IMAKE_CMD = $(IMAKE) -I$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Project.tmpl \
			$(IRULESRC)/site.def $(IRULESRC)/$(MACROFILE) \
			 $(EXTRA_ICONFIGFILES)

# -----------------------------------------------------------------------
# Zebra project makefile template
# $Id: Makefile,v 1.1 2000-06-06 22:54:03 granger Exp $
# -----------------------------------------------------------------------

# -----------------------------------------------------------------------
# Zebra make variables; coordinated with config.h and the above defaults
# -----------------------------------------------------------------------

     BUILDINCROOT = $(TOP)/share
      BUILDINCDIR = $(BUILDINCROOT)
      BUILDINCTOP = ..

           BINDIR = /net/rdss/zebra/bin
          INCROOT = /net/rdss/zebra/include
           INCDIR = /net/rdss/zebra/include
           LIBDIR = /net/rdss/zebra/lib
          DESTDIR =
       DISTCURDIR = $(CURRENT_DIR)
      XAPPLOADDIR = $(LIBDIR)/resources
          RDSSDIR = $(LIBDIR)
      OPENWINHOME = /usr/openwin

            IMAKE = $(IMAKESRC)/imake
        MKDIRHIER = /bin/sh $(SCRIPTSRC)/mkdirhier.sh

           DEPEND = makedepend

        CONFIGSRC = $(TOP)/config
    PROJCONFIGDIR = $(LIBDIR)/config/project
          UTILSRC = $(CONFIGSRC)/util
        SCRIPTSRC = $(CONFIGSRC)/util
           DOCSRC = $(TOP)/doc
         IMAKESRC = $(CONFIGSRC)/imake
        DEPENDSRC = $(CONFIGSRC)/makedepend

     AUTO_DEFINES =
       IMAKE_AUTO = $(AUTO_DEFINES) -DAutoDefines='$(AUTO_DEFINES)'
   IMAKE_INCLUDES = -I$(PROJECTSRC) -I$(IRULESRC)
       IMAKE_ARGS = $(IMAKE_INCLUDES) $(IMAKE_DEFINES) $(IMAKE_AUTO)

       PROJECTSRC = $(CONFIGSRC)/project
         IRULESRC = $(CONFIGSRC)/cf
        IMAKE_CMD = $(IMAKE) $(IMAKE_ARGS)

     ICONFIGFILES = $(PROJECTSRC)/Project.tmpl $(PROJECTSRC)/Zebra.rules \
                    $(PROJECTSRC)/config.h $(IRULESRC)/Imake.tmpl \
                    $(PROJECTSRC)/site.def $(IRULESRC)/Imake.rules

    DEPEND_OPTION = -M

        CC_DEPEND = $(CC) $(DEPEND_OPTION)
       CXX_DEPEND = $(CXX) $(DEPEND_OPTION)
           MDFILE = Makefile.dep

   MDFILE_DEPENDS =
           MDMAKE = CC_DEPEND='$(CC_DEPEND)' CXX_DEPEND='$(CXX_DEPEND)' \
                    MDFILE='$(MDFILE)' DEPEND_OPTION='$(DEPEND_OPTION)'

       RDSSINCDIR =
     NETCDFINCDIR = /usr/local/include
    UDUNITSINCDIR = /usr/local/include

       PROJINCDIR = /usr/local/include

        HDFINCDIR = /usr/local/include/hdf

          XINCDIR = /local/X11R6/include

     TOP_INCLUDES = -I$(INCDIR)

     RDSSINCLUDES =
        XINCLUDES = -I$(XINCDIR)
   NETCDFINCLUDES = -I$(NETCDFINCDIR)
  UDUNITSINCLUDES = -I$(UDUNITSINCDIR)

     PROJINCLUDES = -I$(PROJINCDIR)

     PCAPINCLUDES = -I/usr/local/include

      HDFINCLUDES = -I$(HDFINCDIR)

   CONFIGINCLUDES =

   EXTRA_INCLUDES =  $(CONFIGINCLUDES)
CXXEXTRA_INCLUDES =  $(CONFIGINCLUDES)

  ALLINCLUDES = $(TOP_INCLUDES) $(EXTRA_INCLUDES) $(INCLUDES) $(STD_INCLUDES)

    EXTRA_DEFINES =  $(AUTO_DEFINES)
    CXXEXTRA_DEFINES =  $(AUTO_DEFINES)
  RDSS_EXTRA_DEFS =  $(AUTO_DEFINES) -DUNIX
       SHMDEFINES = -DSHM
     XHELPDEFINES =
       HDFDEFINES = -DHDF_INTERFACE

     XWINDOWSFLAG = -DXSUPPORT

       DEFBASEDIR = /net/rdss/zebra
        DEFBINDIR = /net/rdss/zebra/bin
        DEFLIBDIR = /net/rdss/zebra/lib
       DEFDATADIR = /net/rdss/zebra/data

       DEFRDSSDIR = $(LIBDIR)

       DIRDEFINES = '-DBASEDIR="$(DEFBASEDIR)"' '-DBINDIR="$(DEFBINDIR)"' \
                    '-DLIBDIR="$(DEFLIBDIR)"' '-DDATADIR="$(DEFDATADIR)"' \
                    '-DRDSSDIR="$(DEFRDSSDIR)"'

       UIRDSSROOT = $(RDSSDIR)
       UIDEFSFILE = $(UIRDSSROOT)/ui/ui_commands

       RDSSLIBDIR = $(LIBDIR)
     NETCDFLIBDIR = /usr/local/lib
    UDUNITSLIBDIR = /usr/local/lib

       PROJLIBDIR = /usr/local/lib

        HDFLIBDIR = /usr/local/lib

          XLIBDIR = /local/X11R6/lib

         LIBZEBRA =  $(LIBDIR)/libZebra.a
       LIBZEBRADS =  $(LIBDIR)/libZebraDS.a
           LIBZEB = $(LIBZEBRA)
         LIBZEBDS = $(LIBZEBRADS)
        LIBNETCDF = -L$(NETCDFLIBDIR)  -lnetcdf
       LIBUDUNITS = -L$(UDUNITSLIBDIR)  -ludunits

          LIBPROJ = -L$(PROJLIBDIR)  -lproj

           LIBHDF = -L$(HDFLIBDIR)  -ldf

          LIBPCAP = -lpcap
            FLIBS = -L/opt/SUNWspro/SC4.0/lib -lF77 -lV77 -lM77 -lsunmath
          LIBRDSS = $(LIBRDSSUI) $(LIBRDSSUTIL)
        LIBRDSSUI = $(LIBDIR)/librdssui.a
      LIBRDSSUTIL = $(LIBDIR)/librdssutil.a
     LIBRDSSGRAPH = -L$(RDSSLIBDIR)  -lrdssgraph
          LIBSUDS = $(RDSSDIR)/suds/libsuds.a
           LIBUNP =  -lunp
        LIBMCIDAS =  $(LIBDIR)/libmcidas.a
            XLIBS = -R$(XLIBDIR) -L$(XLIBDIR)  -lXaw  -lXmu  -lXt  -lXext  -lX11
          LIBMATH = -lm
          LIBNDBM =
       LIBTERMCAP = -ltermcap
        LIBREGEXP =  -lgen
    SYS_LIBRARIES =

          DEPLIBS = $(LIBZEBRA)
          MATHLIB = $(LIBMATH)
       TERMCAPLIB = $(LIBTERMCAP)

            ZLIBS = $(LIBZEBRA) $(LIBRDSS)
          DFALIBS = $(LIBZEBRADS) $(LIBNETCDF) $(LIBHDF) $(LIBUDUNITS)
           DSLIBS = $(LIBZEBRADS) $(LIBUDUNITS)

         LDPRELIB =
       CCENVSETUP =
      CXXENVSETUP =

      FORTOPTIONS = -O
   FORTDEBUGFLAGS =

           FFLAGS = $(FORTOPTIONS) $(FORTDEBUGFLAGS)
          FCFLAGS = $(FORTOPTIONS) $(FORTDEBUGFLAGS)

              UIC = $(BINDIR)/uic
              UIB = $(BINDIR)/uib
            ARADD = ar ruv
     INSTAPPFLAGS = -m 444

            EMACS = emacs
          EMACS19 = emacs

             RPCG = rpcgen
        RPCGFLAGS = -C

.cc.o:
	$(CXX) $(CXXFLAGS) $(DEFINES) -c $<

.PHONY: all install clean depend dependencies includes World Everything mf

.PHONY: test distclean distfiles distmakefiles Makefile Makefiles

# This variable is hardcoded to TOP/include in Imake.tmpl and inserted
# into CXXFLAGS.  We don't need it, and it could cause confusion,
# so override it.
CXXIDL_INCLUDES =

# -*- C -*-
# $Id: Makefile,v 1.1 2000-06-06 22:54:03 granger Exp $
#
# Rules specific to the Zebra project, including some which override
# definitions in Imake.rules
#

        CONFIGDIR = $(LIBDIR)/config/cf

# -----------------------------------------------------------------------
# start of Imakefile

LFILES = init-config-path theight-add lineplot-add tseries-add \
         makecfgmenu tweak-depth-plat ModelAdd profiler-add \
         xmgr-pipe RadarAdd rass-add zoom theta-add

DISTFILES = $(LFILES) Imakefile

all::

install::
	@if [ -d $(LIBDIR)/dmlib ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(LIBDIR)/dmlib); fi
	@(set -x; for i in $(LFILES); do \
	$(INSTALL) -c $(INSTDATFLAGS) $$i $(LIBDIR)/dmlib ;\
	done)

distfiles:: $(DISTFILES)
	@for f in $(DISTFILES) END; do \
	if [ $$f = "END" ]; then break; fi; \
	echo $(DISTCURDIR)/$$f ; \
	done

# -----------------------------------------------------------------------
# common rules for all Makefiles - do not edit

.c.i:
	$(RM) $@
	$(CC) -E $(CFLAGS) $(_NOOP_) $*.c > $@

emptyrule::

clean::
	$(RM_CMD) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut  "#"*

clean clean.tc::
	$(RM) -r TC.Cache

Makefile:: $(IMAKE)

$(IMAKE):
	-@(cd $(IMAKESRC); if [ -f Makefile ]; then \
	echo "checking $@ in $(IMAKESRC) first..."; $(MAKE) all; else \
	echo "bootstrapping $@ from Makefile.ini in $(IMAKESRC) first..."; \
	$(MAKE) -f Makefile.ini BOOTSTRAPCFLAGS="$(BOOTSTRAPCFLAGS)"; fi; \
	echo "okay, continuing in $(CURRENT_DIR)")

Makefile::
	-@if [ -f Makefile ]; then set -x; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

mf:: Makefile
	$(MAKE) $(MFLAGS) MAKE=$(MAKE) depend

distfiles::

distmakefiles::

distclean::
	@$(MAKE) $(MFLAGS) MAKE=$(MAKE) clean SUBDIRS=

depend::

test::

install.lib::

debug_src:: $(SRCS)
	# load $(ALLDEFINES) $(SRCS)

debug_obj:: $(OBJS)
	# load $(ALLDEFINES) $(OBJS)

# -----------------------------------------------------------------------
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

install.linkkit::
	@echo "install.linkkit in $(CURRENT_DIR) done"

Makefiles::

includes::

depend::

# -----------------------------------------------------------------------
# dependencies generated by makedepend

