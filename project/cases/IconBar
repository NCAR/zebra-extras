! $Id: IconBar,v 1.3 1999-03-25 22:47:29 burghart Exp $
!
! Generic IconBar template
!

set ui$bitmap_directory concat(c$libdir, "/icons")

!
! This is the iconbar menu itself.....
!
define widget iconbar menubar " "
	noheader
	!
	! Define the menus
	!
	menu help bitmap iconbar-help
		title 'Zeb Help Access'
		line
		entry 'Introduction' 'help intro'
		entry 'On-line topics' 'help index'
		entry 'Starting Zebra' 'help start'
		entry 'Shutting down' 'help shut-down'
		entry 'Keys and mouse buttons' 'help keys'
		entry 'The icon bar' 'help iconbar'
		entry 'Editing display configurations' 'help editing-configs'
		line
		entry 'Horizontal plots' 'help horizontal-plots'
		entry 'Skew-t plots' 'help skewt'
		entry 'XYGraph plots' 'help xy-graphs'
		entry 'Cross-section plots' 'help cross-section'
	endmenu
	menu tools bitmap tools-big
		title 'Tools'
		line
		entry 'Time widget'	'popup time'
		entry 'Make a print' 'popup hardcopy'
		entry 'Event logger' 'shell "EventLogger -w &"'
		entry 'Log notices' 'shell "dsnotice -log -all &"'
		line
		entry 'Add display window' 'popup newwindow'
		entry 'Delete display window' 'popup zorchwindow'
		entry 'Save current configuration' 'popup saveconfig'
		line
		entry 'Data store contents' 'shell "dsdwidget &"'
		entry 'Data store management' 'shell "dsmanage &"'
		entry 'Archiver' 'shell "./Archiver"'
		line
		entry 'Create custom precip accumulation' 'shell "custom &"'
		line
		entry 'Chase van location' 'putc2 p_loc platform chasevan icon tinycircle'
		entry 'Enter chase van location' 'popup enter'
		line
		entry ' ' 'beep'
		line
		entry 'Shut down Zebra' 'shutdown'
	endmenu
!
! The project display configurations are added in this menu
!
	menu configs bitmap configs
		title 'Display configurations'
		line
		entry 'Single-window basic radar' 'display radaronly' \
			(dm$config = 'radaronly')
		entry 'Four precip windows' 'display megaprecip' \
			(dm$config = 'megaprecip')
		entry 'Two radar windows + precip' 'display radar2win' \
			(dm$config = 'radar2win')
		entry 'Jim Wilson: Radar + 4' 'display jim2' \
			(dm$config = 'jim2')
		line
		entry 'Empty screen' 'display empty' (dm$config = 'empty')
	endmenu
!
! Radar products.
!
	menu radar bitmap radar
		title 'Radar data'
		line
		entry 'S-Pol raster imagery' 'putc1 p_radar platform spol'
	endmenu
!
! Precip
!
	menu precip bitmap iss-rain
	     	title 'Accumulated precipitation products'
		line
		entry 'KDP precipitation' 'putc1 c_precip field kac'
		entry 'Z-r precipitation' 'putc1 c_precip field zac'
		entry 'ZDR precipitation' 'putc1 c_precip field dac'
		entry 'Hybrid precipitation' 'putc1 c_precip field hac'
		line
		entry 'KDP precipitation contours' \
			'putc1 c_precipcont field kac'
		entry 'Z-r precipitation contours' \
			'putc1 c_precipcont field zac'
		entry 'ZDR precipitation contours' \
			 'putc1 c_precipcont field dac'
		entry 'Hybrid precipitation contours' \
			'putc1 c_precipcont field hac'
	endmenu
!
! Maps, locations and other informational overlays
!
	menu 'overlays' bitmap overlays
		title 'Static Overlays'
		line
		entry 'State border map' 'putc2 p_map platform states icon map'
		entry 'County lines map' \
			'putc2 p_map platform counties icon map'
		entry 'Streams and rivers map' \
			'putc3 p_map platform streams icon streams color cyan'
		entry 'Roads and highways map' \
			'putc3 p_map platform road icon roadmap color green'
		entry 'Walnut Creek watershed map' \
			'putc3 p_map platform walnut icon walnut color cyan'
		entry 'Towanda watershed map' \
			'putc3 p_map platform towanda icon towanda color cyan'
		line
		entry 'Radar location' \
			'putc2 p_loc platform spol icon radar-loc'
		entry 'Bistatic locations' \
			'putc2 p_loc platform North,Central,South icon circle'
		entry 'PAM sites' \
			'putc2 p_loc platform pam1,pam2,pam3,pam4,pam5,pam6,pam7,pam8,cu,noaa,arm icon cross'
		entry 'OSU stations' 'putc0 p_osu'
		entry 'Other gauges' 'putc0 p_rgauge'
		entry 'Profiler locations' \
			'putc2 p_loc platform pro_a,pro_b,pro_c icon xmark'
		entry 'Radar range/azimuth rings' \
			'putc2 p_rings platform spol do-labels false'
		line
		entry 'X-Y Grid (km)' \
			'putc3 p_kmgrid x-spacing 100 y-spacing 100 color cyan'
		entry 'Lat/Lon Grid' \
			'putc3 p_llgrid x-spacing 60 y-spacing 60 color cyan'
!		entry 'Window Bounds' put_wbounds p_wbounds
	endmenu


enddef



set SoundingPlatforms 'knorr/class,suroit/class,sounding/lear-ds'

procedure SendLocs
	parameter p_active_loc p_active_loc platform #SoundingPlatforms
	parameter p_active_loc p_active_loc icon sounding-small
	putc2 p_active_loc location-time observation time-label true
	parameter p_active_loc p_active_loc location-time point
endprocedure




!
! Put in window bounds.
!
procedure put_wbounds comp string
!
! Get the window we want to see.
!
	set wbounds_win "none"
	pickwin wbounds_win
	if (wbounds_win = "none")
		beep
		return
	endif
!
! And now the place where it goes.
!
	set target_win "none"
	pickwin target_win
	if (target_win = "none")
		beep
		return
	endif
!
! Fix up the component and ship it over.
!
	parameter #comp #comp platform #wbounds_win
	add #comp #comp #target_win
endprocedure
