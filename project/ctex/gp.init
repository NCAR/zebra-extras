!
! The CTEX graphics process initialization file.
!

!
! Control the spacing of a grid.  Assumes that x and y are equal.
!
define widget grid_spacing intmenu 'grid spacing'
	title 'Cartesian grid parameters'
	line
	entry '15 min. lines' 'GridSpacing "30"' \
		(pd_param (icon_component,"x-spacing","string") = "15")
	entry '30 min. lines' 'GridSpacing "30"' \
		(pd_param (icon_component,"x-spacing","string") = "30")
	entry '1 deg. lines' 'GridSpacing "60"' \
		(pd_param (icon_component,"x-spacing","string") = "60")
	entry '5 deg. lines' 'GridSpacing "300"' \
		(pd_param (icon_component,"x-spacing","string") = "300")
	line
	entry 'Latitude/Longitude grid' 'param #icon_component lat-lon true' \
		(pd_param (icon_component, "lat-lon", "string") = "true")
	entry 'Kilometer grid' 'param #icon_component lat-lon false' \
		(pd_param (icon_component, "lat-lon", "string") = "false")
	line
	submenu 'Change origin (km grid only)' CGridOrigin
	entry 'Solid grid lines' 'ToggleBool "solid"' \
		(pd_param (icon_component, "solid", "string") = "true")
endmenu

!
! Change the origin of a cartesian grid
!
define widget CGridOrigin intmenu 'cart grid origin'
	title 'Cartesian grid origin'
	line
	entry 'ADRAD' 'parameter #icon_component origin adrad'
	entry 'NEXRAD-khou' 'parameter #icon_component origin nexrad-khou'
	entry 'NEXRAD-kmlb' 'parameter #icon_component origin nexrad-kmlb'
endmenu

!
! Tweak grid spacing.  We enforce equal X and Y spacing.
!
procedure GridSpacing spacing string
	parameter #icon_component x-spacing #spacing
	parameter #icon_component y-spacing #spacing
endprocedure

!
! Zoom to to preset x and y ranges.
!
procedure DoZoom xmin string xmax string ymin string ymax string
	parameter global x-min #xmin
	parameter global x-max #xmax
	parameter global y-min #ymin
	parameter global y-max #ymax
endprocedure

!
! Middle icon menu for radar data.
!
define widget radar-middle intmenu 'Radar field menu'
	title 'Radar'
	line
	entry 'Reflectivity' 'param #icon_component field creflectivity' \
		(pd_param(icon_component, "field", "string") = "creflectivity")
	entry 'Velocity' 'param #icon_component field velocity' \
		(pd_param(icon_component, "field", "string") = "velocity")
	entry 'Spectrum Width' 'param #icon_component field swidth' \
		(pd_param(icon_component, "field", "string") = "swidth")
	line
	entry 'Single fixed angle mode' 'ToggleBool every-sweep' \
		(pd_param (icon_component, "every-sweep", "string") = "false")
	line
	entry 'black & white color table'\
		 'param #icon_component color-table 16gray' \
		(pd_param (icon_component,"color-table","string") = "16gray")
	entry 'scook color table' 'param #icon_component color-table scook' \
		(pd_param (icon_component,"color-table","string") = "scook")
	entry 'cook16' 'param #icon_component color-table cook16' \
		(pd_param (icon_component,"color-table","string") = "cook16")
	entry 'cook32' 'param #icon_component color-table cook32' \
		(pd_param (icon_component,"color-table","string") = "cook32")
	entry 'hotcold' 'param #icon_component color-table hotcold' \
		(pd_param (icon_component,"color-table","string") = "hotcold")
	entry 'wild' 'param #icon_component color-table wild' \
		(pd_param (icon_component,"color-table","string") = "wild")
	entry 'wild_new' 'param #icon_component color-table wild_new' \
		(pd_param (icon_component,"color-table","string") = "wild_new")
endmenu

!
! Middle icon menu for goes data.
!
define widget goes-middle intmenu 'GOES field menu'
	title 'GOES'
	line
	entry 'Visible' 'param #icon_component field vis' \
		(pd_param(icon_component, "field", "string") = "vis")
	entry 'Infrared' 'param #icon_component field ir' \
		(pd_param(icon_component, "field", "string") = "ir")
	line
	entry 'black & white color table'\
		 'param #icon_component color-table 16gray' \
		(pd_param (icon_component,"color-table","string") = "16gray")
	entry 'black & white "log" color table'\
		 'param #icon_component color-table newgray' \
		(pd_param ("global","color-table","string") = "newgray")
	entry 'scook color table' 'param #icon_component color-table scook' \
		(pd_param (icon_component,"color-table","string") = "scook")
	entry 'cook16' 'param #icon_component color-table cook16' \
		(pd_param (icon_component,"color-table","string") = "cook16")
	entry 'cook32' 'param #icon_component color-table cook32' \
		(pd_param (icon_component,"color-table","string") = "cook32")
	entry 'hotcold' 'param #icon_component color-table hotcold' \
		(pd_param (icon_component,"color-table","string") = "hotcold")
	entry 'wild' 'param #icon_component color-table wild' \
		(pd_param (icon_component,"color-table","string") = "wild")
	entry 'wild_new' 'param #icon_component color-table wild_new' \
		(pd_param (icon_component,"color-table","string") = "wild_new")
endmenu

!
! Menus for boundaries
!
define widget bdry-right intmenu 'boundary right menu'
	title 'Boundary Options'
	line
	submenu 'Line Width' LineWidth
	submenu 'Labels' LabelOnOff
endmenu

!
! A better boundary control widget.
!
define widget boundary-control intmenu 'stuff'
	title 'Boundary/plan options'
	line
	submenu 'Line Width' LineWidth
	entry 'Label' 'ToggleLabels' \
		(pd_param(icon_component, "label", "string") <> "none")
	line
	entry 'Redraw' 'RedrawBoundary'
endmenu

procedure RedrawBoundary
	local plat concat('l_',pd_param (icon_component, "platform", "string"))
	polyline #plat
endprocedure

define widget labelcontrol intmenu 'tweak labels'
	title 'Location label control'
	line
	entry 'Platform name labels' 'ToggleLabels' \
		(pd_param(icon_component,"label","string") = "platform")
	entry 'Time labels' 'ToggleBool time-label' \
		(pd_param(icon_component,"time-label","string") = "true")
	entry 'Local time' 'ToggleBool local-time' \
		(pd_param(icon_component,"local-time","string") = "true")
	line
	entry 'No update' 'parameter #icon_component trigger "none"'
	entry 'Update Every 1 min' 'parameter #icon_component trigger "1m"' \
		(pd_param(icon_component,"trigger","string") = "1m")
	entry 'Update Every 5 mins' 'parameter #icon_component trigger "5m"' \
		(pd_param(icon_component,"trigger","string") = "5m")
endmenu

!
! Toggle an arbitrary boolean parameter.  This guy expects to be called
! out of a menu, with icon_component set.
!
procedure ToggleBool param string
	local current (pd_param (icon_component, param, "string") = "true")
	if (current)
		parameter #icon_component #param false
	else
		parameter #icon_component #param true
	endif
endprocedure


procedure ToggleLabels
	local enabled (pd_param(icon_component, "label", "string") <> "none")
	if (enabled)
		parameter #icon_component label 'none'
	else
		parameter #icon_component label 'platform'
	endif
endprocedure

!
! Line width menu for maps and such.
!
define widget LineWidth intmenu 'line width'
	title 'Line drawing parameters'
	line
	entry 'Thin lines' 'parameter #icon_component line-width 0'  \
		(pd_param (icon_component, "line-width", "string") = "0" or \
                 pd_param(icon_component,"line-width","string") ="(Undefined)")
	entry 'Thicker lines' 'parameter #icon_component line-width 2' \
		(pd_param (icon_component, "line-width", "string") = "2")
	entry 'Super-thick lines' 'parameter #icon_component line-width 3' \
		(pd_param (icon_component, "line-width", "string") = "3")
endmenu

!
! Degrade levels for wind vectors.
!
define widget degrade intmenu 'degrade levels'
	title 'Degrade Levels'
	line
	entry 'Level 1' 'parameter #icon_component degrade 0'\
		(pd_param (icon_component, "degrade", "string") = "0")
	entry 'Level 2' 'parameter #icon_component degrade 2'\
		(pd_param (icon_component, "degrade", "string") = "2")
	entry 'Level 3' 'parameter #icon_component degrade 3'\
		(pd_param (icon_component, "degrade", "string") = "3")
endmenu

!
! Scales.
!
define widget ScaleMenu intmenu 'scales'
	title 'Scales'
	line
	entry 'Local Scale' 'DoZoom -100 100 -100 100'
	entry 'Mid Scale' 'DoZoom -200 200 -200 200'
	entry 'Regional Scale' 'DoZoom -300 300 -300 300'
endmenu

!
! Turn labels on and off.
!
define widget LabelOnOff intmenu "labels on/off"
	title 'Labels'
	line
	entry 'On' 'turnlabelon' \
		(pd_param(icon_component, "label", "string") <> "none")
	entry 'Off' 'parameter #icon_component label none' \
		(pd_param(icon_component, "label", "string") = "none")
endmenu

procedure turnlabelon
	local worked pd_removeparam(icon_component, "label")
endprocedure

!
! The default left button menu.
!
define widget leftmenu intmenu "leftmenu"
	title 'Overlay Operations'
	line
	entry 'Adjust Limits' 'i_adjust limit-proc'
	entry 'Spatial offset options' 'popup offsets'
	line
	entry 'Raise to top' 'move #icon_component 0'
	entry 'Move to bottom' 'move #icon_component 1'
	entry 'Disable/reenable' 'toggle_bool "disable" "true"'
	entry 'Remove' 'i_remove_component'
endmenu

!
! Commands to be executed out of the DataAvailable menu.  The invocation
! sequence is:
!
!	DAVCommand  platform  time
!
! Where platform and time correspond to the menu entry which was selected.
!
! The default action is to switch to the given platform and time, in 
! history mode.
!

procedure DefaultDataAvail platform string when string
!
! Switch to the given platform; however, let's check to see that we are
! not already on that one -- we can avoid frame cache invalidations that
! way.
!
	if (pd_param (icon_component, "platform", "string") <> platform)
		parameter #icon_component platform #platform
	endif
!
! Now drop into history mode and display this time.
!
	parameter global plot-mode history
	parameter global plot-time #when
endprocedure

!
!The dual-Doppler middle button menu.
!
define widget ddop-middle intmenu 'ddop-middle'
	title 'Dual-Doppler Analysis'
	line
	entry 'Divergence contours' 'fldset "div"'
	entry 'Vertical Velocity contours' 'fldset "w_wind"'
	entry 'Cp4 interpolated reflectivity' 'fldset "ref_cp4"'
	entry 'Cp3 interpolated reflectivity' 'fldset "ref_cp3"'
endmenu

!
! Dual-doppler winds menu.
!
define widget ddop-winds intmenu 'ddop-winds'
	title 'Winds Options'
	line
	submenu 'Line Width' linewidth
	submenu 'Degrade' degrade
endmenu

!
! The Dual Doppler left button menu.
!
define widget ddop-left intmenu 'ddop-left'
	title 'Overlay Operations'
	line
	entry 'Adjust Limits' 'i_adjust limit-proc'
	entry 'Spatial offset options' 'popup offsets'
	line
	entry 'Raise to top' 'move #icon_component 0'
	entry 'Move to bottom' 'move #icon_component 1'
	entry 'Disable/reenable' 'toggle_bool "disable" "true"'
	entry 'Remove' 'i_remove_ddop'
endmenu

procedure i_remove_ddop
	local dm_cmd concat("parameter ", ourname)
	dm concat(concat(dm_cmd, " "), "global radar-space true")
	local dm_cmd concat("remove ",ourname)
	dm concat(concat (dm_cmd, " "), icon_component)
endprocedure

!
! The tseries left button menu.
!
define widget tseries-left intmenu 'TSeries Left'
	title 'Overlay Operations'
	line
	submenu 'Adjust Limits' 'adjust-tseries-limits'
	line
	entry 'Raise to top' 'move #icon_component 0'
	entry 'Move to bottom' 'move #icon_component 1'
	entry 'Remove' 'i_remove_component'
endmenu

!
! The track left button menu.
!
define widget track-left intmenu 'Track Left'
	title 'Overlay Operations'
	line
	submenu 'Adjust Limits' 'adjust-track-limits'
	entry 'Spatial offset options' 'popup offsets'
	line
	entry 'Raise to top' 'move #icon_component 0'
	entry 'Move to bottom' 'move #icon_component 1'
	entry 'Disable/reenable' 'toggle_bool "disable" "true"'
	entry 'Remove' 'i_remove_component'
endmenu

!
! The raster left button menu.
!
define widget raster-left intmenu 'Raster Left'
	title 'Overlay Operations'
	line
	submenu 'Adjust Limits' 'adjust-raster-limits'
	entry 'Spatial offset options' 'popup offsets'
	line
	entry 'Raise to top' 'move #icon_component 0'
	entry 'Move to bottom' 'move #icon_component 1'
	entry 'Disable/reenable' 'toggle_bool "disable" "true"'
	entry 'Remove' 'i_remove_component'
endmenu

!
! The Raster Plot Adjust Limits submenu
!
define widget adjust-raster-limits intmenu 'Adjust Limits'
	title 'Adjust Limits'
	line
	entry 'Center/Step' 'i_adjust centstep-limit-proc'
	entry 'Highlight/Range' 'i_adjust highrange-limit-proc'
endmenu

!
! The Track Adjust Limits submenu
!
define widget adjust-track-limits intmenu 'Adjust Limits'
	title 'Adjust Limits'
	line
	entry 'Time Period' 'i_adjust time-limit-proc'
	entry 'Center/Step' 'i_adjust centstep-limit-proc'
endmenu

!
! The Skewt Adjust Limits submenu
!
define widget adjust-skewt-limits intmenu 'Adjust Limits'
	title 'Adjust Limits'
	line
	entry 'Pressure' 'i_adjust pres-limit-proc'
	entry 'Temperature' 'i_adjust temp-limit-proc'
endmenu

!
! The Skew-t left button menu.
!
define widget skewt-left intmenu 'Skewt left'
	title 'Overlay Operations'
	line
	submenu 'Adjust Limits' 'adjust-skewt-limits'
	line
	entry 'Raise to top' 'move #icon_component 0'
	entry 'Move to bottom' 'move #icon_component 1'
	entry 'Remove' 'i_remove_component'
endmenu

!
! The Time Series Adjust Limits submenu
!
define widget adjust-tseries-limits intmenu 'Adjust Limits'
	title 'Adjust Limits'
	line
	entry 'Time Interval' 'i_adjust time-limit-proc'
	entry 'Left Axis' 'i_adjust left-limit-proc'
	entry 'Right Axis' 'i_adjust right-limit-proc'
	entry 'Number of Steps' 'i_adjust nstep-limit-proc'
	entry 'Data Skip' 'i_adjust dskip-limit-proc'
endmenu

!
! Middle icon button field for aircraft data.
!
define widget aircraft-menu intmenu "Aircraft menu"
	title "Aircraft Color Code Fields"
	line
	entry 'Aircraft altitude' 'fldset "alt"'
	entry 'Potential temperature' 'fldset "pt"'
	entry 'Relative humidity' 'fldset "rh"'
	entry 'Mixing ratio' 'fldset "mr"'
	entry 'Dewpoint temperature' 'fldset "dp"'
endmenu

!
! Middle icon button menu for station plots.
!
define widget meso-winds-mid intmenu 'Field control popup'
	title 'PAM Mesonet Winds Fields'
	line
	entry 'Temperature' 'toggle_quad tdry' \
	   (substring(pd_param(icon_component, "quadrants", "string"),"tdry"))
	entry 'Dewpoint Temperature' 'toggle_quad dp' \
	   (substring(pd_param(icon_component, "quadrants", "string"),"dp"))
	entry 'Relative Humidity' 'toggle_quad rh' \
	   (substring(pd_param(icon_component, "quadrants", "string"),"rh"))
	entry 'Raw Pressure' 'toggle_quad pres' \
	   (substring(pd_param(icon_component, "quadrants", "string"),"pres"))
	entry 'Corrected Pressure' 'toggle_quad cpres0' \
	   (substring(pd_param(icon_component, "quadrants", "string"),"cpres0"))
	entry 'Mixing Ratio' 'toggle_quad mr' \
	   (substring(pd_param(icon_component, "quadrants", "string"),"mr"))
	entry 'Potential Temperature' 'toggle_quad pt' \
	   (substring(pd_param(icon_component, "quadrants", "string"),"pt"))
	entry 'Equivalent Potential Temperature' 'toggle_quad ept' \
	   (substring(pd_param(icon_component, "quadrants", "string"),"ept"))
	entry '15-Minute Rain Accumulation' 'toggle_quad raina15' \
	   (substring(pd_param(icon_component, "quadrants","string"),"raina15"))
	entry '60-Minute Rain Accumulation' 'toggle_quad raina60' \
	   (substring(pd_param(icon_component, "quadrants","string"),"raina60"))
endmenu

!
! Middle icon menu for nowrad data.
!
define widget nowrad-middle intmenu 'NOWRAD field menu'
	title 'NOWRAD'
	line
	entry 'nowrad color table' \
		'param #icon_component color-table nowrad' \
		(pd_param (icon_component,"color-table","string") = "nowrad")
	entry 'black & white color table' \
		'param #icon_component color-table 16gray' \
		(pd_param (icon_component,"color-table","string") = "16gray")
	entry 'scook color table' 'param #icon_component color-table scook' \
		(pd_param (icon_component,"color-table","string") = "scook")
	entry 'cook16' 'param #icon_component color-table cook16' \
		(pd_param (icon_component,"color-table","string") = "cook16")
	entry 'cook32' 'param #icon_component color-table cook32' \
		(pd_param (icon_component,"color-table","string") = "cook32")
	entry 'hotcold' 'param #icon_component color-table hotcold' \
		(pd_param (icon_component,"color-table","string") = "hotcold")
	entry 'wild' 'param #icon_component color-table wild' \
		(pd_param (icon_component,"color-table","string") = "wild")
	entry 'wild_new' 'param #icon_component color-table wild_new' \
		(pd_param (icon_component,"color-table","string") = "wild_new")
endmenu

!
! Toggle the attribute for cp4 radar data.
!
procedure toggle_sur
	if (pd_param ("global", "cp4-filter-attribute", "string") = "sur")
		param global cp4-filter-attribute "radar"
	else
		param global cp4-filter-attribute "sur"
	endif
endprocedure

!
! Left button menu for the global component.
!
define widget global-left intmenu 'Global left menu'
	title 'Global Options'
	line
	entry 'Scale back to big picture' 'DoZoom -3500 1500 -1500 3000'
	submenu 'Adjust Global Limits' 'adjust_global_limits'
	entry 'Enlarge Window' 'dm "zoom #dm$button_window"'
	entry 'Popup Overlay Times Window' 'popup overlay'
	entry 'Popup Movie Controller' 'popup movie'
	entry 'Popup position readout widget' 'popup position'
	submenu 'Movies' movie-control
endmenu

!
! Movie control menu.
!
define widget movie-control intmenu 'movie control'
	title 'Movie Control'
	line
	entry 'Popup Movie Controller' 'popup movie'
	entry 'Run Movie' 'movie run'
	entry 'Stop Movie' 'movie stop'
endmenu

!
! The Global Adjust Limits submenu
!
define widget adjust_global_limits intmenu "Adjust Global Limits"
	entry 'X Limits' 'i_adjust_global x-limit-proc'
	entry 'Y Limits' 'i_adjust_global y-limit-proc'
endmenu

!
! Toggle between ft and km.
!
define widget feet-km intmenu 'feet/km'
	title 'Feet/Kilometers'
	line
	entry 'Ft' 'do-feet-proc true'
	entry 'Km' 'do-feet-proc false'
endmenu

procedure do-feet-proc value string
	parameter #icon_component do-feet #value
endprocedure

!
! Middle button for soundings.
!
define widget skewt-middle intmenu 'sounding middle'
	title 'Available soundings'
	line
	entry 'Byers, 21:30' 'do_sounding byr 870717,21:30'
	line
	entry 'Denver, 21:30' 'do_sounding dvr 870717,21:30'
	entry 'Denver, 21:35' 'do_sounding dvr 870717,21:35'
	entry 'Denver, 22:42' 'do_sounding dvr 870717,22:42'
	line
	entry 'Elizabeth, 21:33' 'do_sounding elz 870717,21:33'
	entry 'Elizabeth, 22:47' 'do_sounding elz 870717,22:47'
	line
	entry 'Golden, 21:30' 'do_sounding gdn 870717,21:30'
	entry 'Golden, 22:44' 'do_sounding gdn 870717,22:44'
	line
	entry 'Hudson, 22:12' 'do_sounding hud 870717,22:12'
	entry 'Hudson, 22:40' 'do_sounding hud 870717,22:40'
	line
	entry 'Mobile 1, 21:32' 'do_sounding mb1 870717,21:32'
	entry 'Mobile 1, 22:38' 'do_sounding mb1 870717,22:38'
	entry 'Mobile 2, 21:32' 'do_sounding mb2 870717,21:32'
	entry 'Mobile 2, 22:36' 'do_sounding mb2 870717,22:36'
	entry 'Mobile 3, 21:30' 'do_sounding mb3 870717,21:30'
endmenu

procedure do_sounding platform string when string
	parameter skewt platform #platform
	parameter global plot-time #when
endprocedure

!
! Adjustments to range rings.
!
define widget rings-menu intmenu 'rings adjustment'
	title 'Range ring parameters'
	line
	entry 'ADRAD Origin' 'parameter #icon_component platform adrad' \
		(pd_param (icon_component, "platform", "string") = 'adrad')
	entry 'NEXRAD-khou Origin' \
		'parameter #icon_component platform nexrad-khou' \
		(pd_param (icon_component, "platform", "string")='nexrad-khou')
	entry 'NEXRAD-kmlb Origin' \
		'parameter #icon_component platform nexrad-kmlb' \
		(pd_param (icon_component, "platform", "string")='nexrad-kmlb')
	line
	entry '10 km rings' 'parameter #icon_component ring-interval 10' \
		(pd_param (icon_component, "ring-interval", "string") = '10')
	entry '20 km rings' 'parameter #icon_component ring-interval 20' \
		(pd_param (icon_component, "ring-interval", "string") = '20')
	entry '30 km rings' 'parameter #icon_component ring-interval 30' \
		(pd_param (icon_component, "ring-interval", "string") = '30')
	entry '40 km rings' 'parameter #icon_component ring-interval 40' \
		(pd_param (icon_component, "ring-interval", "string") = '40')
	line
	entry '10 degree lines' \
		'parameter #icon_component azimuth-interval 10' \
		(pd_param(icon_component, "azimuth-interval", "string") = '10')
	entry '30 degree lines' \
		'parameter #icon_component azimuth-interval 30' \
		(pd_param(icon_component, "azimuth-interval", "string") = '30')
	entry '45 degree lines' \
		'parameter #icon_component azimuth-interval 45' \
		(pd_param(icon_component, "azimuth-interval", "string") = '45')
	entry '90 degree lines' \
		'parameter #icon_component azimuth-interval 90' \
		(pd_param(icon_component, "azimuth-interval", "string") = '90')
	line
	submenu 'Line Width' linewidth
endmenu

!
! Adjustments to VOR rings.
!
define widget vor-rings-menu intmenu 'rings adjustment'
	title 'Range ring parameters'
	line
	entry 'STJ VOR' 'parameter #icon_component platform vor-stj' \
		(pd_param (icon_component, "platform", "string") = 'vor-stj')
	entry 'MKC VOR' 'parameter #icon_component platform vor-mkc' \
		(pd_param (icon_component, "platform", "string") = 'vor-mkc')
	entry 'PWE VOR' 'parameter #icon_component platform vor-pwe' \
		(pd_param (icon_component, "platform", "string") = 'vor-pwe')
	entry 'TOP VOR' 'parameter #icon_component platform vor-top' \
		(pd_param (icon_component, "platform", "string") = 'vor-top')
	entry 'DUC VOR' 'parameter #icon_component platform vor-duc' \
		(pd_param (icon_component, "platform", "string") = 'vor-duc')
	entry 'IRW VOR' 'parameter #icon_component platform vor-irw' \
		(pd_param (icon_component, "platform", "string") = 'vor-irw')
	entry 'HBR VOR' 'parameter #icon_component platform vor-hbr' \
		(pd_param (icon_component, "platform", "string") = 'vor-hbr')
	entry 'IFI VOR' 'parameter #icon_component platform vor-ifi' \
		(pd_param (icon_component, "platform", "string") = 'vor-ifi')
	entry 'IRK VOR' 'parameter #icon_component platform vor-irk' \
		(pd_param (icon_component, "platform", "string") = 'vor-irk')
	entry 'DSM VOR' 'parameter #icon_component platform vor-dsm' \
		(pd_param (icon_component, "platform", "string") = 'vor-dsm')
	entry 'FSM VOR' 'parameter #icon_component platform vor-fsm' \
		(pd_param (icon_component, "platform", "string") = 'vor-fsm')
	entry 'Other VOR (keyboard entry)' 'popup vor-origin'
	line
! Ugly.  But easy.
	entry '5 nm rings' 'parameter #icon_component ring-interval 9.27' \
	  (pd_param (icon_component, "ring-interval", "string") = '9.27')
	entry '10 nm rings' 'parameter #icon_component ring-interval 18.54' \
	  (pd_param (icon_component, "ring-interval", "string") = '18.54')
	entry '20 nm rings' 'parameter #icon_component ring-interval 37.09' \
	  (pd_param (icon_component, "ring-interval", "string") = '37.09')
	entry '30 nm rings' 'parameter #icon_component ring-interval 55.63' \
	  (pd_param (icon_component, "ring-interval", "string") = '55.63')
	line
	entry '10 km rings' 'parameter #icon_component ring-interval 10.0' \
	  (pd_param (icon_component, "ring-interval", "string") = '10.0')
	entry '20 km rings' 'parameter #icon_component ring-interval 20.0' \
	  (pd_param (icon_component, "ring-interval", "string") = '20.0')
	entry '30 km rings' 'parameter #icon_component ring-interval 30.0' \
	  (pd_param (icon_component, "ring-interval", "string") = '30.0')
	entry '40 km rings' 'parameter #icon_component ring-interval 40.0' \
	  (pd_param (icon_component, "ring-interval", "string") = '40.0')
	line
	entry '10 degree lines' \
		'parameter #icon_component azimuth-interval 10' \
		(pd_param(icon_component, "azimuth-interval", "string") = '10')
	entry '30 degree lines' \
		'parameter #icon_component azimuth-interval 30' \
		(pd_param(icon_component, "azimuth-interval", "string") = '30')
	entry '45 degree lines' \
		'parameter #icon_component azimuth-interval 45' \
		(pd_param(icon_component, "azimuth-interval", "string") = '45')
	entry '90 degree lines' \
		'parameter #icon_component azimuth-interval 90' \
		(pd_param(icon_component, "azimuth-interval", "string") = '90')
	line
	submenu 'Line Width' linewidth
endmenu

!
! A form widget for manual VOR entry.
!
define widget vor-origin form 'VOR origin'
	noheader
	popup vor_popup
	label comp 'component'
	label l1 'VOR/DME origin:'
	blank origin 'vor-top' command 'vor_origin_enter' width 100
	newline
	button cancel 'Cancel' color red command 'popdown #ui$form'
	button apply 'Apply' command 'vor_origin_enter'
!	newline
	label gripe ' ' color red width 200
enddef


!
! Initialize a VOR form.
!
procedure vor_popup
	formtext #ui$form comp #icon_component
	formtext #ui$form gripe ' '
endprocedure


procedure vor_origin_enter 
	local comp getftext(ui$form,'comp')
	local origin getftext(ui$form,'origin')
	local loc pd_paramsearch(comp, 'location', origin, "string")
!
! Give them a chance without "vor-"
!
	if (loc = '(Undefined)')
		local origin concat('vor-',origin)
		local loc pd_paramsearch(comp, 'location', origin, "string")
	endif
!
! Make sure we know about this location.
!
	if (loc = '(Undefined)')
		local complaint quote(concat3('Location ',origin,' unknown'))
		formtext #ui$form gripe #complaint
		return
	endif
!
! Looks cool -- let's do it.
!
	parameter #comp 'platform' #origin
	parameter #comp 'icon' 'vor'
	popdown #ui$form
endprocedure


!
! A color menu for components with a simple "color" component.
!
define widget simple-color intmenu 'simple colors'
	title 'Change Color'
	line
	entry 'white' 'do_simple_color white'
	entry 'black' 'do_simple_color black'
	entry 'lavender' 'do_simple_color lavender'
	entry 'blue' 'do_simple_color blue'
	entry 'cyan' 'do_simple_color cyan'
	entry 'green' 'do_simple_color green'
	entry 'khaki' 'do_simple_color khaki'
	entry 'yellow' 'do_simple_color yellow'
	entry 'tan' 'do_simple_color tan'
	entry 'brown' 'do_simple_color brown'
	entry 'orange' 'do_simple_color orange'
	entry 'red' 'do_simple_color red'
	entry 'pink' 'do_simple_color "HotPink"'
	entry 'violet' 'do_simple_color violet'
	submenu 'Gray scales' 'simple-gray'
endmenu

define widget simple-gray intmenu 'Grayscale submenu for simple color'
	title 'Gray scale colors'
	line
	entry '10-Percent' 'do_simple_color gray10'
	entry '20-Percent' 'do_simple_color gray20'
	entry '30-Percent' 'do_simple_color gray30'
	entry '40-Percent' 'do_simple_color gray40'
	entry '50-Percent' 'do_simple_color gray50'
	entry '60-Percent' 'do_simple_color gray60'
	entry '70-Percent' 'do_simple_color gray70'
	entry '80-Percent' 'do_simple_color gray80'
	entry '90-Percent' 'do_simple_color gray90'
endmenu


define widget contour-options intmenu 'Contour Options'
	title 'Contour Options'
	line
	submenu 'Contour Color' 'contour-color'
	line
	submenu 'Label Blanking' 'label-blanking'
	line
	submenu	'Line Width' 'linewidth'
	line
	submenu 'Show Annotation' 'annot-onoff'
	line
	submenu 'Annotation Size' 'side-annot-scale'
	line
	submenu 'Annotation Skip' 'annot-skip'
	line
	submenu 'Toggle Platform' 'toggle-meso-platform'
endmenu


define widget meso-winds-options intmenu 'Line Contour Options'
	title 'Winds Options'
	line
	submenu 'Annotation Size' 'side-annot-scale'
	line
	submenu 'Arrow Color' 'simple-color'
	line
	submenu	'Line Width' 'linewidth'
	line
	submenu 'Platform' 'toggle-meso-platform'
endmenu

define widget meso-station-options intmenu 'Line Contour Options'
	title 'Winds Options'
	line
	submenu 'Annotation Size' 'side-annot-scale'
	line
	submenu 'Arrow Color' 'simple-color'
	line
	submenu	'Line Width' 'linewidth'
endmenu

define widget annot-skip intmenu 'Annotation Skipping'
	title 'Annotation Skip'
	line
	entry 'On' 'do_annot_skip 2'  
	entry 'Off' 'do_annot_skip 1'   
endmenu

define widget annot-onoff intmenu 'Annotation On/Off'
	title 'Show Annotation'
	line
	entry 'On' 'do_side_annot_show true' \
		(pd_param (icon_component, "sa-show", "string") = "true")
	entry 'Off' 'do_side_annot_show false' \
		(pd_param (icon_component, "sa-show", "string") = "false")
endmenu

define widget label-blanking intmenu 'Contour Label Blanking'
	title 'Label Blanking'
	line
	entry 'On' 'do_blank_label true' \
		(pd_param (icon_component, "label-blanking", "string") = "true")
	entry 'Off' 'do_blank_label false' \
		(pd_param(icon_component, "label-blanking", "string") = "false")
endmenu

define widget contour-color intmenu 'Contour Color'
	title 'Select Color'
	line
	entry 'white' 'do_contour_color white'
	entry 'black' 'do_contour_color black'
	entry 'gray' 'do_contour_color gray60'
	entry 'lavender' 'do_contour_color lavender'
	entry 'blue' 'do_contour_color blue'
	entry 'cyan' 'do_contour_color cyan'
	entry 'green' 'do_contour_color green'
	entry 'khaki' 'do_contour_color khaki'
	entry 'yellow' 'do_contour_color yellow'
	entry 'tan' 'do_contour_color tan'
	entry 'brown' 'do_contour_color brown'
	entry 'orange' 'do_contour_color orange'
	entry 'red' 'do_contour_color red'
	entry 'pink' 'do_contour_color "HotPink"'
	entry 'violet' 'do_contour_color violet'
	line
	entry 'Multi-Colored Contours ' 'do_mono_color'
endmenu

define widget track-color intmenu 'Track Color'
	title 'Select Color'
	line
	submenu 'Track Color' 'simple-color'
	line
	entry 'Show Plane?' 'toggle_bool "show-position" "true"'
	entry 'Color Code by Altitude' 'toggle_color_code' \
	  (pd_param(icon_component, "field", "string") <> "(Undefined)")
endmenu

define widget quadrant-color intmenu 'Quadrant Color'
	title 'Select Color'
	line
	entry 'white' 'do_quad_color white'
	entry 'black' 'do_quad_color black'
	entry 'gray' 'do_quad_color gray60'
	entry 'lavender' 'do_quad_color lavender'
	entry 'blue' 'do_quad_color blue'
	entry 'cyan' 'do_quad_color cyan'
	entry 'green' 'do_quad_color green'
	entry 'khaki' 'do_quad_color khaki'
	entry 'yellow' 'do_quad_color yellow'
	entry 'tan' 'do_quad_color tan'
	entry 'brown' 'do_quad_color brown'
	entry 'orange' 'do_quad_color orange'
	entry 'red' 'do_quad_color red'
	entry 'pink' 'do_quad_color "HotPink"'
	entry 'violet' 'do_quad_color violet'
endmenu

define widget air-arrow-options intmenu 'Aircraft Arrow Options'
	title 'Aircraft Options'
	line
	submenu 'Arrow Color' 'arrow-color'
	line
	submenu 'Annotation Size' 'side-annot-scale'
	line
	submenu 'Annotation Skip' 'annot-skip'
endmenu

define widget arrow-color intmenu 'Arrow Color'
	title 'Arrow Color'
	line
	entry 'white' 'do_air_color white'
	entry 'black' 'do_air_color black'
	entry 'gray' 'do_air_color gray60'
	entry 'lavender' 'do_air_color lavender'
	entry 'blue' 'do_air_color blue'
	entry 'cyan' 'do_air_color cyan'
	entry 'green' 'do_air_color green'
	entry 'khaki' 'do_air_color khaki'
	entry 'yellow' 'do_air_color yellow'
	entry 'tan' 'do_air_color tan'
	entry 'brown' 'do_air_color brown'
	entry 'orange' 'do_air_color orange'
	entry 'red' 'do_air_color red'
	entry 'pink' 'do_air_color "HotPink"'
	entry 'violet' 'do_air_color violet'
	line
	entry 'No Arrows' 'remove_air_arrows'
endmenu

define widget annot-color intmenu 'Annotation colors'
	title 'Top Annotation'
	line
	submenu 'Color' 'top-annot-color'
	line
	entry 'Small' 'do_annot_size 0.03' \
		(pd_param(icon_component, "ta-scale", "string") = "0.03")
	entry 'Medium' 'do_annot_size 0.035' \
		(pd_param(icon_component, "ta-scale", "string") = "0.035")
	entry 'Large' 'do_annot_size 0.04' \
		(pd_param(icon_component, "ta-scale", "string") = "0.04")
	line
	entry 'Color Match On' 'color_match true'  \
		(pd_param (icon_component, "ta-color-match", "string") = "true")
	entry 'Color Match Off' 'color_match false'  \
		(pd_param(icon_component, "ta-color-match", "string") = "false")
endmenu

define widget top-annot-color intmenu 'Top annotation color'
	title 'Top annotation color'
	line
	entry 'white' 'do_annot_color white'
	entry 'black' 'do_annot_color black'
	entry 'gray' 'do_annot_color gray60'
	entry 'lavender' 'do_air_color lavender'
	entry 'blue' 'do_annot_color blue'
	entry 'cyan' 'do_annot_color cyan'
	entry 'green' 'do_annot_color green'
	entry 'khaki' 'do_annot_color khaki'
	entry 'yellow' 'do_annot_color yellow'
	entry 'tan' 'do_annot_color tan'
	entry 'brown' 'do_annot_color brown'
	entry 'orange' 'do_annot_color orange'
	entry 'red' 'do_annot_color red'
	entry 'pink' 'do_annot_color "HotPink"'
	entry 'violet' 'do_annot_color violet'
endmenu


define widget side-annot-scale intmenu 'Side annotation'
	title 'Annotation Size'
	line
	entry 'Small' 'do_side_annot_size 0.02' \
		(pd_param(icon_component, "sa-scale", "string") = "0.02")
	entry 'Medium' 'do_side_annot_size 0.025' \
		(pd_param(icon_component, "sa-scale", "string") = "0.025")
	entry 'Large' 'do_side_annot_size 0.03' \
		(pd_param(icon_component, "sa-scale", "string") = "0.03")
endmenu

define widget toggle-meso-platform intmenu 'Toggle mesonet platform'
	title 'Mesonet Platform'
	line
	entry 'All PAM stations' 'parameter #icon_component platform mesonet' \
		(pd_param (icon_component, "platform", "string") = "mesonet")
	entry 'PAM PBL stations' 'parameter #icon_component platform pampbl' \
		(pd_param (icon_component, "platform", "string") = "pampbl")
endmenu


procedure do_grid_toggle value string
	parameter #icon_component grid #value
endprocedure

procedure do_blank_label value string
	parameter #icon_component label-blanking #value
endprocedure

procedure color_match value string
	parameter #icon_component ta-color-match #value
endprocedure

procedure do_side_annot_show show string
	parameter #icon_component sa-show #show
endprocedure

procedure do_side_annot_size size string
	parameter #icon_component sa-scale #size
endprocedure

procedure do_annot_skip skip string
	parameter #icon_component ct-limit #skip
endprocedure

procedure do_annot_size size string
	parameter #icon_component ta-scale #size
endprocedure

procedure do_annot_color color string
	parameter #icon_component ta-color #color
endprocedure

procedure do_mono_color
	parameter #icon_component color-mono false
endprocedure

procedure remove_air_arrows
	parameter #icon_component arrow false
endprocedure

procedure do_contour_color color string
	parameter #icon_component color #color
	parameter #icon_component color-mono true
endprocedure

procedure do_air_color color string
	parameter #icon_component arrow-color #color
	parameter #icon_component arrow true
endprocedure

procedure do_simple_color color string
	parameter #icon_component color #color
endprocedure

procedure do_quad_color color string
	parameter #icon_component quad-color #color
endprocedure

procedure toggle_color_code
	if ((pd_param(icon_component, "field", "string")) <> "(Undefined)")
		local worked (pd_removeparam(icon_component, "field"))
		local color (pd_param(icon_component, "color", "string"))
		if (color = "(Undefined)")
			parameter #icon_component color yellow
		else
			parameter #icon_component color #color
		endif
	else
		parameter #icon_component field alt
		parameter #icon_component color-table contour
	endif
endprocedure

procedure fldset name string
	parameter #icon_component field #name
endprocedure


!
! Remove a component.
!
procedure i_remove_component
	local dm_cmd concat("remove ",ourname)
	dm concat(concat (dm_cmd, " "), icon_component)
endprocedure

!
! Toggle the winds overlay.  For now, we have to ask DM to do it for us,
! since we don't have this stuff around.
!
procedure change_winds
	if (pd_defined ("winds-mesonet", "u-field"))
		dm "remove #dm$button_window winds-mesonet"
	else
		dm "add winds winds-mesonet #dm$button_window"
	endif
endprocedure

!
! Similar stuff for the aircraft overlay.
!
procedure change_aircraft
	if (pd_defined ("aircraft", "platform"))
		dm "remove #dm$button_window aircraft"
	else
		dm "add kingair aircraft #dm$button_window"
	endif
endprocedure

!
! Toggle radar or GOES field, if they're there
!
procedure toggle_main
        if (pd_defined ("c_radar", "field"))
		local current (pd_param ("c_radar", "field", "string"))
                if (current = "creflectivity")
                        parameter c_radar field "velocity"
                elseif (current = "velocity")
                        parameter c_radar field "swidth"
		else
                        parameter c_radar field "creflectivity"
                endif
        elseif (pd_defined ("c_goes", "field"))
		local current (pd_param ("c_goes", "field", "string"))
                if (current = "vis")
                        parameter c_goes field "ir"
                else
                        parameter c_goes field "vis"
                endif
        endif
endprocedure

procedure toggle_radar 
	local current (pd_param ("c_radar", "field", "string"))
	if (current = "reflectivity")
		parameter c_radar field "velocity"
	elseif (current = "velocity")
		parameter c_radar field "swidth"
	else
		parameter c_radar field "reflectivity"
	endif
endprocedure

!
! Toggle between satellite and radar or nowrad.
!
procedure toggle_satellite
	local current (pd_param ("c_goes", "disable", "string"))
	if (current = "(Undefined)")
		parameter "c_goes" "disable" "true"
	elseif (current = "true")
		parameter "c_goes" "disable" "false"
	else
		parameter "c_goes" "disable" "true"
	endif
	if (pd_defined ("c_radar", "representation"))
		if (current = "(Undefined)")
			parameter "c_radar" "disable" "false"
		elseif (current = "true")
			parameter "c_radar" "disable" "true"
		else
			parameter "c_radar" "disable" "false"
		endif
	elseif (pd_defined ("c_nowrad", "representation"))
		if (current = "(Undefined)")
			parameter "c_nowrad" "disable" "false"
		elseif (current = "true")
			parameter "c_nowrad" "disable" "true"
		else
			parameter "c_nowrad" "disable" "false"
		endif
	endif
endprocedure

!
! Adjust the limits on the global component.
!
procedure i_adjust_global procparam string
	local proc pd_paramsearch(icon_component,procparam,"global","string")
	if (proc <> "(Undefined)")
		#proc 
	else
		dm "beep"
	endif
endprocedure

!
! Adjust the limits on a component.
!
procedure i_adjust procparam string
	local rep pd_param(icon_component, "representation", "string")
	local proc pd_paramsearch(icon_component, procparam, rep, "string")
	if (proc <> "(Undefined)")
		#proc #icon_component
	else
		dm "beep"
	endif
endprocedure

!
! The pressure minval maxval adjuster.
!
procedure adj_pres_minmax comp string
	local rep pd_param(comp, "representation", "string")
	local minval pd_paramsearch(comp, "pres-minval", rep, "string")
	local maxval pd_paramsearch(comp, "pres-maxval", rep, "string")
	activate doublefloat #comp "pres-minval" "Pressure Minval: " #minval \
		"pres-maxval" "Pressure Maxval: " #maxval
endprocedure

!
! The temperature minval maxval adjuster.
!
procedure adj_temp_minmax comp string
	local rep pd_param(comp, "representation", "string")
	local minval pd_paramsearch(comp, "temp-minval", rep, "string")
	local maxval pd_paramsearch(comp, "temp-maxval", rep, "string")
	activate doublefloat #comp "temp-minval" "Temperature Minval: " \
		#minval "temp-maxval" "Temperature Maxval: " #maxval
endprocedure


!
! The time series left center step adjuster.
!
procedure adj_left_centstep comp string
	activate timeseries #comp "left" "center" "Center: "  "step" "Step: " 
endprocedure

!
! The time series right center step adjuster.
!
procedure adj_right_centstep comp string
	activate timeseries #comp "right" "center" "Center: "  "step" "Step: " 
endprocedure

!
! The time series time interval adjuster.
!
procedure adj_time_int comp string
	local time pd_paramsearch(comp, "time-interval", "tseries", "string")
	activate singlestring #comp "time-interval" "Time Interval: " #time
endprocedure

!
! The lightning location time step adjuster.
!
procedure adj_time_step comp string
	local time pd_paramsearch(comp, "time-step", "lightning", "string")
	activate singlestring #comp "time-step" "Time Step: " #time
endprocedure

!
! The track time period adjuster.
!
procedure adj_time_period comp string
	local time pd_paramsearch(comp, "time-period", "track", "string")
	activate singlestring #comp "time-period" "Time Period: " #time
endprocedure

!
! The time series number of steps adjuster.
!
procedure adj_num_step comp string
	local num pd_paramsearch(comp, "nstep", "tseries", "string")
	activate singleint #comp "nstep" "Number of Steps: " #num
endprocedure

!
! The time series data skip adjuster.
!
procedure adj_data_skip comp string
	local dskip pd_paramsearch(comp, "data-skip", "tseries", "string")
	activate singleint #comp "data-skip" "Data Skip: " #dskip
endprocedure

!
! The highlight range adjuster.
!
procedure adj_highlight_range comp string
	local field pd_param(comp, "field", "string")
	local repr pd_param(comp, "representation", "string")
	local high_param concat(field, "-highlight")
	local highlight pd_paramsearch(comp, high_param, repr, "string")
	local range_param concat(field, "-highlight-range")
	local range pd_paramsearch(comp, range_param, repr, "string")
	activate doublefloat #comp #high_param "Highlight: " #highlight \
		#range_param "Range: " #range
endprocedure

!
! The center step adjuster.
!
procedure adj_center_step comp string
	local field pd_param(comp, "field", "string")
	local repr pd_param(comp, "representation", "string")
	local center_param concat(field, "-center")
	local center pd_paramsearch(comp, center_param, repr, "string")
	local step_param concat(field, "-step")
	local step pd_paramsearch(comp, step_param, repr, "string")
	activate doublefloat #comp #center_param "Center: " #center \
		#step_param "Step: " #step
endprocedure

!
! The x-spacing y-spacing adjuster.
!
procedure adj_xy_spacing comp string
	local x pd_param(comp, "x-spacing", "string")
	local y pd_param(comp, "y-spacing", "string")
	activate doublefloat #comp "x-spacing" "X-Spacing: " #x \
		"y-spacing" "Y-Spacing: " #y
endprocedure

!
! The filled contour center step adjuster.
!
procedure adj_fill_centstep comp string
	local field pd_param(comp, "field", "string")
	local center_param concat(field, "-center")
	local center pd_paramsearch(comp, center_param, "contour", "string")
	local step_param concat(field, "-step")
	local step pd_paramsearch(comp, step_param, "contour", "string")
	activate doublefloat #comp #center_param "Center: " #center \
		#step_param "Step: " #step
endprocedure

!
! The x min max adjuster.
!
procedure adj_x_minmax 
	local xmin pd_paramsearch("global", "x-min", "", "string")
	local xmax pd_paramsearch("global", "x-max", "", "string")
	activate doublefloat "global" "x-min" "X Min: " #xmin \
		"x-max" "X Max: " #xmax
endprocedure

!
! The y min max adjuster.
!
procedure adj_y_minmax 
	local ymin pd_paramsearch("global", "y-min", "", "string")
	local ymax pd_paramsearch("global", "y-max", "", "string")
	activate doublefloat "global" "y-min" "Y Min: " #ymin \
		"y-max" "Y Max: " #ymax
endprocedure

!
! The line contour center step adjuster.
!
procedure adj_line_centstep comp string
	local field pd_param(comp, "field", "string")
	local center_param concat(field, "-center")
	local center pd_paramsearch(comp, center_param, "contour", "string")
	local step_param concat(field, "-step")
	local step pd_paramsearch(comp, step_param, "contour", "string")
	activate doublefloat #comp #center_param "Center: " #center \
		#step_param "Step: " #step
endprocedure

!
! The arrow scale adjuster.
!
procedure adj_arrow_scale comp string
	local current pd_param(icon_component, "arrow-scale", "string")
	activate singlefloat #comp 'arrow-scale' "Arrow Scale: " #current
endprocedure

!
! Time series right button.
!

define widget tseries-right intmenu 'TSeries Right'
	title 'Time Series Options'
	line
	submenu 'Axis Color' 'tseries-color'
	line
	submenu 'Flip Time' 'tseries-flip'
	line
	submenu 'Annotation Size' 'side-annot-scale'
endmenu

define widget tseries-flip intmenu 'TSeries Flip Time'
	title 'Flip Time'
	line
	entry 'On' 'do_flip_time true' \
		(pd_param (icon_component, "flip-time", "string") = "true")
	entry 'Off' 'do_flip_time false' \
		(pd_param (icon_component, "flip-time", "string") = "false")
endmenu

define widget tseries-color intmenu 'TSeries Axis Color'
	title 'Axis Color'
	line
	entry 'white' 'do_axis_color white'
	entry 'black' 'do_axis_color black'
	entry 'lavender' 'do_axis_color lavender'
	entry 'blue' 'do_axis_color blue'
	entry 'cyan' 'do_axis_color cyan'
	entry 'green' 'do_axis_color green'
	entry 'khaki' 'do_axis_color khaki'
	entry 'yellow' 'do_axis_color yellow'
	entry 'tan' 'do_axis_color tan'
	entry 'brown' 'do_axis_color brown'
	entry 'orange' 'do_axis_color orange'
	entry 'red' 'do_axis_color red'
	entry 'pink' 'do_axis_color "HotPink"'
	entry 'violet' 'do_axis_color violet'
endmenu

procedure do_axis_color value string
	parameter #icon_component axis-color #value
endprocedure

procedure do_flip_time value string
	parameter #icon_component flip-time #value
endprocedure

define widget capow-bdry-plat intmenu 'CaPOW Boundary Platforms'
	title 'Select Platforms'
	line
	entry 'Boundaries' 'activate stationwidget #icon_component capow_bdry'
endmenu

define widget capow-core-plat intmenu 'CaPOW Cores Platforms'
	title 'Select Platforms'
	line
	entry 'Cores' 'activate stationwidget #icon_component capow_core'
endmenu

define widget capow-now-plat intmenu 'CaPOW Nowcast Platforms'
	title 'Select Platforms'
	line
	entry 'Nowcasts' 'activate stationwidget #icon_component capow_now'
endmenu


!
! A bunch of stuff for dealing with time series platforms and fields.
!
define widget tseries-middle intmenu 'TSeries Platforms/Fields'
	title 'Time Series Options'
	line
	submenu 'Select Fields' 'tseries-fields'
	line
	submenu 'Select Platforms' 'tseries-plat'
endmenu

define widget tseries-plat intmenu 'TSeries Platforms'
	title 'Select Platforms'
	line
	submenu 'Aircraft' 'tseries-aircraft'
	line
	entry 'Surface' 'tseries-surface'
endmenu

define widget tseries-surface intmenu 'TSeries Surface'
	title 'Select Surface Station'
	line
	entry 'Kapinga' 'toggle_plat kapinga/surface' \
	(substring(pd_param(icon_component,"platform","string"),"kapinga/surface"))
	entry 'Manus' 'toggle_plat kapinga/surface' \
	(substring(pd_param(icon_component,"platform","string"),"manus/surface"))
	entry 'Kavieng' 'toggle_plat kapinga/surface' \
	(substring(pd_param(icon_component,"platform","string"),"kavieng/surface"))
	entry 'Nauru' 'toggle_plat kapinga/surface' \
	(substring(pd_param(icon_component,"platform","string"),"nauru/surface"))
	entry 'Experiment 3' 'toggle_plat kapinga/surface' \
	(substring(pd_param(icon_component,"platform","string"),"exp3/surface"))
	entry 'Science 1' 'toggle_plat kapinga/surface' \
	(substring(pd_param(icon_component,"platform","string"),"sci1/surface"))
endmenu

define widget tseries-aircraft intmenu 'TSeries Aircraft'
	title 'Select Aircraft'
	line
	entry 'N308D' 'toggle_plat n308d_dap' \
	(substring(pd_param(icon_component, "platform", "string"),"n308d_dap"))
	entry 'N42RF' 'toggle_plat n42rf_st' \
	(substring(pd_param(icon_component, "platform", "string"),"n42rf_st"))
	entry 'N43RF' 'toggle_plat n43rf_st' \
	(substring(pd_param(icon_component, "platform", "string"),"n43rf_st"))
endmenu


define widget tseries-fields intmenu 'TSeries Fields'
	title 'Select Fields'
	line
	submenu 'P3 Fields' tseries-p3-fields
	submenu 'Electra Fields' tseries-electra-fields
	submenu 'Surface Fields' tseries-surface-fields
endmenu

define widget tseries-surface-fields intmenu 'TSeries Fields'
	title 'Select Fields'
	line
	entry 'Pressure' 'toggle_field pres' \
	   (substring(pd_param(icon_component, "field", "string"),"pres"))
	entry 'Temperature' 'toggle_field tdry' \
	   (substring(pd_param(icon_component, "field", "string"),"tdry"))
	entry 'Relative Humidity' 'toggle_field rh' \
	   (substring(pd_param(icon_component, "field", "string"),"rh"))
	entry 'Wind Speed' 'toggle_field wspd' \
	   (substring(pd_param(icon_component, "field", "string"),"wspd"))
	entry 'Wind Direction' 'toggle_field wdir' \
	   (substring(pd_param(icon_component, "field", "string"),"wdir"))
	entry 'Total Visible' 'toggle_field sol' \
	   (substring(pd_param(icon_component, "field", "string"),"sol"))
	entry 'Incoming Longwave' 'toggle_field irin' \
	   (substring(pd_param(icon_component, "field", "string"),"irin"))
	entry 'Net Radiation' 'toggle_field netrad' \
	   (substring(pd_param(icon_component, "field", "string"),"netrad"))
	entry 'Rainfall' 'toggle_field rain' \
	   (substring(pd_param(icon_component, "field", "string"),"rain"))
	entry 'Campbell Battery' 'toggle_field batt' \
	   (substring(pd_param(icon_component, "field", "string"),"batt"))
	entry 'Campbell Temperature' 'toggle_field tbox' \
	   (substring(pd_param(icon_component, "field", "string"),"tbox"))
endmenu

define widget tseries-electra-fields intmenu 'TSeries Fields'
	title 'Select Fields'
	line
	entry 'Wind Speed' 'toggle_field WS' \
	   (substring(pd_param(icon_component, "field", "string"),"WS"))
	entry 'Wind Direction' 'toggle_field WD' \
	   (substring(pd_param(icon_component, "field", "string"),"WD"))
endmenu

define widget tseries-p3-fields intmenu 'TSeries Fields'
	title 'Select Fields'
	line
	entry 'Altitude' 'toggle_field ra3' \
	   (substring(pd_param(icon_component, "field", "string"),"ra3"))
	entry 'Temperature' 'toggle_field temp' \
	   (substring(pd_param(icon_component, "field", "string"),"temp"))
	entry 'Dewpoint Temperature' 'toggle_field dp' \
	   (substring(pd_param(icon_component, "field", "string"),"dp"))
	entry 'Liquid Water Content' 'toggle_field lw' \
	   (substring(pd_param(icon_component, "field", "string"),"lw"))
	entry 'Raw Pressure' 'toggle_field pres' \
	   (substring(pd_param(icon_component, "field", "string"),"pres"))
	entry 'Wind Speed' 'toggle_field wspd'\
	   (substring(pd_param(icon_component,"field","string"),"wspd"))
	entry 'Wind Direction' 'toggle_field wdir'\
	   (substring(pd_param(icon_component,"field","string"),"wdir"))
	entry 'Theta_e' 'toggle_field theta_e'\
	   (substring(pd_param(icon_component,"field","string"),"theta_e"))
	entry 'Emanuel Theta_e' 'toggle_field theta_ee'\
	   (substring(pd_param(icon_component,"field","string"),"theta_ee"))
endmenu

!
! Toggle the presence of a given platform.
!
procedure toggle_plat platform string
	local oldplat (pd_param (icon_component, "platform", "string"))
!
! See if it's already there.  If so, we remove.
!
	if (substring (oldplat, platform))
		local newplat substr_remove(oldplat, platform)

! Otherwise we just add it.  If there is a maximum number of platforms,
! though, we have to enforce it.
!
	else
	    local newplat (concat(oldplat, concat (",",platform)))
	    local max pd_param(icon_component,"max-platform","string")
	    if (max <> "(Undefined)")
	    	local imax pd_param(icon_component,"max-platform","integer")
		if (n_occur (newplat, ",") >= imax)
			dm "beep"
			return
		endif
	    endif
	endif
!
! Store the thing.
!
	param #icon_component platform #newplat
endprocedure


!
! Toggle the presence of a given field.
!
procedure toggle_field field string
	local oldfld (pd_param (icon_component, "field", "string"))
!
! See if it's already there.  If so, we remove.
!
	if (substring (oldfld, field))
		local newfld substr_remove(oldfld, field)
!
! Otherwise we just add it.  If there is a maximum number of fields,
! though, we have to enforce it.
!
	else
	    local newfld (concat(oldfld, concat (",",field)))
	    local max pd_param(icon_component,"max-field","string")
	    if (max <> "(Undefined)")
	    	local imax pd_param(icon_component,"max-field","integer")
		if (n_occur (newfld, ",") >= imax)
			dm "beep"
			return
		endif
	    endif
	endif
!
! Store the thing.
!
	param #icon_component field #newfld
endprocedure

!
! Toggle the presence of a given field for quadrants.
!
procedure toggle_quad field string
	local oldfld (pd_param (icon_component, "quadrants", "string"))
!
! See if it's already there.  If so, we remove.
!
	if (substring (oldfld, field))
		local newfld substr_remove(oldfld, field)
!
! Otherwise we just add it.  If there is a maximum number of fields,
! though, we have to enforce it.
!
	else
	    if (oldfld <> "(Undefined)")
	        local newfld (concat(oldfld, concat (",",field)))
	    else
		local newfld field
	    endif
	    local max pd_param(icon_component,"max-field","string")
	    if (max <> "(Undefined)")
	    	local imax pd_param(icon_component,"max-field","integer")
		if (n_occur (newfld, ",") >= imax)
			dm "beep"
			return
		endif
	    endif
	endif
!
! Store the thing.
!
	if (strlength (newfld) = 0)
		local worked (pd_removeparam (icon_component, "quadrants"))
	else
		param #icon_component quadrants #newfld
	endif
endprocedure


!
! A bunch of stuff for dealing with cross section platforms.
!
define widget xsect-plat intmenu "Cross section platforms"
	title 'Soundings Used'
	line
	entry 'Storm Lake (SLB)' 'toggle_xsp slb' \
	   (substring(pd_param(icon_component, "platform", "string"),"slb"))
	entry 'Iowa City (IOW)' 'toggle_xsp iow' \
	   (substring(pd_param(icon_component, "platform", "string"),"iow"))
	entry 'Kearney (EAR)' 'toggle_xsp ear' \
	   (substring(pd_param(icon_component, "platform", "string"),"ear"))
	entry 'Burlington (3V1)' 'toggle_xsp 3v1' \
	   (substring(pd_param(icon_component, "platform", "string"),"3v1"))
	entry 'Hays (HYS)' 'toggle_xsp hys' \
	   (substring(pd_param(icon_component, "platform", "string"),"hys"))
	entry 'Seneca (62K)' 'toggle_xsp 62k' \
	   (substring(pd_param(icon_component, "platform", "string"),"62k"))
	entry 'Arkansas City (AKZ)' 'toggle_xsp akz' \
	   (substring(pd_param(icon_component, "platform", "string"),"akz"))
	entry 'Kirksville (IRK)' 'toggle_xsp irk' \
	   (substring(pd_param(icon_component, "platform", "string"),"irk"))
	entry 'Columbia (COU)' 'toggle_xsp cou' \
	   (substring(pd_param(icon_component, "platform", "string"),"cou"))
	entry 'St. Louis (STL)' 'toggle_xsp stl' \
	   (substring(pd_param(icon_component, "platform", "string"),"stl"))
	entry 'Henderson (HEN)' 'toggle_xsp hen' \
	   (substring(pd_param(icon_component, "platform", "string"),"hen"))
	entry 'Guymon (GUY)' 'toggle_xsp guy' \
	   (substring(pd_param(icon_component, "platform", "string"),"guy"))
	entry 'Mobile' 'toggle_xsp mobile' \
	   (substring(pd_param(icon_component, "platform", "string"),"mobile"))
endmenu

!
! Basic boolean toggle.
!
procedure toggle_bool param string default string
	local current (pd_param (icon_component, param, "string"))
	if (current = "(Undefined)")
		parameter #icon_component #param #default
	elseif (current = "true")
		parameter #icon_component #param "false"
	else
		parameter #icon_component #param "true"
	endif
endprocedure


!
! Toggle the presence of a given sounding.
!
procedure toggle_xsp platform string
	local oldplat (pd_param (icon_component, "platform", "string"))
!
! See if it's already there.  If so, we remove it.
!
	if (substring (oldplat, platform))
		local newplat substr_remove(oldplat, platform)
!
! Otherwise we just add it.  If there is a maximum number of platforms,
! though, we have to enforce it.
!
	else
	    local newplat (concat(oldplat, concat (",",platform)))
	    local max pd_param(icon_component,"max-platform","string")
	    if (max <> "(Undefined)")
	    	local imax pd_param(icon_component,"max-platform","integer")
		if (n_occur (newplat, ",") >= imax)
			dm "beep"
			return
		endif
	    endif
	endif
!
! Store the thing.
!
	param #icon_component platform #newplat
endprocedure

!
! XY stuff.
!

procedure adjust_tic_interval sideParam string type string
	local side pd_paramsearch(icon_component,sideParam,"xy","string")
	local param concat(concat("axis-",side),"-tic-interval")
	if ( icon_component = "global" )
		local param concat("xy-",param)
	endif
	local tint pd_paramsearch(icon_component,param,"xy","string")
	if ( type = "time" )
		activate singlestring #icon_component #param  "Tic Interval: "\
			 #tintelseif ( type = "float" )
		activate singlefloat #icon_component #param  "Tic Interval: "\
			 #tint
	endif
endprocedure

	
procedure adj_series_span component string
	local span pd_paramsearch("global","xy-series-span","","string")
	activate singlestring "global" "xy-series-span" "Time Span: " #span
endprocedure

procedure adjust_height_scale
	local min pd_param("global", "height-scale-y-min", "string")
	local max pd_param("global", "height-scale-y-max", "string")
	activate doublefloat "global" "height-scale-y-min" "Y Min: " #min \
		"height-scale-y-max" "Y Max: " #max
endprocedure

!
! GMS satellite control.
!
procedure gms_resolution which string
	if (which = "high")
		local plat 'gms'
	else
		local plat 'gms-big'
	endif
	parameter #icon_component platform #plat
	parameter #icon_component field ir
	parameter global trigger #plat
endprocedure

procedure gms_visible plat string
	parameter #icon_component platform #plat
	parameter #icon_component field vis
	parameter global trigger #plat
endprocedure

!
! Imported from ISS
!
define widget time-height-winds intmenu 'Generic winds'
	title 'Time-Height Winds'
	line
	entry 'Vector' 'adjust_representation_style vector' (pd_param(icon_component,"representation-style","string") = "vector")
	entry 'Barb' 'adjust_representation_style barb'  (pd_param(icon_component,"representation-style","string") = "barb")
	line
	entry 'Grids on/off' 'toggle_grid adj-axis-side'
	entry 'Set Height...' 'adjust_height_scale'
	entry 'Set Tic Interval...' 'adjust_tic_interval adj-axis-side float'
	line
	entry 'Data Skip Factor...' 'adjust_data_skip xy-wind'
	entry 'Wind Scale...' 'adjust_wind_scale'
endmenu

procedure toggle_grid sideParam string
	local side pd_paramsearch(icon_component,sideParam,"xy","string")
	local param concat(concat("axis-",side),"-grid-intensity")
	local grid pd_paramsearch(icon_component,param,"xy","string")
	if ( grid = "0.0" )
	    param #icon_component #param 0.75
	else
	    param #icon_component #param 0.0
	endif
endprocedure

procedure adjust_wind_scale
	local symbol pd_paramsearch(icon_component,"representation-style","xy-wind","string")
	if ( symbol = "barb" )
	    local scale pd_paramsearch(icon_component,"barb-scale","xy-wind","string")
	    activate singlefloat #icon_component "barb-scale" \
		"Barb shaft length: " #scale 
	else
	    local scale pd_paramsearch(icon_component,"vec-scale","xy-wind","string")
	    activate singlefloat #icon_component "vec-scale" \
		"Vector scale: " #scale 
	endif
endprocedure


procedure adjust_representation_style style string
	param #icon_component representation-style #style
endprocedure

procedure adjust_data_skip qual string
    local n pd_paramsearch(icon_component,"data-skip",qual,"string")
    activate singleint #icon_component "data-skip"  "Data-skip factor: " #n 
endprocedure

procedure adjust_tic_interval sideParam string type string
	local side pd_paramsearch(icon_component,sideParam,"xy","string")
	local param concat(concat("axis-",side),"-tic-interval")
	if ( icon_component = "global" )
	     local param concat("xy-",param)
	endif
	local tint pd_paramsearch(icon_component,param,"xy","string")
	if ( type = "time" )
            activate singlestring #icon_component #param  "Tic Interval: " #tint
	elseif ( type = "float" )
            activate singlefloat #icon_component #param  "Tic Interval: " #tint
	endif
endprocedure

!
! Get our field definitions.
!
set DefFile (concat (concat (c$libdir, "/"), "FieldDefs"))
read #DefFile
