!
! All the definitions required to make the iconbar work.
!

!
! The right way to do this....
!
set ui$bitmap_directory concat(c$libdir, "/icons")
!
! This is the iconbar menu itself.....
!
define widget iconbar menubar " "
	!
	! All this stuff tells the system to put it, unadorned by headers and
	! title bars, where we want it.  DM does "override" by itself now,
	! since this iconbar appears in the display config, so we don't
	! bother with it here.
	!
	noheader
	! size 230 80
	location 100 100
	! vertical
	! override
	!
	! Now we can define the menus themselves.
	!
	!
	! Throw in a help icon, pick your favorite of the two
	!
	!menu help bitmap help
	menu help bitmap iconbar-help
		title 'Zeb Help Access'
		line
		entry 'Introduction' 'help'
		entry 'On-line Topics' 'help tablecontents'
		entry 'Guide to Documentation' 'help documentation'
		entry 'Shutting Down' 'help shutdown'
		line
		submenu 'Listings' 'listings_menu'
		line
		submenu 'Print Zeb Documents' 'docs_menu'
		submenu 'Print Dataset Documents' 'data_docs_menu'
!		submenu 'Print WINDS Documents' 'winds_docs_menu'
	endmenu
	!
	! the global menu
	!
	menu global bitmap global
		title 'Zeb control options'
		line
		entry 'One Window Aircraft Configuration' \
			'pconfig one' (dm$config = "one")
		entry 'Radar Configuration' \
			'pconfig festdemo' (dm$config = "festdemo")
		entry 'Surface Data Configuration' \
			'pconfig surf' (dm$config = "surf")
		entry 'Cross-Section Configuration' \
			'pconfig xsect' (dm$config = "xsect")
		entry 'Model Cross-Section Configuration' \
			'pconfig model_xsect' (dm$config = "model_xsect")
!		entry 'Time Series Configuration'\
!			'pconfig tseries' (dm$config = "tseries")
		entry 'Profiler Display' \
			'pconfig profiler' (dm$config = "profiler")
		entry 'Altitude Plot' \
			'pconfig xygraph' (dm$config = "xygraph")
		entry 'Time Series Plot' \
			'pconfig xytimegraph' (dm$config = "xytimegraph")
		entry 'Slide Configuration' \
			'pconfig slide' (dm$config = "slide")
		entry 'Empty Configuration' \
			'pconfig empty' (dm$config = "empty")
		line
		entry 'Time Widget'	'popup time'
		entry 'Hardcopy Widget' 'popup hardcopy'
		entry 'Configuration Editing Widget' 'popup ConfigEdit'
		entry 'Data Store Widget' 'shell "dsdwidget &"'
		entry 'Data Store Management' 'shell "dsmanage &"'
		line
		entry 'Open Windows Mode' 'ToggleTBSpace' (tbspace > 0)
		line
		entry 'Shut Down Zeb System' 'shutdown'
	endmenu
	menu radar bitmap radar
		title 'Radar'
		line
		submenu 'CP4 Radar' 'CP4Radar'
	endmenu
	menu nowrad bitmap nowrad
		title 'NOWRAD'
		line
		entry 'Fixed'	'PutBCompfield c_nowrad intensity false'
		entry 'Floater' 'PutBCompfield c_nowrad_f intensity false'
		line
		entry 'Fixed Contours' 'put_component c_intensity_contour'
		entry 'Floater Contours' 'put_component c_intensity_f_contour'
	endmenu
	menu mesonet bitmap mesonet
		title 'Composite Surface Data'
		line
		entry 'Hourly Station Plots' 'put_component c_surface_hourly_plot'
		entry '5-Min Station Plots' 'put_component c_surface_5min_plot'
		line 
		line
!		subtitle 'Objective analysis'
		line
		submenu 'Line Contoured Hourly Sfc. Data' 'LineMesonetHourly'
		submenu 'Filled Contour Hourly Sfc. Data' 'FilledMesonetHourly'
		entry 'Hourly Sfc. Gridded Wind Vectors' 'put_component c_meso_winds'
		line
		submenu 'Line Contoured 5-Min Sfc. Data' 'LineMesonet5min'
		submenu 'Filled Contour 5-Min Sfc. Data' 'FilledMesonet5min'
		entry '5-Min Sfc. Gridded Wind Vectors' 'put_component c_meso_5min_winds'
	endmenu
	menu satellite bitmap satellite
		title 'Satellite Data'
		line
		entry 'Fest domain: Vis' 'PutBCompField c_goes_fest vis true'
		entry 'Fest domain: IR' 'PutBCompField c_goes_fest ir true'
		line
		entry 'US: Vis' 'PutBCompField c_goes_us vis true'
		entry 'US: IR' 'PutBCompField c_goes_us ir true'
	endmenu
	menu aircraft bitmap aircraft
		title 'Aircraft'
		line
		entry 'Storm-1' 'put_component c_storm1'
		entry 'Storm-2' 'put_component c_storm2'
		entry 'P-3' 'put_component c_p3'
		entry 'Storm-4' 'put_component c_storm4'
	endmenu
	menu model bitmap model
		title 'Model Data Contours'
		line
		entry 'NGM' 'ModelAdd ngm cyan'
		entry 'NGM (Surface)' 'SfcModelAdd ngm_sfc cyan'
		entry 'AVN' 'ModelAdd avnold green'
		entry 'AVN (Surface)' 'SfcModelAdd avnold_sfc green'
		entry 'ETA' 'ModelAdd eta yellow'
		entry 'ETA (Surface)' 'SfcModelAdd eta_sfc yellow'
		entry 'MAPS' 'ModelAdd maps hotpink'
		line
		entry 'Wind Vectors' 'beep'
		line
		entry 'NGM' 'ModelWindsAdd ngm cyan 1'
		entry 'AVN' 'ModelWindsAdd avnold green 1'
		entry 'ETA' 'ModelWindsAdd eta yellow 2'
		entry 'MAPS' 'ModelWindsAdd maps hotpink 2'
	endmenu
	menu 'overlays' bitmap overlays
		title 'Static Overlays'
		line
		submenu 'Grids and Range Rings' GridsAndRings
		submenu 'Maps' 'Maps'
		submenu 'Locations' LocMenu
		submenu 'Boundaries' IBboundary
		line
		entry 'Window Bounds' 'put_wbounds c_wbounds'
	endmenu
!	menu 'xygraph' bitmap xygraph
!		title 'XY Graph Data'
!	endmenu
!	menu 'blank' bitmap blank
!		title 'Blank'
!	endmenu
enddef

!
! Add basic model data: ModelAdd <platform> <color>
!
procedure ModelAdd plat string color string
	parameter p_model p_model platform #plat
	parameter p_model p_model icon #plat
	parameter p_model p_model color #color
	parameter p_model p_model field tdry
	parameter p_model p_model altitude-control true
	sendout p_model 'pick'
endprocedure

!
! Add model winds data: ModelWindsAdd <platform> <color> <degrade>
!
procedure ModelWindsAdd plat string color string degrade string
	local iconname concat(plat,"_winds")
	parameter p_model_winds p_model_winds platform #plat
	parameter p_model_winds p_model_winds icon #iconname
	parameter p_model_winds p_model_winds color #color
	parameter p_model_winds p_model_winds degrade #degrade
	sendout p_model_winds 'pick'
endprocedure

!
! Add surface-only model data: SfcModelAdd <platform> <color>
! (This is like ModelAdd above, except we turn off altitude-control)
!
procedure SfcModelAdd plat string color string
	parameter p_model p_model platform #plat
	parameter p_model p_model icon #plat
	parameter p_model p_model color #color
	parameter p_model p_model field precip
	parameter p_model p_model altitude-control false
	sendout p_model 'pick'
endprocedure

!
! print_doc <relative path from doc of file to send to default printer>
!
procedure print_doc file string

	set topdir getenv("ZEB_TOPDIR")
	if (topdir = "UNDEFINED")
		beep
		message "ZEB_TOPDIR undefined; can't find document directory"
		return
	endif

	set cmd quote(concat4("lpr ",topdir,"/doc/",file))
	message '#' cmd
	shell #cmd

endprocedure


define widget listings_menu intmenu "Available Help Listings"
	title 'Available Listings'
	line
	entry 'Surface Stations' 'help intro fest_stations.hlp'
	entry 'Profiler Sites' 'help intro fest_profilers.hlp'
	entry 'Sounding Sites' 'help intro fest_soundings.hlp'
	entry 'Weather and QC Codes' 'help intro fest_codes.hlp'
endmenu


procedure print_aster
	print_doc "data/aster/aster_summary.ps"
	print_doc "data/aster/figure1.ps"
	print_doc "data/aster/figure2.ps"
	print_doc "data/aster/figure3.ps"
endprocedure	


!
! Zeb documents available for printing
!
define widget docs_menu intmenu 'Print general Zeb documentation'
	title 'Print Zeb Documentation'
	line
	entry 'Running Zeb (13 pgs)' 'print_doc "zeb/zeb.startup.doc.ps"'
	entry 'User Manual (8 pgs)' 'print_doc "zeb/user.ps"'
	entry 'xwd2ps man page (4 pgs)' 'print_doc "man/xwd2ps.ps"'
endmenu


!
! Print WINDS documentation
!
!define widget winds_docs_menu intmenu 'Print WINDS documents'
!	title 'Print WINDS Document'
!	line
!	entry 'Distribution Policy' 'print_doc "winds/dist.policy.ps"'
!	entry 'Installation' 'print_doc "winds/install.doc.ps"'
!	entry 'Quick Reference' 'print_doc "winds/qwik_ref.ps"'
!endmenu


!
! Data-related documents sub-menu
!
define widget data_docs_menu intmenu 'Print Data Documentation'
	title 'Print Data Documents'
	line
	entry 'General CD Structure' 'print_doc "data/FileStructure.ps"'
	entry 'CP4 Radar' 'print_doc "data/Cp4.ps"'
	entry 'GOES Satellite' 'print_doc "data/Satellite.ps"'
	entry 'Nowrad' 'print_doc "data/Nowrad.ps"'
	entry 'Soundings' 'print_doc "data/Sounding.ps"'
	entry 'Profilers' 'print_doc "data/Profilers.ps"'
	entry 'Surface Data' 'print_doc "data/Surface.ps"'
	entry 'Storm-1 (N2UW)' 'print_doc "data/Storm1_N2UW.ps"'
	entry 'Storm-2 (N312D)' 'print_doc "data/Storm2_N312D.ps"'
	entry 'P3' 'print_doc "data/P3.ps"'
	entry 'Storm-4 (C131)' 'print_doc "data/Storm4_C131.ps"'
	entry 'Aster' 'print_aster'
endmenu	


!
! CP4 radar.
!
define widget CP4Radar intmenu 'cp4 radar'
	title 'CP4'
	line
	entry 'Velocity' 'PutBCompField c_radar velocity true'
	entry 'Reflectivity' 'PutBCompField c_radar reflectivity true'
endmenu

!
! MHR radar.
!
define widget MHRadar intmenu 'mhr radar'
	title 'MHR'
	line
	entry 'Velocity' 'PutBCompField c_mhr velocity true'
	entry 'Reflectivity' 'PutBCompField c_mhr reflectivity true'
endmenu

!
! Optimizer configs.
!
define widget OptimizerConfigs intmenu 'optimizer configs'
	title 'Scan Optimizer Configurations'
	line
	entry 'Basic optimizer configuration' 'display optimizer' \
			(dm$config = "optimizer")
	entry 'Two radar window configuration' 'display optimizer-rt' \
			(dm$config = "optimizer-rt")
endmenu

!
! Aircraft Coordinator Configurations
!
define widget AircraftConfigs intmenu 'Aircraft Configs menu'
	title 'Aircraft Configurations'
	line
	entry 'Radar Configuration' \
		'pconfig aircraft' (dm$config = "aircraft")
	entry 'Cross-Section Configuration' \
		'pconfig aircraft-xsect' (dm$config = "aircraft-xsect")
	entry 'Time Series Configuration' \
		'pconfig tseries-aircraft' (dm$config = "tseries-aircraft")
endmenu

!
! Nowcaster Configurations
!
define widget NowcastConfigs intmenu 'Nowcast Configs menu'
	title 'Nowcast Configurations'
	line
	entry 'Radar Configuration' \
		'pconfig nowcast' (dm$config = "nowcast")
	entry 'Cross-Section Configuration' \
		'pconfig nowcast-xsect' (dm$config = "nowcast-xsect")
	entry 'Time Series Configuration' \
		'pconfig tseries-nowcast' (dm$config = "tseries-nowcast")
endmenu

!
!
! Radar Coordinator Configurations
!
define widget RadarConfigs intmenu 'Radar Coordinator Configs menu'
	title 'Radar Coordinator Configurations'
	line
	entry 'Radar Configuration' \
		'pconfig radar' (dm$config = "radar")
	entry 'Cross-Section Configuration' \
		'pconfig radar-xsect' (dm$config = "radar-xsect")
	entry 'Time Series Configuration' \
		'pconfig tseries-radar' (dm$config = "tseries-radar")
endmenu

!
! Ops Director Configurations
!
define widget OpsdirConfigs intmenu 'Ops Director Configs menu'
	title 'Ops Director Configurations'
	line
	entry 'Radar Configuration' \
		'pconfig opsdir' (dm$config = "opsdir")
	entry 'Cross-Section Configuration' \
		'pconfig opsdir-xsect' (dm$config = "opsdir-xsect")
	entry 'Time Series Configuration' \
		'pconfig tseries-opsdir' (dm$config = "tseries-opsdir")
endmenu

!
! The various maps.
!
define widget Maps intmenu 'Maps'
	title 'Map overlays'
	line
	entry 'State boundaries' 'put_component c_map'
!	entry 'Roads' 'put_component c_road_map'
	entry 'Dual Doppler Lobes' 'put_component c_ddop_map'
	entry 'Boundary Layer Array' 'put_component c_array_map'
	line
endmenu


!
! Location submenu.
!
define widget LocMenu intmenu 'Location menu'
	title 'Static locations'
	line
	entry 'Ops Center' 'put_component c_ops-ctr'
	entry 'Radars' 'put_component c_radar_loc'
	submenu 'VOR/DME' 'VORmenu'
	entry 'CLASS stations' 'put_component c_sounding_loc'
	entry 'NWS soundings' 'put_component c_nwssounding_loc'
	entry 'Profilers' 'put_component c_profiler_loc'
	entry 'Radio Tower' 'put_component c_rt_loc'
	entry 'Aster' 'put_component c_aster_loc'
	entry 'Boundary Layer Array' 'put_component c_array_loc'
endmenu

define widget VORmenu intmenu 'Vor Locations'
	title 'VOR Locations'
	line
	entry 'Iowa'		'put_component c_vor_IA'
	entry 'Western Kansas'	'put_component c_vor_westKS'
	entry 'Eastern Kansas'	'put_component c_vor_eastKS'
	entry 'Western Missouri'	'put_component c_vor_westMO'
	entry 'Eastern Missouri'	'put_component c_vor_eastMO'
	entry 'Western Nebraska'	'put_component c_vor_westNE'
	entry 'Eastern Nebraska'	'put_component c_vor_eastNE'
	entry 'Western Oklahoma'	'put_component c_vor_westOK'
	entry 'Eastern Oklahoma'	'put_component c_vor_eastOK'
	entry 'North misc.'	'put_component c_vor_nmisc'
	entry 'South misc.'	'put_component c_vor_smisc'
endmenu

!
! The submenu for boundary selection.
!
define widget IBboundary intmenu 'Icon bar boundary menu'
	title 'Boundary overlays'
	line
	entry 'Scan optimizer boundary' 'PutCompX c_opt_bdry platform boundary'
	entry 'Spotlight' 'put_component c_spotlight'
	line
	entry 'Storm 1 flight plan' 'put_component c_n2uw-plan'
	entry 'Storm 2 flight plan' 'put_component c_n312d-plan'
	entry 'Storm 3 flight plan' 'put_component c_n43rf-plan'
	entry 'Storm 4 flight plan' 'put_component c_n327uw-plan'
	entry 'Storm 5 flight plan' 'put_component c_n709na-plan'
endmenu

!
! Submenu for grids and range rings.
!
define widget GridsAndRings intmenu 'grid and rings and nifty stuff'
	title 'Grids, rings, etc.'
	line
	submenu 'Radar Range Rings' RadarRings
	line
	submenu 'VOR/DME Range Rings' VORRings 
	line
	entry 'X-Y Grid (km)' \
			'PutCompX c_cart_grid lat-lon false'
	entry 'Lat/Lon Grid ' \
		'PutCompX c_cart_grid lat-lon true'
endmenu

!
! Radar range ring menu.
!
define widget RadarRings intmenu 'radar range rings'
	title 'Radar Range Rings'
	line
	entry 'CP3 Range Rings' 'PutCompX c_rings platform cp3'
	entry 'CP4 Range Rings' 'PutCompX c_rings platform cp4'
	entry 'MHR Range Rings' 'PutCompX c_rings platform mhr'
	entry 'OKC Range Rings' 'PutCompX c_rings platform okc'
	entry 'FDR Range Rings' 'PutCompX c_rings platform fdr'
	entry 'CIM Range Rings' 'PutCompX c_rings platform cim'
	entry 'HOT Range Rings' 'PutCompX c_rings platform hot'
	entry 'CHILL Range Rings' 'PutCompX c_rings platform chill'
endmenu

!
! VOR/DME range ring menu.
!
define widget VORRings intmenu 'VOR range rings'
	title 'VOR/DME Range Rings'
	line
	entry 'STJ range rings' 'PutCompX c_vor platform vor-stj'
	entry 'MKC range rings' 'PutCompX c_vor platform vor-mkc'
	entry 'PWE range rings' 'PutCompX c_vor platform vor-pwe'
	entry 'TOP range rings' 'PutCompX c_vor platform vor-top'
	entry 'DUC range rings' 'PutCompX c_vor platform vor-duc'
	entry 'IRW range rings' 'PutCompX c_vor platform vor-irw'
	entry 'HBR range rings' 'PutCompX c_vor platform vor-hbr'
	entry 'IFI range rings' 'PutCompX c_vor platform vor-ifi'
	entry 'IRK range rings' 'PutCompX c_vor platform vor-irk'
	entry 'DSM range rings' 'PutCompX c_vor platform vor-dsm'
	entry 'FSM range rings' 'PutCompX c_vor platform vor-fsm'	
	entry 'Other VOR (keyboard entry)' 'popup vor-origin'
endmenu

! A form widget for manual VOR entry.
!
define widget vor-origin form 'VOR origin'
	noheader
	popup vor_popup
	label comp 'component'
	label l1 'VOR/DME origin:'
	blank origin 'vor-top' command 'vor_origin_enter' width 100
	newline
	button cancel 'Cancel' color red command 'popdown #ui$form'
	button apply 'Apply' command 'vor_origin_enter'
	label gripe ' ' color red width 200
enddef

!
! Initialize a VOR form.
!
procedure vor_popup
        formtext #ui$form comp c_vordef
        formtext #ui$form gripe ' '
endprocedure


!
! Menus for mesonet contours.  Two completely separate menus required
! for the filled and line cases, alas.
!
define widget FilledMesonet intmenu 'Filled mesonet contour selection'
	title 'Mesonet data in filled contours'
	line
	entry 'Temperature' 		'PutBCompField c_fmesonet tdry false'
	entry 'Dewpoint Temperature'	'PutBCompField c_fmesonet dp false'
	entry 'Relative Humidity'	'PutBCompField c_fmesonet rh false'
	entry 'Raw Pressure'		'PutBCompField c_fmesonet pres false'
	entry 'Corrected Pressure' 	'PutBCompField c_fmesonet cpres0 false'
	entry 'Mixing Ratio'		'PutBCompField c_fmesonet mr false'
	entry 'Potential Temperature'	'PutBCompField c_fmesonet pt false'
	entry 'Equivalent Potential Temperature' 'PutBCompField c_fmesonet ept false'
	entry '15-Minute Rain Accumulation' 'PutBCompField c_fmesonet raina15 false'
	entry '60-Minute Rain Accumulation' 'PutBCompField c_fmesonet raina60 false'
endmenu
define widget FilledMesonetHourly intmenu 'Filled Contour Selection'
	title 'Surface Mesonet Contour Fields'
	line
	entry 'Station Pressure mb' 'PutBCompField c_sfc_hourly_fcontours pres false'
	entry 'Reported Sea-level Pressure mb' 'PutBCompField c_sfc_hourly_fcontours cpres0 false'
	entry 'Calculated Sea-levelPressure mb' 'PutBCompField c_sfc_hourly_fcontours computed_Sea_level_Pressure false'
	entry 'Temperature C' 'PutBCompField c_sfc_hourly_fcontours tdry false'
	entry 'Dew Point C' 'PutBCompField c_sfc_hourly_fcontours dp false'
	entry 'Wind Speed' 'PutBCompField c_sfc_hourly_fcontours wspd false'
	entry 'Wind Direction' 'PutBCompField c_sfc_hourly_fcontours wdir false'
	entry 'Wind Maximum m/s' 'PutBCompField c_sfc_hourly_fcontours wmax false'
	entry 'Rain kg/m2' 'PutBCompField c_sfc_hourly_fcontours rain false'
	entry 'Weather Code' 'PutBCompField c_sfc_hourly_fcontours weather_code false'
	entry 'Horizontal Visability m' 'PutBCompField c_sfc_hourly_fcontours horiz_vis__fcontours false'
	entry 'Ceiling Height (first layer) feet' 'PutBCompField c_sfc_hourly_fcontours ceiling_height false'
	entry 'Ceiling Flag (first layer)' 'PutBCompField c_sfc_hourly_fcontours ceiling_flag false'
	entry 'Cloud Amount (first layer)' 'PutBCompField c_sfc_hourly_fcontours cloud_amt false'
	entry 'Ceiling Height (second layer) feet' 'PutBCompField c_sfc_hourly_fcontours ceiling_height2 false'
	entry 'Ceiling Flag (second layer)' 'PutBCompField c_sfc_hourly_fcontours ceiling_flag2 false'
	entry 'Cloud Amount (second layer)' 'PutBCompField c_sfc_hourly_fcontours cloud_amt2 false'
	entry 'Ceiling Height (third layer) feet' 'PutBCompField c_sfc_hourly_fcontours ceiling_height3 false'
	entry 'Ceiling Flag (third layer)' 'PutBCompField c_sfc_hourly_fcontours ceiling_flag3 false'
	entry 'Cloud Amount (third layer)' 'PutBCompField c_sfc_hourly_fcontours cloud_amt3 false'
	entry 'East Wind Component m/s' 'PutBCompField c_sfc_hourly_fcontours u_wind false'
	entry 'West Wind Component m/s' 'PutBCompField c_sfc_hourly_fcontours v_wind false'
	entry 'Station Altitude km' 'PutBCompField c_sfc_hourly_fcontours alt false'
endmenu
define widget LineMesonetHourly intmenu 'Line mesonet contour selection'
	title 'Surface Mesonet Contour Fields'
	line
	entry 'Station Pressure mb' 'PutCompField c_sfc_hourly pres'
	entry 'Reported Sea-level Pressure mb' 'PutCompField c_sfc_hourly cpres0'
	entry 'Calculated Sea-levelPressure mb' 'PutCompField c_sfc_hourly computed_Sea_level_Pressure'
	entry 'Temperature C' 'PutCompField c_sfc_hourly tdry'
	entry 'Dew Point C' 'PutCompField c_sfc_hourly dp'
	entry 'Wind Speed' 'PutCompField c_sfc_hourly wspd'
	entry 'Wind Direction' 'PutCompField c_sfc_hourly wdir'
	entry 'Wind Maximum m/s' 'PutCompField c_sfc_hourly wmax'
	entry 'Rain kg/m2' 'PutCompField c_sfc_hourly rain'
	entry 'Weather Code' 'PutCompField c_sfc_hourly weather_code'
	entry 'Horizontal Visability m' 'PutCompField c_sfc_hourly horiz_vis'
	entry 'Ceiling Height (first layer) feet' 'PutCompField c_sfc_hourly ceiling_height'
	entry 'Ceiling Flag (first layer)' 'PutCompField c_sfc_hourly ceiling_flag'
	entry 'Cloud Amount (first layer)' 'PutCompField c_sfc_hourly cloud_amt'
	entry 'Ceiling Height (second layer) feet' 'PutCompField c_sfc_hourly ceiling_height2'
	entry 'Ceiling Flag (second layer)' 'PutCompField c_sfc_hourly ceiling_flag2'
	entry 'Cloud Amount (second layer)' 'PutCompField c_sfc_hourly cloud_amt2'
	entry 'Ceiling Height (third layer) feet' 'PutCompField c_sfc_hourly ceiling_height3'
	entry 'Ceiling Flag (third layer)' 'PutCompField c_sfc_hourly ceiling_flag3'
	entry 'Cloud Amount (third layer)' 'PutCompField c_sfc_hourly cloud_amt3'
	entry 'East Wind Component m/s' 'PutCompField c_sfc_hourly u_wind'
	entry 'West Wind Component m/s' 'PutCompField c_sfc_hourly v_wind'
	entry 'Station Altitude km' 'PutCompField c_sfc_hourly alt'
!	
endmenu
define widget FilledMesonet5min intmenu 'Filled Contour Selection'
	title 'Surface Mesonet Contour Fields'
	line
	entry 'Station Pressure mb' 'PutBCompField c_sfc_5min_fcontours pres false'
	entry 'Reported Sea-level Pressure mb' 'PutBCompField c_sfc_5min_fcontours cpres0 false'
	entry 'Calculated Sea-levelPressure mb' 'PutBCompField c_sfc_5min_fcontours computed_Sea_level_Pressure false'
	entry 'Temperature C' 'PutBCompField c_sfc_5min_fcontours tdry false'
	entry 'Dew Point C' 'PutBCompField c_sfc_5min_fcontours dp false'
	entry 'Wind Speed' 'PutBCompField c_sfc_5min_fcontours wspd false'
	entry 'Wind Direction' 'PutBCompField c_sfc_5min_fcontours wdir false'
	entry 'Wind Maximum m/s' 'PutBCompField c_sfc_5min_fcontours wmax false'
	entry 'Rain kg/m2' 'PutBCompField c_sfc_5min_fcontours rain false'
	entry 'Weather Code' 'PutBCompField c_sfc_5min_fcontours weather_code false'
	entry 'Horizontal Visability m' 'PutBCompField c_sfc_5min_fcontours horiz_vis__fcontours false'
	entry 'Ceiling Height (first layer) feet' 'PutBCompField c_sfc_5min_fcontours ceiling_height false'
	entry 'Ceiling Flag (first layer)' 'PutBCompField c_sfc_5min_fcontours ceiling_flag false'
	entry 'Cloud Amount (first layer)' 'PutBCompField c_sfc_5min_fcontours cloud_amt false'
	entry 'Ceiling Height (second layer) feet' 'PutBCompField c_sfc_5min_fcontours ceiling_height2 false'
	entry 'Ceiling Flag (second layer)' 'PutBCompField c_sfc_5min_fcontours ceiling_flag2 false'
	entry 'Cloud Amount (second layer)' 'PutBCompField c_sfc_5min_fcontours cloud_amt2 false'
	entry 'Ceiling Height (third layer) feet' 'PutBCompField c_sfc_5min_fcontours ceiling_height3 false'
	entry 'Ceiling Flag (third layer)' 'PutBCompField c_sfc_5min_fcontours ceiling_flag3 false'
	entry 'Cloud Amount (third layer)' 'PutBCompField c_sfc_5min_fcontours cloud_amt3 false'
	entry 'East Wind Component m/s' 'PutBCompField c_sfc_5min_fcontours u_wind false'
	entry 'West Wind Component m/s' 'PutBCompField c_sfc_5min_fcontours v_wind false'
	entry 'Station Altitude km' 'PutBCompField c_sfc_5min_fcontours alt false'
endmenu
define widget LineMesonet5min intmenu 'Line mesonet contour selection'
	title 'Surface Mesonet Contour Fields'
	line
	entry 'Station Pressure mb' 'PutCompField c_sfc_5min pres'
	entry 'Reported Sea-level Pressure mb' 'PutCompField c_sfc_5min cpres0'
	entry 'Calculated Sea-levelPressure mb' 'PutCompField c_sfc_5min computed_Sea_level_Pressure'
	entry 'Temperature C' 'PutCompField c_sfc_5min tdry'
	entry 'Dew Point C' 'PutCompField c_sfc_5min dp'
	entry 'Wind Speed' 'PutCompField c_sfc_5min wspd'
	entry 'Wind Direction' 'PutCompField c_sfc_5min wdir'
	entry 'Wind Maximum m/s' 'PutCompField c_sfc_5min wmax'
	entry 'Rain kg/m2' 'PutCompField c_sfc_5min rain'
	entry 'Weather Code' 'PutCompField c_sfc_5min weather_code'
	entry 'Horizontal Visability m' 'PutCompField c_sfc_5min horiz_vis'
	entry 'Ceiling Height (first layer) feet' 'PutCompField c_sfc_5min ceiling_height'
	entry 'Ceiling Flag (first layer)' 'PutCompField c_sfc_5min ceiling_flag'
	entry 'Cloud Amount (first layer)' 'PutCompField c_sfc_5min cloud_amt'
	entry 'Ceiling Height (second layer) feet' 'PutCompField c_sfc_5min ceiling_height2'
	entry 'Ceiling Flag (second layer)' 'PutCompField c_sfc_5min ceiling_flag2'
	entry 'Cloud Amount (second layer)' 'PutCompField c_sfc_5min cloud_amt2'
	entry 'Ceiling Height (third layer) feet' 'PutCompField c_sfc_5min ceiling_height3'
	entry 'Ceiling Flag (third layer)' 'PutCompField c_sfc_5min ceiling_flag3'
	entry 'Cloud Amount (third layer)' 'PutCompField c_sfc_5min cloud_amt3'
	entry 'East Wind Component m/s' 'PutCompField c_sfc_5min u_wind'
	entry 'West Wind Component m/s' 'PutCompField c_sfc_5min v_wind'
	entry 'Station Altitude km' 'PutCompField c_sfc_5min alt'
!	
endmenu

!
! Menus for dual doppler contours.
!
define widget LineDDop intmenu 'Line ddop contour selection'
	title 'Dual Doppler Data in Line Contours'
	line
	entry 'Divergence Contours' 'PutCompX c_ddop_cont field div'
	entry 'Vertical Velocity Contours' \
		'PutCompX c_ddop_cont field w_wind'
	entry 'Cp4 Interpolated Reflectivity' \
		'PutCompX c_ddop_cont field ref_cp4'
	entry 'Cp3 Interpolated Reflectivity' \
		'PutCompX c_ddop_cont field ref_cp3'
endmenu

define widget FilledDDop intmenu 'Filled ddop contour selection'
	title 'Dual Doppler Data in Filled Contours'
	line
	entry 'Divergence Contours' 'PutBCompField c_ddop_fillcont div false'
	entry 'Vertical Velocity Contours' \
		'PutBCompField c_ddop_fillcont w_wind false'
	entry 'Cp4 Interpolated Reflectivity' \
		'PutBCompField c_ddop_fillcont ref_cp4 false'
	entry 'Cp3 Interpolated Reflectivity' \
	'PutBCompField c_ddop_fillcont ref_cp3 false'
endmenu

!
! The simple case: add a component to a window with no changes.
!
procedure put_component name string
!
! Get the target window.
!
	set target_win "none"
	pickwin target_win
	if (target_win = "none")	! They picked root or something
		beep
		return
	endif
!
! If this component is already present in the window, remove it.  Otherwise
! put it in.
!
	if (pd_defined (target_win, name, "platform"))
		message 'Already there'
		remove #target_win #name
	else
		add #name #name #target_win
	endif
endprocedure



!
! Add a component to a window, changing the field name.
!
procedure PutCompField comp string field string
!
! Get the target window.
!
	set target_win "none"
	pickwin target_win
	if (target_win = "none")	! They picked root or something
		beep
		return
	endif
	sound chord
!
! Send the stuff over.
!
	parameter #comp #comp "field" #field
	add #comp #comp #target_win
endprocedure


!
! Add a component to a window, changing the field name.  This version puts
! the component at the bottom of the stack.
!
procedure PutBCompField comp string field string radarspace string
!
! Get the target window.
!
	set target_win "none"
	pickwin target_win
	if (target_win = "none")	! They picked root or something
		beep
		return
	endif
	sound chord
!
! If the component is already in the window, just change the field.
!
	if (pd_defined (target_win, comp, "platform"))
		parameter #target_win #comp "field" #field
!
! Otherwise change the field *in DM* to avoid making the GP draw twice,
! then send it over.
!
	else
		parameter #comp #comp "field" #field
		add #comp #comp #target_win 1
	!
	!  Take care of the radar-space parameter.
	!
		parameter #target_win "global" "radar-space" #radarspace
	endif
endprocedure


!
! Remove a component from a window.
!
procedure ZapComp comp string
!
! Get the target window.
!
	set target_win "none"
	pickwin target_win
	if (target_win = "none")	! They picked root or something
		beep
		return
	endif
!
! If this component truly exists in the window, get rid of it.
!
	if (pd_defined (target_win, comp, "platform"))
		remove #target_win #comp
	endif
endprocedure



!
! Put in window bounds.
!
procedure put_wbounds comp string
!
! Get the window we want to see.
!
	set wbounds_win "none"
	pickwin wbounds_win
	if (wbounds_win = "none")
		beep
		return
	endif
!
! And now the place where it goes.
!
	set target_win "none"
	pickwin target_win
	if (target_win = "none")
		beep
		return
	endif
!
! Fix up the component and ship it over.
!
	parameter #comp #comp platform #wbounds_win
	add #comp #comp #target_win
endprocedure




!
! pconfig -- switch between the various 'picture' configs.
!
procedure pconfig config string
!
! Switch over to the new config.
!
	display #config
!
! Figure out what we're doing with window boxes.
!
!	if (config = 'picture' or config = 'picturex')
!		parameter big wbox disable false
!	elseif (config = 'pictures')
!		parameter big wbox disable true
!	endif
endprocedure



!
! Add a component to a window, changing an arbitrary parameter.
!
procedure PutCompX comp string param string value string
!
! Get the target window.
!
	set target_win "none"
	pickwin target_win
	if (target_win = "none")	! They picked root or something
		beep
		return
	endif
	sound chord

	parameter #comp #comp #param #value
	add #comp #comp #target_win
endprocedure



procedure vor_origin_enter
!
! Get some parameters
!
        local comp getftext(ui$form,'comp')
        local origin getftext(ui$form,'origin')
	local originname concat(origin, '-location')
        local loc pd_param('defaults', 'defaults', originname, "string")
!
! Give them a chance without "vor-"
!
        if (loc = '(Undefined)')
                local origin concat('vor-', origin)
		local originname concat(origin, '-location')
                local loc pd_param('defaults', 'defaults', originname, "string")
        endif
!
! Make sure we know about this location.
!
        if (loc = '(Undefined)')
                local complaint quote(concat3('Location ',origin,' unknown'))
                formtext #ui$form gripe #complaint
                return
        endif
!
! Looks cool -- let's do it.
!
	formtext #ui$form gripe 'Please select window'
	PutCompX 'c_vordef' 'platform' #origin
	popdown #ui$form
endprocedure

!
!decreases the height of the window so that i looks nice with the
!openwindows top bar
!
procedure ToggleTBSpace
	if (tbspace = 0)
		set tbspace 25
	else
		set tbspace 0
	endif
endprocedure

!
! Once tested and approved, the whole source could be inserted here
! if necessary
!
! read print.widget
