!
! All the definitions required to make the iconbar work.
!
! $Id: IconBar,v 1.6 1996-01-30 15:48:25 granger Exp $

!
! The right way to do this....
!
set ui$bitmap_directory concat(c$projdir, "/icons")

! No spaces in these lines!
!
set sounding_sites "ro_hk_sdg,chenzhou_sdg,ganzhou_sdg,wuzhou_sdg,guangzhou_sdg,shantou_sdg,xisha_sdg,taipei_sdg"
set lantau_aws_sites "LT1,LT2,LT3,LT4,LT5,LT6,CLK,LT9"

set tool_icon concat(c$projdir,"/icons/tools")
set config_icon concat(c$projdir,"/icons/configs")

!
! This is the iconbar menu itself.....
!
define widget iconbar menubar " "
	!
	! All this stuff tells the system to put it, unadorned by headers and
	! title bars, where we want it.  DM does "override" by itself now,
	! since this iconbar appears in the display config, so we don't
	! bother with it here.
	!
	noheader
	! size 230 80
	location 100 100
	! vertical
	! override
	!
	! Now we can define the menus themselves.
	!
	menu help bitmap help
		title 'Zeb Help Access'
		line
		entry 'Introduction' 'help'
		entry 'On-line Topics' 'help tablecontents'
		entry 'Guide to Documentation' 'help documentation'
		entry 'Shutting Down' 'help shutdown'
	endmenu
	menu global bitmap global
		title 'Display Configurations'
		line
		entry 'Empty' 'display empty' \
			(dm$config = 'empty')
		entry 'RO Radar' 'display hongkong' \
			(dm$config = 'hongkong')
		entry 'Mesonet Contours' 'display aws_contours' \
			(dm$config = 'lantau_mesonet')
		entry 'Mesonet Winds' 'display aws_winds' \
			(dm$config = 'lantau_winds')
		entry 'Synoptic' 'display synoptic' \
			(dm$config = 'synoptic')
		entry 'Satellite' 'display satellite' \
			(dm$config = 'satellite')
		entry 'Time Series' 'display timeseries' \
			(dm$config = 'timeseries')
		entry 'Soundings' 'display soundings' \
			(dm$config = 'soundings')
		entry 'Profilers' 'display profilers' \
			(dm$config = 'profilers')
		line
		submenu 'ISS Configurations' iss-display-menu
		submenu 'HKUST-Pump House' shalowan-display-menu
		submenu 'AWS TimeSeries' aws-timeseries-menu
		submenu 'Archived Data Sets' archive-display-menu
		line
		submenu 'Saved Configurations' saved-config-menu
		line
		entry 'Quit Zeb Display' 'shutdown'
	endmenu
	menu global bitmap configs
		title 'Configuration Options'
		line
		entry 'Begin new configuration...' 'popup newconfig'
		line
		submenu 'Popup new window' 'windows'
		entry 'Kill window by cursor' 'point-and-shoot'
		line
		entry 'Add window by name...' 'popup NewWindow'
		entry 'Kill window by name...' 'popup ZorchWindow'
		line
		entry 'Save this configuration' 'cfgsave #dm$config'
		entry 'Save this configuration as...' 'popup SaveConfig'
		entry 'Remove this configuration' 'cfg-remove'
		entry 'Restore to original' 'cfg-restore'
		line
		entry 'Configuration Widget' 'popup ConfigEdit'
		entry 'Help' 'help editdconfig'
	endmenu
	menu global bitmap tools
		title 'Zeb Tools and Widgets'
		line
		entry 'Time Widget'	'popup time'
		entry 'Data Widget' 'shell "dsdwidget &"'
		entry 'Print Widget'	'popup hardcopy'
		line
		entry 'DataStore Manager' 'shell "dsmanage &"'
		entry 'Process Monitor' 'shell "zmon zmon.config &"'
		entry 'LastData Monitor' 'shell "LastData LastData.config &"'
	endmenu
	menu 'radar' bitmap radar_grid
		title 'Lidar and Radar Data'
		line
		entry 'Lidar' 'sendout c_lidar pick'
		entry 'RO Radar' 'putc1 p_radar platform ro_radar'
	endmenu
	menu 'satellite' bitmap satellite
		title 'Satellite Data'
		line
		entry 'Non-navigated visible image' \
			'putc2 p_raster platform ro_sat field ir'
	endmenu
	menu mesonet bitmap mesonet
		title 'AWS Stations'
		line
		entry 'Line Contours' 'putc1 p_contour platform aws'
		entry 'Filled Contours' 'putc1 p_fcontour platform aws'
		line
		entry 'Wind Vectors' 'putc1 p_irg_winds platform aws'
		line
		entry 'Station Plot' 'putc1 p_station platform aws'
	endmenu
	menu 'aircraft' bitmap aircraft
		title 'Aircraft Tracks'
		line
		entry 'Kingair Location Track' \
			'putc1 p_simple_track platform kingair'
		entry 'Kingair Data Track' \
			'putc1 p_track platform kingair'
	endmenu
	menu 'soundings' bitmap sounding
		title 'Sounding Stations'
		line
		entry 'ISS Waglan Location' \
			'putc1 p_iss_loc platform iss/class'
		entry 'Sounding Locations' \
			'putc1 p_sdg_loc platform #sounding_sites'
	endmenu
	menu 'overlays' bitmap overlays
		title 'Overlays'
		line
		submenu 'Maps' Maps
		submenu 'Locations' Locations
		submenu 'Grids and Range Rings' GridsAndRings
		entry 'Window Bounds' 'send-wbounds'
	endmenu
enddef


define widget iss-display-menu intmenu 'ISS displays'

	entry 'ISS sounding' 'display iss-sounding' \
		(dm$config = 'iss-sounding')
	entry 'ISS profiler' 'display iss-prof2' \
		(dm$config = 'iss-prof2')
	entry 'ISS prof high' 'display iss-profh' \
		(dm$config = 'iss-profh')
	entry 'ISS prof low' 'display iss-profl' \
		(dm$config = 'iss-profl')
	entry 'ISS sounding winds' 'display iss-sndwind' \
		(dm$config = 'iss-sndwind')
	entry 'ISS winds' 'display iss-winds' \
		(dm$config = 'iss-winds')
	entry 'ISS rass' 'display iss-rassprof' \
		(dm$config = 'iss-rassprof')
	entry 'ISS T, RH, WS, WD' 'display iss-surface1' \
		(dm$config = 'iss-surface1')
	entry 'ISS Radiation' 'display iss-surface2' \
		(dm$config = 'iss-surface2')
	entry 'ISS P, Rain' 'display iss-surface3' \
		(dm$config = 'iss-surface3')
endmenu

define widget archive-display-menu intmenu 'Archived Data displays'

	entry 'ISS sounding' 'display iss-sounding-arc' \
		(dm$config = 'iss-sounding-arc')
	entry 'ISS profiler' 'display iss-prof2-arc' \
		(dm$config = 'iss-prof2-arc')
	entry 'ISS winds' 'display iss-winds-arc' \
		(dm$config = 'iss-winds-arc')
	entry 'HKUST-Pump House Prof low/high' 'display shalowan-prof3-arc' \
		(dm$config = 'shalowan-prof3-arc')
	entry 'Mesonet Winds' 'display aws_winds-arc' \
		(dm$config = 'lantau_winds-arc')
	entry 'Satellite' 'display satellite-arc' \
		(dm$config = 'satellite-arc')
	entry 'Soundings' 'display soundings-arc' \
		(dm$config = 'soundings-arc')
	entry 'Profilers' 'display profilers-arc' \
			(dm$config = 'profilers-arc')
	entry 'AWS/CLK' 'display aws-clk-arc' \
			(dm$config = 'aws-clk-arc')
	entry 'AWS/ISS' 'display iss-surface1-arc' \
			(dm$config = 'iss-surface1-arc')
	entry 'AWS/SLW' 'display aws-slw-arc' \
			(dm$config = 'aws-slw-arc')
endmenu

define widget aws-timeseries-menu intmenu 'AWS TimeSeries displays'

	entry 'ISS' 'display iss-surface1' \
		(dm$config = 'iss-surface1')
	entry 'CLK' 'display aws-clk' \
		(dm$config = 'aws-clk')
	entry 'SLW' 'display aws-slw' \
		(dm$config = 'aws-slw')
	entry 'TC' 'display aws-tc' \
		(dm$config = 'aws-tc')
	entry 'RO' 'display aws-ro' \
		(dm$config = 'aws-ro')
	entry 'SKG' 'display aws-skg' \
		(dm$config = 'aws-skg')
	entry 'LT1' 'display aws-lt1' \
		(dm$config = 'aws-lt1')
	entry 'LT2' 'display aws-lt2' \
		(dm$config = 'aws-lt2')
	entry 'LT3' 'display aws-lt3' \
		(dm$config = 'aws-lt3')
	entry 'LT4' 'display aws-lt4' \
		(dm$config = 'aws-lt4')
	entry 'LT5' 'display aws-lt5' \
		(dm$config = 'aws-lt5')
	entry 'LT6' 'display aws-lt6' \
		(dm$config = 'aws-lt6')
	entry 'LT9' 'display aws-lt9' \
		(dm$config = 'aws-lt9')
endmenu

define widget shalowan-display-menu intmenu 'HKUST-Pump House'

	entry 'HKUST-Pump House Prof high' 'display shalowan-profh' \
		(dm$config = 'shalowan-profh')
	entry 'HKUST-Pump House Prof mid' 'display shalowan-profm' \
		(dm$config = 'shalowan-profm')
	entry 'HKUST-Pump House Prof low' 'display shalowan-profl' \
		(dm$config = 'shalowan-profl')
	entry 'HKUST-Pump House Prof low/med' 'display shalowan-prof2' \
		(dm$config = 'shalowan-prof2')
	entry 'HKUST-Pump House Prof low/high' 'display shalowan-prof3' \
		(dm$config = 'shalowan-prof3')

endmenu

!
! Point to a window and delete it
!
procedure point-and-shoot
	set victim 'none'
	pickwin victim
	if (victim <> 'none')
		message "Killing #" victim
		kill #victim
	else
		beep
	endif
endprocedure

!
! Remove configuration.  Looks for the current configuration in
! ConfigDir and moves it to the ./removed directory
!
procedure cfg-remove

	local file concat3(ConfigDir,"/",dm$config)
	local dest concat3(" ./removed","/",dm$config)

	message "#" concat3("mv -f ",file,dest)
	shell concat3("mv -f ",file,dest)
	local file concat(file,".dc")
	local dest concat(dest,".dc")
	message "#" concat3("mv -f ",file,dest)
	shell concat3("mv -f ",file,dest)
	display empty

endprocedure


!
! Restore configuration to its last saved state.  This amounts to
! switching to the none configuration and back to the current one.
!
procedure cfg-restore
	local original dm$config

	display none
	display #original
endprocedure

!
! Submenu for window templates.  The object here is to add a window
! from a list of common plot types with generic plot descriptions
! from a single menu entry.
!
define widget windows intmenu 'window templates'
	title 'Windows Templates'
	line
	entry 'Constant altitude plot' \
		'create-window cap cap-template big'
	entry 'Time-series strip chart' \
		'create-window tseries tseries-template xyplot'
	entry 'XYGraph time-series plot' \
		'create-window xytime xytime-template xyplot'
	entry 'Skew-t plot' \
		'create-window skewt skewt-template sounding'
	entry 'Wind profile' 'create-window wind wind-template xyplot'
	entry 'Vertical cross-section' \
		'create-window xsect xsect-template default'
	entry 'Radar plot' 'create-window radar radar-template radar'
	entry 'Real-time clock' 'create-clock'
endmenu


!
! Call newwindow with the given parameters.  Pass rename to
! newwindow so that we'll get a unique name instead of failing.
!
procedure create-window name string pdname string bmap string

	newwindow #name #pdname forcepd buttonmap #bmap rename

endprocedure


!
! Change the default exec long enough to create a clock
!
procedure create-clock
	set default_exec "fccclock"
	newwindow Clock whiteclock buttonmap default
	set default_exec "gp"
endprocedure


define widget select-source form 'wbounds-src-message'
	noheader
	newline
	label msg \
	   'Select the window whose bounds you wish plotted' color "red" \
	   font "*-fixed-*--24-*"
enddef	

define widget select-dest form 'wbounds-dest-message'
	noheader
	newline
	label msg \
	 'Select the constant-altitude plot where the bounds will be drawn' \
	 color "red" font "*-fixed-*--24-*"
enddef	

! Prompt the user to choose two windows, the first window will be
! the window whose bounds are desired, and the second will the window
! where the bounds will be placed
!
procedure send-wbounds
	local dest 'none'
	local src 'none'

	message 'Select the window whose bounds you wish plotted' color "red" \
	pickwin src
	if (src = 'none')
		return
	endif
	message 'Select the constant-altitude plot where the bounds will be drawn' \
	putc1 p_wbounds platform #src
endprocedure

!
! Submenu for maps
!
define widget Maps intmenu 'LANTEX digitized maps'
	title 'Map Overlays'
	line
	entry 'Asia' 'putc1 p_map platform asia_map'
	entry 'Terrain' 'putc1 p_map platform hk_terrain'
	entry 'Contours' 'putc2 p_map platform hk_contours icon contours'
	entry 'Roads' 'putc2 p_map platform hk_roads icon roads'
	entry 'Lakes' 'putc2 p_map platform hk_lakes icon lakes'
endmenu

!====================================================================
! Library PD tweaking:  Adjust some parameters of the plot descriptions
! we'll be using from the library
!
! Window templates have been copied into the local pd dir and modified there
!

! For rings, require the project rings module to get the rings-origin
! menu
!
parameter p_rings p_rings require 'rings, simple-color, lx-rings'
parameter p_rings p_rings icon-middle-menu lx-rings-origins

! Use the enhanced left menu for radar, and give it a default platform
! while we're at it
!
parameter p_radar p_radar icon-left-menu lx-cap-left-menu
parameter p_radar p_radar platform lidar

!
! For locations, modify the library location pd to use our project
! module instead.  Also, all of the locations have the same timezone offset,
! which is 8 hours (480 mins) ahead of GMT.  Putting it here prevents us
! from putting in defaults qualified for every location platform.
!
parameter p_loc p_loc require lx-locations
parameter p_loc p_loc timezone-offset 480

!
!=====================================================================

!
! Submenu for grids and range rings.
!
define widget GridsAndRings intmenu 'lat/lon, km grids and range ringes'
	title 'Coordinate Grids'
	line
	entry 'X-Y Grid (km)' 'sendout p_kmgrid pick'
	entry 'Lat/Lon Grid ' 'sendout p_llgrid pick'
	line
	entry 'LIDAR Range Rings' 'putc1 p_rings platform lidar'
	entry 'Ops Center Range Rings' 'putc1 p_rings platform ops-ctr'
endmenu

define widget Locations intmenu 'LANTEX location overlays'
	title 'Locations'
	line
	entry 'Ops Center, HKUST' \
		'putc2 p_loc icon ops-ctr platform ops-ctr'
	entry 'ISS on Waglan' \
		'putc1 p_iss_loc platform iss'
	entry 'HKUST-Pump House Profiler' \
		'putc1 p_iss_loc platform profiler'
	entry 'LIDAR on CLK' \
		'putc2 p_loc icon radar-loc platform lidar'
	entry 'RO Radar' \
		'putc2 p_loc icon radar-loc platform ro_radar'
	entry 'Sounding Locations' \
		'putc1 p_sdg_loc platform #sounding_sites'
	entry 'AWS locations' \
		'putc2 p_loc icon pam-loc platform #lantau_aws_sites'
endmenu

