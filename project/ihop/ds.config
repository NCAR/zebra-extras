!
! ds configuration for IHOP
!

!
! elev data lives under the project directory
!
set elevdir concat(c$projdir,"/elev")

!
! If the ZEBRA_SUBSET_RHI environment variable is set, we use 
! special directories for spol and particles where only a subset 
! of all RHIs is presented to Zebra.
!
if (getenv("ZEBRA_SUBSET_RHI") <> "UNDEFINED")
	set spolSubset concat(c$datadir,"/spol_subset")
	set particlesSubset concat(c$datadir,"/particles_subset")
else
	set spolSubset "spol"
	set particlesSubset "particles"
endif

!
! Our default source
!
source main
	directory #c$datadir
	PlatDir elev #elevdir
	PlatDir spol #spolSubset
	PlatDir particles #particlesSubset
endsource

!
! Archive source.  The /data/archive link can be moved to point to the 
! directory of interest, then run "dsrescan"
!
source archive
	directory /scr/data/archive
endsource

!
! Class definitions
!
read ds.classes

!
! Useful null platform
!
platform null
	organization	scalar
	filetype	netcdf
endplatform

!
! The radars
!
instance Sweepfile	spol particles precip.basic precip.hourly precip.storm refract_storm

!
! NWS + S-Pol composite
!
instance NCGrid		radar_composite

!
! GOES
!
instance NCGrid		goes_1km goes_4km

!
! Volumes of gridded sweeps of NWS level 2 data
!
!instance NCGrid	KAMA KDDC KFDR KFTG KFWS KGLD KICT KINX KLBB KTLX KVNX

!
! Campbell surface station near S-Pol
!
instance NCScalar	spol_surface

!
! topographic data
!
instance NCGrid		elev

!
! boundaries
!
instance BoundaryClass	boundary

!
! aircraft platforms
!
instance NCMobileScalar p3 kingair dc8


!
! Cleanup code.
!

set SECONDSPERHOUR 3600

procedure DoCleanup hours real
	truncate hours*SECONDSPERHOUR spol
	truncate hours*SECONDSPERHOUR particles
	truncate hours*SECONDSPERHOUR precip.basic
	truncate 3*hours*SECONDSPERHOUR precip.hourly
	truncate hours*SECONDSPERHOUR precip.storm
	truncate hours*SECONDSPERHOUR radar_composite
	truncate 3*hours*SECONDSPERHOUR goes_1km
	truncate 3*hours*SECONDSPERHOUR goes_4km
endprocedure

set minfree 1000000

procedure CleanupScan	
	set hours 24
	while (FreeSpace (c$datadir) < minfree and hours > 3)
		DoCleanup hours
		set hours (hours - 1)
	endwhile
endprocedure

every 600 'CleanupScan'
