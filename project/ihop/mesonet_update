#!/bin/csh
#
# Convert recent FSL mesonet files to Zebra form, and notify the
# datastore.  This script needs to run on a machine that can see 
# the FSL mesonet files.
#
unset noclobber
unalias mv

if ($#argv != 1) then
    echo "Usage: $0 <fsl_mesonet_data_dir>"
    exit 1
endif

set myname = $0:t

#
# We only want one of me; kill any others
#
onintr -	# ignore the INT signal we're about to send out...
killall -s INT $myname
onintr die	# pay attention to signals again

#
# Set up
#
set fslmesonetdir = $1
set zebradatadir = /scr/data/spol
set zebraplatform = mesonet_15
set stationlistfile = /usr/local/zebra/project/ihop/15minute_stations

set zebramesonetdir = $zebradatadir/$zebraplatform

set logfile = /tmp/$myname.log
set timestampfile = /tmp/$myname.timestamp
set newtimestampfile = /tmp/$myname.timestamp.new

#
# Get the list of FSL mesonet files modified since our last
# run.  Do this before we update the timestamp file.
#
echo "$myname ($$) started `date`" >> $logfile
if (-e $timestampfile) then
    set filelist = \
	`find $fslmesonetdir -name "*nc" -newer $timestampfile -print | sort`
else
    set filelist = `ls $fslmesonetdir/*nc`
endif

#
# Make the new timestamp file
#
echo "timestamp file for $myname created `date`" > $newtimestampfile

#
# Run fsl2zebra on all of the modified FSL files we found above
#
foreach file ($filelist)
    echo $file >> $logfile
    fsl2zebra 15 $stationlistfile $zebramesonetdir $file
end

#
# Have the data store rescan files that we updated in this run
#
foreach file (`find $zebramesonetdir -newer $newtimestampfile -print`)
    dsrescan -file $file:t $zebraplatform >>& $logfile
end

#
# Replace the old timestamp file with the new one
#
mv -f $newtimestampfile $timestampfile

echo "$myname ($$) finished `date`" >> $logfile
exit 0

#
# We get here if we're killed by a signal
#
die:

echo "$myname ($$) killed before finishing `date`" >> $logfile
exit 1
