! $Id: gp.init,v 1.2 1995-09-28 22:26:46 burghart Exp $
!
! The SCMS graphics process initialization file.
!

! Our various path variables.
!
set RequirePath concat('./modules,',RequirePath)
set MapPath concat('./maps,','MapPath')

!
! We just gotta have this one...
!
require simple-color

!
! Change the origin of an cartesian grid.
!
define widget kmgrid-origins intmenu 'cart grid origin'
	title 'Cartesian grid origin'
	line
	entry 'CP2' 'parameter #icon_component origin cp2'
	entry 'Patrick radar' 'parameter #icon_component origin ptk'
endmenu

define widget rings-origins intmenu 'range ring origins'
	title 'Range Rings Origins'
	line
	entry 'CP2 (true)' 'parameter #icon_component platform cp2'
	entry 'CP2 (pseudo-VOR)' 'parameter #icon_component platform cp2_vor'
	entry 'Orlando VOR' 'parameter #icon_component platform vor-orlando'
	entry 'Photo 1' 'parameter #icon_component platform photo1'
	entry 'Patrick radar' 'parameter #icon_component platform ptk'
endmenu

!
! Zoom to to preset x and y ranges.
!
procedure DoZoom xmin string xmax string ymin string ymax string
	parameter global x-min #xmin
	parameter global x-max #xmax
	parameter global y-min #ymin
	parameter global y-max #ymax
endprocedure

!
! Change the endpoints for an associated (presumably cross-section) window.
! We force ourselves to update (by issuing a parameter command but not actually
! changing anything) so that we'll be current if we're displaying the bounds
! of the cross-section window.
!
procedure ChangeXSect
        drawline sendendpoints

        local ptype PDParam('global', 'plot-type')
        parameter global plot-type #ptype
endprocedure

!
! Omega sonde fields.
!
define widget omegafield intmenu 'omegafield'
	title "Omega Sonde Fields"
	line
	entry 'Pressure'		'omega_fldset pres'
	entry 'Temperature'		'omega_fldset temp'
	entry 'Relative Humidity'	'omega_fldset rh'
	entry 'U wind component'	'omega_fldset u_wind'
	entry 'V wind component'	'omega_fldset v_wind'
	entry 'Dewpoint'		'omega_fldset dp'
	entry 'Wind speed'		'omega_fldset wspd'
endmenu

procedure omega_fldset name string
	parameter #icon_component x-field #name
endprocedure


!
! Movie control menu.
!
define widget movie-control intmenu 'movie control'
	title 'Movie Control'
	line
	entry 'Popup Movie Controller' 'popup movie'
	entry 'Run Movie' 'movie run'
	entry 'Stop Movie' 'movie stop'
endmenu



!
! Adjustments to range rings.
!
define widget rings-right intmenu 'rings adjustment'
	title 'Range ring options'
	line
	entry ' 2 Nm rings' 'parameter #icon_component ring-interval 2' \
		(PDParam (icon_component, "ring-interval") = '2')
	entry ' 5 Nm rings' 'parameter #icon_component ring-interval 5' \
		(PDParam (icon_component, "ring-interval") = '5')
	entry '10 Nm rings' 'parameter #icon_component ring-interval 10' \
		(PDParam (icon_component, "ring-interval") = '10')
	entry '20 Nm rings' 'parameter #icon_component ring-interval 20' \
		(PDParam (icon_component, "ring-interval") = '20')
	entry '30 Nm rings' 'parameter #icon_component ring-interval 30' \
		(PDParam (icon_component, "ring-interval") = '30')
	line
	entry '10 degree lines' \
		'parameter #icon_component azimuth-interval 10' \
		(PDParam (icon_component, "azimuth-interval") = '10')
	entry '30 degree lines' \
		'parameter #icon_component azimuth-interval 30' \
		(PDParam (icon_component, "azimuth-interval") = '30')
	entry '45 degree lines' \
		'parameter #icon_component azimuth-interval 45' \
		(PDParam (icon_component, "azimuth-interval") = '45')
	entry '90 degree lines' \
		'parameter #icon_component azimuth-interval 90' \
		(PDParam (icon_component, "azimuth-interval") = '90')
	line
	entry 'Draw labels' 'ToggleBoolean do-labels' \
	    (PDSearch (icon_component, "do-labels", "range-ring") <> "false")
	line
	submenu 'Ring color' 'simple-color'
	submenu 'Line width' 'LineWidth'
endmenu


!
! New menu for grid spacing
!
define widget kmgrid-spacing intmenu 'kmgrid-spacing'
	title 'Grid spacing'
	line
	entry '2 Nm lines' 'GridSpacing 3.71' \
		(PDParam(icon_component,'x-spacing') = '3.71')
	entry '5 Nm lines' 'GridSpacing 9.26' \
		(PDParam(icon_component,'x-spacing') = '9.26')
	entry '10 Nm lines' 'GridSpacing 18.53' \
		(PDParam(icon_component,'x-spacing') = '18.53')
	entry '20 Nm lines' 'GridSpacing 37.06' \
		(PDParam(icon_component,'x-spacing') = '37.06')
	entry '30 Nm lines' 'GridSpacing 55.60' \
		(PDParam(icon_component,'x-spacing') = '55.60')
endmenu

!
! Remove a component.
!
procedure i_remove_component
	local dm_cmd concat("remove ",ourname)
	dm concat(concat (dm_cmd, " "), icon_component)
endprocedure


!
! Adjust the limits on the global component.
!
procedure i_adjust_global procparam string
	local proc pd_paramsearch(icon_component,procparam,"global","string")
	if (proc <> "(Undefined)")
		#proc 
	else
		dm "beep"
	endif
endprocedure

!
! Adjust the limits on a component.
!
procedure i_adjust procparam string
	local rep pd_param(icon_component, "representation", "string")
	local proc pd_paramsearch(icon_component, procparam, rep, "string")
	if (proc <> "(Undefined)")
		#proc #icon_component
	else
		dm "beep"
	endif
endprocedure

!
! The pressure minval maxval adjuster.
!
procedure adj_pres_minmax comp string
	local rep pd_param(comp, "representation", "string")
	local minval pd_paramsearch(comp, "pres-minval", rep, "string")
	local maxval pd_paramsearch(comp, "pres-maxval", rep, "string")
	activate doublefloat #comp "pres-minval" "Pressure Minval: " #minval \
		"pres-maxval" "Pressure Maxval: " #maxval
endprocedure

!
! The temperature minval maxval adjuster.
!
procedure adj_temp_minmax comp string
	local rep pd_param(comp, "representation", "string")
	local minval pd_paramsearch(comp, "temp-minval", rep, "string")
	local maxval pd_paramsearch(comp, "temp-maxval", rep, "string")
	activate doublefloat #comp "temp-minval" "Temperature Minval: " \
		#minval "temp-maxval" "Temperature Maxval: " #maxval
endprocedure


!
! The highlight range adjuster.
!
procedure adj_highlight_range comp string
	local field pd_param(comp, "field", "string")
	local repr pd_param(comp, "representation", "string")
	local high_param concat(field, "-highlight")
	local highlight pd_paramsearch(comp, high_param, repr, "string")
	local range_param concat(field, "-highlight-range")
	local range pd_paramsearch(comp, range_param, repr, "string")
	activate doublefloat #comp #high_param "Highlight: " #highlight \
		#range_param "Range: " #range
endprocedure

!
! The x-spacing y-spacing adjuster.
!
procedure adj_xy_spacing comp string
	local x pd_param(comp, "x-spacing", "string")
	local y pd_param(comp, "y-spacing", "string")
	activate doublefloat #comp "x-spacing" "X-Spacing: " #x \
		"y-spacing" "Y-Spacing: " #y
endprocedure

!
! The x min max adjuster.
!
procedure adj_x_minmax 
	local xmin pd_paramsearch("global", "x-min", "", "string")
	local xmax pd_paramsearch("global", "x-max", "", "string")
	activate doublefloat "global" "x-min" "X Min: " #xmin \
		"x-max" "X Max: " #xmax
endprocedure

!
! The y min max adjuster.
!
procedure adj_y_minmax 
	local ymin pd_paramsearch("global", "y-min", "", "string")
	local ymax pd_paramsearch("global", "y-max", "", "string")
	activate doublefloat "global" "y-min" "Y Min: " #ymin \
		"y-max" "Y Max: " #ymax
endprocedure

!
! The arrow scale adjuster.
!
procedure adj_arrow_scale comp string
	local current pd_param(icon_component, "arrow-scale", "string")
	activate singlefloat #comp 'arrow-scale' "Arrow Scale: " #current
endprocedure


!
! GMS satellite control.
!
procedure gms_resolution which string
	if (which = "high")
		local plat 'gms'
	else
		Local plat 'gms-big'
	endif
	parameter #icon_component platform #plat
	parameter #icon_component field ir
	parameter global trigger #plat
endprocedure

procedure gms_visible plat string
	parameter #icon_component platform #plat
	parameter #icon_component field vis
	parameter global trigger #plat
endprocedure

!
! Move to center around a click without changing zoom.
!
procedure CtrMove
	local xmin pd_paramsearch('global','x-min','x','float')
	local xmax pd_paramsearch('global','x-max','x','float')
	local ymin pd_paramsearch('global','y-min','x','float')
	local ymax pd_paramsearch('global','y-max','x','float')
	local xshift (buttonx - (xmax + xmin)/2)
	local yshift (buttony - (ymax + ymin)/2)
	local newv string(xmin + xshift)
	parameter global x-min #newv
	local newv string(xmax + xshift)
	parameter global x-max #newv
	local newv string(ymin + yshift)
	parameter global y-min #newv
	local newv string(ymax + yshift)
	parameter global y-max #newv
endprocedure

!
! Get our field definitions.
!
!set DefFile (concat (concat (c$libdir, "/"), "FieldDefs"))
set DefFile "FieldDefs"
read #DefFile


define widget cp2-middle intmenu 'radar middle'
	title 'Radar options'
	line
!	submenu 'Display field' 'FieldMenu'
	entry 'S-band reflectivity' 'ChangeFldNColor reflectivity ncarrefl' \
		(PDParam (icon_component, 'field') = 'reflectivity')
	entry 'S-band velocity' 'ChangeFldNColor velocity ncarvel' \
		(PDParam (icon_component, 'field') = 'velocity')
	entry 'X-band reflectivity' 'ChangeFldNColor xrefl ncarrefl' \
		(PDParam (icon_component, 'field') = 'xrefl')
	entry '(S - X)' 'ChangeFldNColor sminusx ncarvel' \
		(PDParam (icon_component, 'field') = 'sminusx')
	entry 'ZDR' 'ChangeFldNColor zdr ncarvel' \
		(PDParam (icon_component, 'field') = 'zdr')
	line
	entry 'Surveillance only mode' 'radar_mode sur' \
		(PDParam ("global", "cp2-filter-attribute") = "sur")
	entry 'PPI only mode' 'radar_mode ppi' \
		(PDParam ("global", "cp2-filter-attribute") = "ppi")
	entry 'RHI only mode' 'radar_mode rhi' \
		(PDParam ("global", "cp2-filter-attribute") = "rhi")
	entry 'All scan modes' 'radar_mode radar' \
		(PDParam ("global", "cp2-filter-attribute") = "radar")
	line
	entry 'Single fixed angle mode' 'ToggleBoolean every-sweep' \
		(PDParam (icon_component, "every-sweep") = "false")
	line
	entry 'Raster representation' \
		'param #icon_component representation raster'
	entry 'Contour representation' \
		'param #icon_component representation contour'
	entry 'Filled contour representation' \
		'param #icon_component representation filled-contour'
	line
	submenu 'Color tables' Color-tables
endmenu

procedure radar_mode newmode string
	local param concat(PDParam(icon_component,'platform'), '-filter-attribute')
	param global #param #newmode
endprocedure

procedure ChangeFldNColor fld string table string
	param #icon_component field #fld
	param #icon_component color-table #table
endprocedure

define widget sprint-middle intmenu 'SPRINT middle'
	title 'Gridded Radar Options'
	line
	entry 'DZSH' \
		'ChangeFldNColor dzsh ncarrefl' \
		(PDParam (icon_component, 'field') = 'dzsh')
	entry 'DZXH' \
		'ChangeFldNColor dzxh ncarrefl' \
		(PDParam (icon_component, 'field') = 'dzxh')
	entry 'DZS-X' \
		'ChangeFldNColor dzs-x ncarvel' \
		(PDParam (icon_component, 'field') = 'dzs-x')
	entry 'VEL' \
		'ChangeFldNColor vel ncarvel' \
		(PDParam (icon_component, 'field') = 'vel')
	entry 'QUAL' \
		'ChangeFldNColor qual ncarrefl' \
		(PDParam (icon_component, 'field') = 'qual')
	entry 'DMNE' \
		'ChangeFldNColor dmne ncarrefl' \
		(PDParam (icon_component, 'field') = 'dmne')
	entry 'DBMXH' \
		'ChangeFldNColor dbmxh ncarrefl' \
		(PDParam (icon_component, 'field') = 'dbmxh')
	entry 'VELV' \
		'ChangeFldNColor velv ncarvel' \
		(PDParam (icon_component, 'field') = 'velv')
	entry 'ZDR' \
		'ChangeFldNColor zdr ncarvel' \
		(PDParam (icon_component, 'field') = 'zdr')
	entry 'SPECW' \
		'ChangeFldNColor specw ncarrefl' \
		(PDParam (icon_component, 'field') = 'specw')
	line
	entry 'Raster representation' \
		'param #icon_component representation raster'
	entry 'Contour representation' \
		'param #icon_component representation contour'
	entry 'Filled contour representation' \
		'param #icon_component representation filled-contour'
	line
	submenu 'Color tables' Color-tables
endmenu

procedure toggle_main
	local fld PDParam("p_radar", "field")
	if (fld = "reflectivity")
		param p_radar field velocity
		param p_radar color-table ncarvel
	else
		param p_radar field reflectivity
		param p_radar color-table ncarrefl
	endif
endprocedure	
